<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>布兰特 | 不忘初心</title>
  
  <subtitle>人处在一种默默奋斗的状态，精神就会从琐碎生活中得到升华</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="cpeixin.cn/"/>
  <updated>2020-07-21T01:45:26.624Z</updated>
  <id>cpeixin.cn/</id>
  
  <author>
    <name>Brent</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HBase RowKey设计</title>
    <link href="cpeixin.cn/2020/07/21/HBase-RowKey%E8%AE%BE%E8%AE%A1/"/>
    <id>cpeixin.cn/2020/07/21/HBase-RowKey%E8%AE%BE%E8%AE%A1/</id>
    <published>2020-07-21T01:42:33.000Z</published>
    <updated>2020-07-21T01:45:26.624Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --><p><a name="kT7dy"></a></p><h3 id="RowKey的作用"><a href="#RowKey的作用" class="headerlink" title="RowKey的作用"></a>RowKey的作用</h3><p><a name="i3ILb"></a></p><h4 id="RowKey在查询中的作用"><a href="#RowKey在查询中的作用" class="headerlink" title="RowKey在查询中的作用"></a>RowKey在查询中的作用</h4><p>HBase中RowKey可以唯一标识一行记录，在HBase中检索数据有以下三种方式：</p><ul><li>通过 <strong>get</strong> 方式，指定 <strong>RowKey</strong> 获取唯一一条记录<br></li><li>通过 <strong>scan</strong> 方式，设置 <strong>startRow</strong> 和 <strong>stopRow</strong> 参数进行范围匹配<br></li><li><strong>全表扫描</strong>，即直接扫描整张表中所有行记录</li></ul><p><br>当大量请求访问HBase集群的一个或少数几个节点，造成少数RegionServer的读写请求过多、负载过大，而其他RegionServer负载却很小，这样就造成<strong>热点现象</strong>。<br><br><br>大量访问会使热点Region所在的主机负载过大，引起性能下降，甚至导致Region不可用。所以我们在向HBase中插入数据的时候，应尽量均衡地把记录分散到不同的Region里去，平衡每个Region的压力。<br><br><br>下面根据一个例子分别介绍下根据RowKey进行查询的时候支持的情况。<br>如果我们RowKey设计为<code>uid</code>+<code>phone</code>+<code>name</code>，那么这种设计可以很好的支持一下的场景:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uid&#x3D;873969725 AND phone&#x3D;18900000000 AND name&#x3D;zhangsanuid&#x3D; 873969725 AND phone&#x3D;18900000000uid&#x3D; 873969725 AND phone&#x3D;189?uid&#x3D; 873969725复制代码</span><br></pre></td></tr></table></figure><p><br>难以支持的场景：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">phone&#x3D;18900000000 AND name &#x3D; zhangsanphone&#x3D;18900000000 name&#x3D;zhangsan复制代码</span><br></pre></td></tr></table></figure><p><br>从上面的例子中可以看出，在进行查询的时候，根据RowKey从前向后匹配，所以我们在设计RowKey的时候选择好字段之后，还应该结合我们的实际的高频的查询场景来组合选择的字段，越高频的查询字段排列越靠左。<br></p><p><a name="BUcSY"></a></p><h4 id="RowKey在Region中的作用"><a href="#RowKey在Region中的作用" class="headerlink" title="RowKey在Region中的作用"></a>RowKey在Region中的作用</h4><p>在 HBase 中，Region 相当于一个数据的分片，每个 Region 都有<code>StartRowKey</code>和<code>StopRowKey</code>，这是表示 Region 存储的 RowKey 的范围，HBase 表的数据时按照 RowKey 来分散到不同的 Region，要想将数据记录均衡的分散到不同的Region中去，因此需要 RowKey 满足这种散列的特点。<br><br><br>此外，在数据读写过程中也是与RowKey 密切相关，RowKey在读写过程中的作用：</p><ul><li>读写数据时通过 RowKey 找到对应的 Region；<br></li><li>MemStore 中的数据是按照 RowKey 的字典序排序；<br></li><li>HFile 中的数据是按照 RowKey 的字典序排序。<br></li></ul><p><a name="2ZtXF"></a></p><h3 id="RowKey的设计"><a href="#RowKey的设计" class="headerlink" title="RowKey的设计"></a>RowKey的设计</h3><p>在HBase中RowKey在数据检索和数据存储方面都有重要的作用，一个好的RowKey设计会影响到数据在HBase中的分布，还会影响我们查询效率，所以一个好的RowKey的设计方案是多么重要。首先我们先来了解下RowKey的设计原则。<br></p><p><a name="hC4Pc"></a></p><h4 id="RowKey设计原则"><a href="#RowKey设计原则" class="headerlink" title="RowKey设计原则"></a>RowKey设计原则</h4><p><strong>长度原则</strong><br>RowKey是一个二进制码流，可以是任意字符串，最大长度为64kb，实际应用中一般为10-100byte，以byte[]形式保存，一般设计成定长。建议越短越好，不要超过16个字节，原因如下：</p><ul><li>数据的持久化文件HFile中时按照Key-Value存储的，如果RowKey过长，例如超过100byte，那么1000w行的记录，仅RowKey就需占用近1GB的空间。这样会极大影响HFile的存储效率。<br></li><li>MemStore会缓存部分数据到内存中，若RowKey字段过长，内存的有效利用率就会降低，就不能缓存更多的数据，从而降低检索效率。<br></li><li>目前操作系统都是64位系统，内存8字节对齐，控制在16字节，8字节的整数倍利用了操作系统的最佳特性。<br></li></ul><p><strong><br></strong>唯一原则<strong><br>必须在设计上保证RowKey的唯一性。由于在HBase中数据存储是Key-Value形式，若向HBase中同一张表插入相同RowKey的数据，则原先存在的数据会被新的数据覆盖。<br></strong><br><strong>排序原则</strong><br>HBase的RowKey是按照ASCII有序排序的，因此我们在设计RowKey的时候要充分利用这点。<br><strong><br></strong>散列原则**<br>设计的RowKey应均匀的分布在各个HBase节点上。<br></p><p><a name="0wYMP"></a></p><h4 id="RowKey字段选择"><a href="#RowKey字段选择" class="headerlink" title="RowKey字段选择"></a>RowKey字段选择</h4><p>RowKey字段的选择，遵循的<strong>最基本原则是唯一性</strong>，RowKey必须能够唯一的识别一行数据。无论应用的负载特点是什么样，RowKey字段都应该<strong>参考最高频的查询场景</strong>。<br><br><br>数据库通常都是以如何高效的读取和消费数据为目的，而不是数据存储本身。然后，结合具体的负载特点，再对选取的RowKey字段值进行改造，组合字段场景下需要重点考虑字段的顺序。<br><a name="8vTR8"></a></p><h3><a href="#" class="headerlink"></a></h3><p><a name="2bEL3"></a></p><h4 id="避免数据热点的方法"><a href="#避免数据热点的方法" class="headerlink" title="避免数据热点的方法"></a>避免数据热点的方法</h4><p>在对HBase的读写过程中，如何避免热点现象呢？主要有以下几种方法：<br><strong><br></strong>Reversing<strong><br>如果经初步设计出的RowKey在数据分布上不均匀，但RowKey尾部的数据却呈现出了良好的随机性，此时，可以考虑将RowKey的信息翻转，或者直接将尾部的bytes提前到RowKey的开头。Reversing可以有效的使RowKey随机分布，但是牺牲了RowKey的有序性。<br>缺点：利于Get操作，但不利于Scan操作，因为数据在原RowKey上的自然顺序已经被打乱。<br></strong><br><strong>Salting</strong><br>Salting（加盐）的原理是在原RowKey的前面添加固定长度的随机数，也就是给RowKey分配一个随机前缀使它和之间的RowKey的开头不同。随机数能保障数据在所有Regions间的负载均衡。<br>缺点：因为添加的是随机数，基于原RowKey查询时无法知道随机数是什么，那样在查询的时候就需要去各个可能的Regions中查找，Salting对于读取是利空的。并且加盐这种方式增加了读写时的吞吐量。<br><strong><br></strong>Hashing**<br>基于 RowKey 的完整或部分数据进行 Hash，而后将Hashing后的值完整替换或部分替换原RowKey的前缀部分。这里说的 hash 包含 MD5、sha1、sha256 或 sha512 等算法。<br>缺点：与 Reversing 类似，Hashing 也不利于 Scan，因为打乱了原RowKey的自然顺序。<br></p><p><a name="O1jJU"></a></p><h3 id="RowKey设计案例剖析"><a href="#RowKey设计案例剖析" class="headerlink" title="RowKey设计案例剖析"></a>RowKey设计案例剖析</h3><p><strong>1. 查询某用户在某应用中的操作记录</strong></p><blockquote><p>reverse(userid) + appid + timestamp</p></blockquote><p><strong>2. 查询某用户在某应用中的操作记录（优先展现最近的数据）</strong></p><blockquote><p>reverse(userid) + appid + (Long.Max_Value - timestamp)</p></blockquote><p><strong>3. 查询某用户在某段时间内所有应用的操作记录</strong></p><blockquote><p>reverse(userid) + timestamp + appid</p></blockquote><p><strong>4. 查询某用户的基本信息</strong></p><blockquote><p>reverse(userid)</p></blockquote><p><strong>5. 查询某eventid记录信息</strong></p><blockquote><p>salt + eventid + timestamp</p></blockquote><p><br>如果 <code>userid</code>是按数字递增的，并且长度不一，可以先预估 <code>userid</code> 最大长度，然后将<code>userid</code>进行翻转，再在翻转之后的字符串后面补0（至最大长度）；如果长度固定，直接进行翻转即可（如手机号码）。<br>在第5个例子中，加盐的目的是为了增加查询的并发性，加入Slat的范围是0~n，可以将数据分为n个split同时做scan操作，有利于提高查询效率。<br></p><p><a name="QsQPN"></a></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>在HBase的使用过程，设计RowKey是一个很重要的一个环节。我们在进行RowKey设计的时候可参照如下步骤：</p><ul><li>结合业务场景特点，选择合适的字段来做为RowKey，并且按照查询频次来放置字段顺序<br></li><li>通过设计的RowKey能尽可能的将数据打散到整个集群中，均衡负载，避免热点问题<br></li><li>设计的RowKey应尽量简短<br></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;a name=&quot;kT7dy&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3 id=&quot;RowKey的作用&quot;&gt;&lt;a href=&quot;#RowKey的作用&quot; class=&quot;h
      
    
    </summary>
    
    
      <category term="大数据" scheme="cpeixin.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="HBase" scheme="cpeixin.cn/tags/HBase/"/>
    
  </entry>
  
  <entry>
    <title>数据仓库超详细案例</title>
    <link href="cpeixin.cn/2020/07/07/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E8%B6%85%E8%AF%A6%E7%BB%86%E6%A1%88%E4%BE%8B/"/>
    <id>cpeixin.cn/2020/07/07/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E8%B6%85%E8%AF%A6%E7%BB%86%E6%A1%88%E4%BE%8B/</id>
    <published>2020-07-07T09:17:57.000Z</published>
    <updated>2020-08-03T09:19:05.745Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --><p>以下这篇博客转载自<a href="https://www.cnblogs.com/ttzzyy/p/13255841.html" target="_blank" rel="external nofollow noopener noreferrer">数据仓库案例</a>，巨详细👍👍👍👍👍<br><a name="9oBBW"></a></p><h1 id="离线数据仓库"><a href="#离线数据仓库" class="headerlink" title="离线数据仓库"></a>离线数据仓库</h1><blockquote><p>数据仓库（Data WareHouse）是为企业所有决策制定过程，提供所有系统数据支持的战略集合<br>通过对数据仓库中数据的分析，可以帮助企业，改进业务流程、控制、成本、提高产品质量等<br>数据仓库，并不是数据最终目的地，而是为数据最终的目的地做好准备：清洗、转义、分类、重组、合并、拆分、统计等等</p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445205-31fdcfc5-e2d2-41a6-b5cc-624c31b3e574.png#align=left&display=inline&height=744&margin=%5Bobject%20Object%5D&originHeight=744&originWidth=1234&size=0&status=done&style=none&width=1234" alt><br><a name="blogTitle0"></a></p><h2 id="1-项目简介"><a href="#1-项目简介" class="headerlink" title="1 项目简介"></a>1 项目简介</h2><p><a name="blogTitle1"></a></p><h3 id="1-1-项目需求"><a href="#1-1-项目需求" class="headerlink" title="1.1 项目需求"></a>1.1 项目需求</h3><ol><li>用户行为数据采集平台搭建</li><li>业务数据采集平台搭建</li><li>数据仓库维度建模</li><li>分析：用户、流量、会员、商品、销售、地区、活动等主题</li><li>采用即席查询工具，随时进行指标分析</li><li>对集群性能进行监控，发生异常需要报警</li><li>元数据管理</li><li>质量监控<br><a name="blogTitle2"></a><h3 id="1-2-技术选型"><a href="#1-2-技术选型" class="headerlink" title="1.2 技术选型"></a>1.2 技术选型</h3></li></ol><ul><li><p>数据采集功能如何技术选型</p><table><thead><tr><th align="center">采集框架名称</th><th>主要功能</th></tr></thead><tbody><tr><td align="center">Sqoop</td><td>大数据平台和关系型数据库的导入导出</td></tr><tr><td align="center">Datax</td><td>大数据平台和关系型数据库的导入导出</td></tr><tr><td align="center">flume</td><td>擅长日志数据的采集和解析</td></tr><tr><td align="center">logstash</td><td>擅长日志数据的采集和解析</td></tr><tr><td align="center">maxwell</td><td>常用作实时解析mysql的binlog数据</td></tr><tr><td align="center">canal</td><td>常用作实时解析mysql的binlog数据</td></tr><tr><td align="center">waterDrop</td><td>数据导入导出工具</td></tr></tbody></table></li><li><p>消息中间件的技术选型</p><table><thead><tr><th align="center"><strong>开源MQ</strong></th><th><strong>概述</strong></th></tr></thead><tbody><tr><td align="center">RabbitMQ</td><td>LShift 用Erlang实现，支持多协议，broker架构，重量级</td></tr><tr><td align="center">ZeroMQ</td><td>AMQP最初设计者iMatix公司实现，轻量消息内核，无broker设计。C++实现</td></tr><tr><td align="center">Kafka</td><td>LinkedIn用Scala语言实现，支持hadoop数据并行加载</td></tr><tr><td align="center">ActiveMQ</td><td>Apach的一种JMS具体实现，支持代理和p2p部署。支持多协议。Java实现</td></tr><tr><td align="center">Redis</td><td>Key-value NoSQL数据库，有MQ的功能</td></tr><tr><td align="center">MemcacheQ</td><td>国人利用memcache缓冲队列协议开发的消息队列,C/C++实现</td></tr></tbody></table></li><li><p>数据永久存储技术框架选型</p><table><thead><tr><th align="center">框架名称</th><th>主要用途</th></tr></thead><tbody><tr><td align="center">HDFS</td><td>分布式文件存储系统</td></tr><tr><td align="center">Hbase</td><td>Key，value对的nosql数据库</td></tr><tr><td align="center">Kudu</td><td>Cloudera公司开源提供的类似于Hbase的数据存储</td></tr><tr><td align="center">Hive</td><td>基于MR的数据仓库工具</td></tr></tbody></table></li><li><p>数据离线计算框架技术选型(hive引擎)</p><table><thead><tr><th align="center">框架名称</th><th>基本介绍</th></tr></thead><tbody><tr><td align="center">MapReduce</td><td>最早期的分布式文件计算系统</td></tr><tr><td align="center">Spark</td><td>基于spark，一站式解决批流处理问题</td></tr><tr><td align="center">Flink</td><td>基于flink，一站式解决批流处理问题</td></tr></tbody></table></li><li><p>分析数据库选型</p><table><thead><tr><th>对比项目</th><th align="center">Druid</th><th align="center">Kylin</th><th align="center">Presto</th><th align="center">Impala</th><th align="center">ES</th></tr></thead><tbody><tr><td>亚秒级响应</td><td align="center">√</td><td align="center">√</td><td align="center">×</td><td align="center">×</td><td align="center">×</td></tr><tr><td>百亿数据集</td><td align="center">√</td><td align="center">√</td><td align="center">√</td><td align="center">√</td><td align="center">√</td></tr><tr><td>SQL支持</td><td align="center">√</td><td align="center">√</td><td align="center">√</td><td align="center">√</td><td align="center">√(需插件)</td></tr><tr><td>离线</td><td align="center">√</td><td align="center">√</td><td align="center">√</td><td align="center">√</td><td align="center">√</td></tr><tr><td>实时</td><td align="center">√</td><td align="center">√</td><td align="center">×</td><td align="center">×</td><td align="center">×</td></tr><tr><td>精确去重</td><td align="center">×</td><td align="center">√</td><td align="center">√</td><td align="center">√</td><td align="center">×</td></tr><tr><td>多表Join</td><td align="center">×</td><td align="center">√</td><td align="center">√</td><td align="center">√</td><td align="center">×</td></tr><tr><td>JDBC for BI</td><td align="center">×</td><td align="center">√</td><td align="center">√</td><td align="center">√</td><td align="center">×</td></tr></tbody></table></li><li><p>其他选型</p><ul><li>任务调度：DolphinScheduler</li><li>集群监控：CM+CDH</li><li>元数据管理：Atlas</li><li>BI工具：Zeppelin、Superset<br><a name="blogTitle3"></a><h3 id="1-3-架构"><a href="#1-3-架构" class="headerlink" title="1.3 架构"></a>1.3 架构</h3><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445253-8d922f5c-47b5-4f1d-ad8e-1a71eeae15aa.png#align=left&display=inline&height=736&margin=%5Bobject%20Object%5D&originHeight=736&originWidth=1703&size=0&status=done&style=none&width=1703" alt><br><a name="blogTitle4"></a><h3 id="1-4-集群资源规划"><a href="#1-4-集群资源规划" class="headerlink" title="1.4 集群资源规划"></a>1.4 集群资源规划</h3></li></ul></li><li><p>如何确认集群规模（假设每台服务器8T磁盘，128G内存）</p><ol><li>每天日活跃用户100万，每人一天平均100条：100万 * 100条 = 1亿条</li><li>每条日志1K左右，每天1一条：1亿 / 1024 /1024 = 约100G</li><li>半年内不扩容服务器来算：100G * 180天 = 约18T</li><li>保存3个副本：18T * 3 = 54T</li><li>预留20% ~ 30%BUF：54T / 0.7 = 77T</li><li>总结：约10台服务器<blockquote><p>由于资源有限，采用3台进行制作</p></blockquote></li></ol></li></ul><table><thead><tr><th>服务名称</th><th>子服务</th><th>服务器 cdh01.cm</th><th>服务器 cdh02.cm</th><th>服务器 cdh03.cm</th></tr></thead><tbody><tr><td>HDFS</td><td>NameNode<br>DataNode<br>SecondaryNameNode</td><td>√<br>√</td><td>√</td><td>√<br>√</td></tr><tr><td>Yarn</td><td>NodeManager<br>Resourcemanager</td><td>√</td><td>√<br>√</td><td>√</td></tr><tr><td>Zookeeper</td><td>Zookeeper Server</td><td>√</td><td>√</td><td>√</td></tr><tr><td>Flume</td><td>Flume<br>Flume（消费 Kafka）</td><td>√</td><td>√</td><td>√</td></tr><tr><td>Kafka</td><td>Kafka</td><td>√</td><td>√</td><td>√</td></tr><tr><td>Hive</td><td>Hive</td><td>√</td><td></td><td></td></tr><tr><td>MySQL</td><td>MySQL</td><td>√</td><td></td><td></td></tr><tr><td>Sqoop</td><td>Sqoop</td><td>√</td><td></td><td></td></tr><tr><td>Presto</td><td>Coordinator<br>Worker</td><td>√</td><td>√</td><td>√</td></tr><tr><td>DolphinScheduler</td><td>DolphinScheduler</td><td>√</td><td></td><td></td></tr><tr><td>Druid</td><td>Druid</td><td>√</td><td>√</td><td>√</td></tr><tr><td>Kylin</td><td>Kylin</td><td>√</td><td></td><td></td></tr><tr><td>Hbase</td><td>HMaster<br>HRegionServer</td><td>√<br>√</td><td>√</td><td>√</td></tr><tr><td>Superset</td><td>Superset</td><td>√</td><td></td><td></td></tr><tr><td>Atlas</td><td>Atlas</td><td>√</td><td></td><td></td></tr><tr><td>Solr</td><td>Solr</td><td>√</td><td></td><td></td></tr></tbody></table><p><a name="blogTitle5"></a></p><h2 id="2-数据生成模块"><a href="#2-数据生成模块" class="headerlink" title="2 数据生成模块"></a>2 数据生成模块</h2><blockquote><p>此模块主要针对于用户行为数据的采集，为什么要进行用户行为数据的采集呢？<br>因为对于企业来说，用户就是钱，需要将用户的习惯等数据进行采集，以便在大数据衍生产品如用户画像标签系统进行分析，那么一般情况下用户的信息都是离线分析的，后期我们可以将分析结果存入ES等倒排索引生态中，在使用实时计算的方式匹配用户习惯，进行定制化推荐，更进一步的深度学习，对相似用户进行推荐。</p></blockquote><p><a name="blogTitle6"></a></p><h3 id="2-1-埋点数据基本格式"><a href="#2-1-埋点数据基本格式" class="headerlink" title="2.1 埋点数据基本格式"></a>2.1 埋点数据基本格式</h3><ul><li><p>公共字段：基本所有安卓手机都包含的字段<br></p></li><li><p>业务字段：埋点上报的字段，有具体的业务类型<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;ap&quot;:&quot;xxxxx&quot;,&#x2F;&#x2F;项目数据来源 app pc</span><br><span class="line">&quot;cm&quot;: &#123; &#x2F;&#x2F;公共字段</span><br><span class="line">&quot;mid&quot;: &quot;&quot;, &#x2F;&#x2F; (String) 设备唯一标识</span><br><span class="line">&quot;uid&quot;: &quot;&quot;, &#x2F;&#x2F; (String) 用户标识</span><br><span class="line">&quot;vc&quot;: &quot;1&quot;, &#x2F;&#x2F; (String) versionCode，程序版本号</span><br><span class="line">&quot;vn&quot;: &quot;1.0&quot;, &#x2F;&#x2F; (String) versionName，程序版本名</span><br><span class="line">&quot;l&quot;: &quot;zh&quot;, &#x2F;&#x2F; (String) language 系统语言</span><br><span class="line">&quot;sr&quot;: &quot;&quot;, &#x2F;&#x2F; (String) 渠道号，应用从哪个渠道来的。</span><br><span class="line">&quot;os&quot;: &quot;7.1.1&quot;, &#x2F;&#x2F; (String) Android 系统版本</span><br><span class="line">&quot;ar&quot;: &quot;CN&quot;, &#x2F;&#x2F; (String) area 区域</span><br><span class="line">&quot;md&quot;: &quot;BBB100-1&quot;, &#x2F;&#x2F; (String) model 手机型号</span><br><span class="line">&quot;ba&quot;: &quot;blackberry&quot;, &#x2F;&#x2F; (String) brand 手机品牌</span><br><span class="line">&quot;sv&quot;: &quot;V2.2.1&quot;, &#x2F;&#x2F; (String) sdkVersion</span><br><span class="line">&quot;g&quot;: &quot;&quot;, &#x2F;&#x2F; (String) gmail</span><br><span class="line">&quot;hw&quot;: &quot;1620x1080&quot;, &#x2F;&#x2F; (String) heightXwidth，屏幕宽高</span><br><span class="line">&quot;t&quot;: &quot;1506047606608&quot;, &#x2F;&#x2F; (String) 客户端日志产生时的时间</span><br><span class="line">&quot;nw&quot;: &quot;WIFI&quot;, &#x2F;&#x2F; (String) 网络模式</span><br><span class="line">&quot;ln&quot;: 0, &#x2F;&#x2F; (double) lng 经度</span><br><span class="line">&quot;la&quot;: 0 &#x2F;&#x2F; (double) lat 纬度</span><br><span class="line">&#125;,</span><br><span class="line">&quot;et&quot;: [ &#x2F;&#x2F;事件</span><br><span class="line">&#123;</span><br><span class="line">&quot;ett&quot;: &quot;1506047605364&quot;, &#x2F;&#x2F;客户端事件产生时间</span><br><span class="line">&quot;en&quot;: &quot;display&quot;, &#x2F;&#x2F;事件名称</span><br><span class="line">&quot;kv&quot;: &#123; &#x2F;&#x2F;事件结果，以 key-value 形式自行定义</span><br><span class="line">&quot;goodsid&quot;: &quot;236&quot;,</span><br><span class="line">&quot;action&quot;: &quot;1&quot;,</span><br><span class="line">&quot;extend1&quot;: &quot;1&quot;,</span><br><span class="line">&quot;place&quot;: &quot;2&quot;,</span><br><span class="line">&quot;category&quot;: &quot;75&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>示例日志（服务器时间戳 | 日志），时间戳可以有效判定网络服务的通信时长：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">1540934156385| &#123;</span><br><span class="line">&quot;ap&quot;: &quot;gmall&quot;,&#x2F;&#x2F;数仓库名</span><br><span class="line">&quot;cm&quot;: &#123;</span><br><span class="line">&quot;uid&quot;: &quot;1234&quot;,</span><br><span class="line">&quot;vc&quot;: &quot;2&quot;,</span><br><span class="line">&quot;vn&quot;: &quot;1.0&quot;,</span><br><span class="line">&quot;la&quot;: &quot;EN&quot;,</span><br><span class="line">&quot;sr&quot;: &quot;&quot;,</span><br><span class="line">&quot;os&quot;: &quot;7.1.1&quot;,</span><br><span class="line">&quot;ar&quot;: &quot;CN&quot;,</span><br><span class="line">&quot;md&quot;: &quot;BBB100-1&quot;,</span><br><span class="line">&quot;ba&quot;: &quot;blackberry&quot;,</span><br><span class="line">&quot;sv&quot;: &quot;V2.2.1&quot;,</span><br><span class="line">&quot;g&quot;: &quot;abc@gmail.com&quot;,</span><br><span class="line">&quot;hw&quot;: &quot;1620x1080&quot;,</span><br><span class="line">&quot;t&quot;: &quot;1506047606608&quot;,</span><br><span class="line">&quot;nw&quot;: &quot;WIFI&quot;,</span><br><span class="line">&quot;ln&quot;: 0,</span><br><span class="line">        &quot;la&quot;: 0</span><br><span class="line">&#125;,</span><br><span class="line">&quot;et&quot;: [</span><br><span class="line">&#123;</span><br><span class="line">&quot;ett&quot;: &quot;1506047605364&quot;, &#x2F;&#x2F;客户端事件产生时间</span><br><span class="line">&quot;en&quot;: &quot;display&quot;, &#x2F;&#x2F;事件名称</span><br><span class="line">&quot;kv&quot;: &#123; &#x2F;&#x2F;事件结果，以 key-value 形式自行定义</span><br><span class="line">&quot;goodsid&quot;: &quot;236&quot;,</span><br><span class="line">&quot;action&quot;: &quot;1&quot;,</span><br><span class="line">&quot;extend1&quot;: &quot;1&quot;,</span><br><span class="line">&quot;place&quot;: &quot;2&quot;,</span><br><span class="line">&quot;category&quot;: &quot;75&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,&#123;</span><br><span class="line">&quot;ett&quot;: &quot;1552352626835&quot;,</span><br><span class="line">&quot;en&quot;: &quot;active_background&quot;,</span><br><span class="line">&quot;kv&quot;: &#123;</span><br><span class="line">&quot;active_source&quot;: &quot;1&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="blogTitle7"></a></p><h3 id="2-2-埋点事件日志数据"><a href="#2-2-埋点事件日志数据" class="headerlink" title="2.2 埋点事件日志数据"></a>2.2 埋点事件日志数据</h3><p><a name="bfe09d0c"></a></p><h4 id="2-2-1-商品列表页"><a href="#2-2-1-商品列表页" class="headerlink" title="2.2.1 商品列表页"></a>2.2.1 商品列表页</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445220-53833589-bf8f-44b6-8c7b-465e87e1e711.png#align=left&display=inline&height=836&margin=%5Bobject%20Object%5D&originHeight=836&originWidth=482&size=0&status=done&style=none&width=482" alt></p></li><li><p>事件名称：loading</p><table><thead><tr><th>标签</th><th>含义</th></tr></thead><tbody><tr><td>action</td><td>动作：开始加载=1，加载成功=2，加载失败=3</td></tr><tr><td>loading_time</td><td>加载时长：计算下拉开始到接口返回数据的时间，（开始加载报 0，加载成 功或加载失败才上报时间）</td></tr><tr><td>loading_way</td><td>加载类型：1-读取缓存，2-从接口拉新数据 （加载成功才上报加载类型）</td></tr><tr><td>extend1</td><td>扩展字段 Extend1</td></tr><tr><td>extend2</td><td>扩展字段 Extend2</td></tr><tr><td>type</td><td>加载类型：自动加载=1，用户下拽加载=2，底部加载=3（底部条触发点击底部提示条/点击返回顶部加载）</td></tr><tr><td>type1</td><td>加载失败码：把加载失败状态码报回来（报空为加载成功，没有失败）</td></tr></tbody></table></li></ul><p><a name="ee4b4b36"></a></p><h4 id="2-2-2-商品点击"><a href="#2-2-2-商品点击" class="headerlink" title="2.2.2 商品点击"></a>2.2.2 商品点击</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445213-0bbd34e0-bb23-4e03-b90e-3ca09d0c5569.png#align=left&display=inline&height=838&margin=%5Bobject%20Object%5D&originHeight=838&originWidth=499&size=0&status=done&style=none&width=499" alt></p><ul><li>事件标签：display<table><thead><tr><th>标签</th><th>含义</th></tr></thead><tbody><tr><td>action</td><td>动作：曝光商品=1，点击商品=2</td></tr><tr><td>goodsid</td><td>商品 ID（服务端下发的 ID）</td></tr><tr><td>place</td><td>顺序（第几条商品，第一条为 0，第二条为 1，如此类推）</td></tr><tr><td>extend1</td><td>曝光类型：1 - 首次曝光 2-重复曝光</td></tr><tr><td>category</td><td>分类 ID（服务端定义的分类 ID）</td></tr></tbody></table></li></ul><p><a name="16ea94b9"></a></p><h4 id="2-2-3-商品详情页"><a href="#2-2-3-商品详情页" class="headerlink" title="2.2.3 商品详情页"></a>2.2.3 商品详情页</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445268-6588114c-b79a-4e79-8763-250f838f3536.png#align=left&display=inline&height=711&margin=%5Bobject%20Object%5D&originHeight=711&originWidth=493&size=0&status=done&style=none&width=493" alt></p><ul><li>事件标签：newsdetail<table><thead><tr><th>标签</th><th>含义</th></tr></thead><tbody><tr><td>entry</td><td>页面入口来源：应用首页=1、push=2、详情页相关推荐=3</td></tr><tr><td>action</td><td>动作：开始加载=1，加载成功=2（pv），加载失败=3, 退出页面=4</td></tr><tr><td>goodsid</td><td>商品 ID（服务端下发的 ID）</td></tr><tr><td>show_style</td><td>商品样式：0、无图、1、一张大图、2、两张图、3、三张小图、4、一张小图、 5、一张大图两张小图</td></tr><tr><td>news_staytime</td><td>页面停留时长：从商品开始加载时开始计算，到用户关闭页面所用的时间。 若中途用跳转到其它页面了，则暂停计时，待回到详情页时恢复计时。或中 途划出的时间超过 10 分钟，则本次计时作废，不上报本次数据。如未加载成 功退出，则报空。</td></tr><tr><td>loading_time</td><td>加载时长：计算页面开始加载到接口返回数据的时间 （开始加载报 0，加载 成功或加载失败才上报时间）</td></tr><tr><td>type1</td><td>加载失败码：把加载失败状态码报回来（报空为加载成功，没有失败）</td></tr><tr><td>category</td><td>分类 ID（服务端定义的分类 ID）</td></tr></tbody></table></li></ul><p><a name="571b8d48"></a></p><h4 id="2-2-4-广告"><a href="#2-2-4-广告" class="headerlink" title="2.2.4 广告"></a>2.2.4 广告</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445229-1c9049ba-ee68-4f5c-ad71-bba666fde424.png#align=left&display=inline&height=858&margin=%5Bobject%20Object%5D&originHeight=858&originWidth=513&size=0&status=done&style=none&width=513" alt></p><ul><li>事件名称：ad<table><thead><tr><th>标签</th><th>含义</th></tr></thead><tbody><tr><td>entry</td><td>入口：商品列表页=1 应用首页=2 商品详情页=3</td></tr><tr><td>action</td><td>动作： 广告展示=1 广告点击=2</td></tr><tr><td>contentType</td><td>Type: 1 商品 2 营销活动</td></tr><tr><td>displayMills</td><td>展示时长 毫秒数</td></tr><tr><td>itemId</td><td>商品 id</td></tr><tr><td>activityId</td><td>营销活动 id</td></tr></tbody></table></li></ul><p><a name="23c440b4"></a></p><h4 id="2-2-5-消息通知"><a href="#2-2-5-消息通知" class="headerlink" title="2.2.5 消息通知"></a>2.2.5 消息通知</h4><ul><li>事件标签：notification<table><thead><tr><th>标签</th><th>含义</th></tr></thead><tbody><tr><td>action</td><td>动作：通知产生=1，通知弹出=2，通知点击=3，常驻通知展示（不重复上 报，一天之内只报一次）=4</td></tr><tr><td>type</td><td>通知 id：预警通知=1，天气预报（早=2，晚=3），常驻=4</td></tr><tr><td>ap_time</td><td>客户端弹出时间</td></tr><tr><td>content</td><td>备用字段</td></tr></tbody></table></li></ul><p><a name="409b258a"></a></p><h4 id="2-2-6-用户后台活跃"><a href="#2-2-6-用户后台活跃" class="headerlink" title="2.2.6 用户后台活跃"></a>2.2.6 用户后台活跃</h4><ul><li>事件标签: active_background<table><thead><tr><th>标签</th><th>含义</th></tr></thead><tbody><tr><td>active_source</td><td>1=upgrade,2=download(下载),3=plugin_upgrade</td></tr></tbody></table></li></ul><p><a name="d3d9a6ee"></a></p><h4 id="2-2-7-评论"><a href="#2-2-7-评论" class="headerlink" title="2.2.7 评论"></a>2.2.7 评论</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445234-c1ea35e6-d731-485d-9f74-e1eccba7431e.png#align=left&display=inline&height=894&margin=%5Bobject%20Object%5D&originHeight=894&originWidth=537&size=0&status=done&style=none&width=537" alt></p><ul><li>描述：评论表（comment）<table><thead><tr><th align="center">序号</th><th>字段名称</th><th>字段描述</th><th align="center">字段类型</th><th align="center">长度</th><th align="center">允许空</th><th align="center">缺省值</th></tr></thead><tbody><tr><td align="center">1</td><td>comment_id</td><td>评论表</td><td align="center">int</td><td align="center">10,0</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">2</td><td>userid</td><td>用户 id</td><td align="center">int</td><td align="center">10,0</td><td align="center">√</td><td align="center">0</td></tr><tr><td align="center">3</td><td>p_comment_id</td><td>父级评论 id(为 0 则是<br>一级评论,不 为 0 则是回复)</td><td align="center">int</td><td align="center">10,0</td><td align="center">√</td><td align="center"></td></tr><tr><td align="center">4</td><td>content</td><td>评论内容</td><td align="center">string</td><td align="center">1000</td><td align="center">√</td><td align="center"></td></tr><tr><td align="center">5</td><td>addtime</td><td>创建时间</td><td align="center">string</td><td align="center"></td><td align="center">√</td><td align="center"></td></tr><tr><td align="center">6</td><td>other_id</td><td>评论的相关 id</td><td align="center">int</td><td align="center">10,0</td><td align="center">√</td><td align="center"></td></tr><tr><td align="center">7</td><td>praise_count</td><td>点赞数量</td><td align="center">int</td><td align="center">10,0</td><td align="center">√</td><td align="center">0</td></tr><tr><td align="center">8</td><td>reply_count</td><td>回复数量</td><td align="center">int</td><td align="center">10,0</td><td align="center">√</td><td align="center">0</td></tr></tbody></table></li></ul><p><a name="aa37918b"></a></p><h4 id="2-2-8-收藏"><a href="#2-2-8-收藏" class="headerlink" title="2.2.8 收藏"></a>2.2.8 收藏</h4><ul><li>描述：收藏（favorites）<table><thead><tr><th align="center">序号</th><th>字段名称</th><th>字段描述</th><th align="center">字段类型</th><th align="center">长度</th><th align="center">允许空</th><th align="center">缺省值</th></tr></thead><tbody><tr><td align="center">1</td><td>id</td><td>主键</td><td align="center">int</td><td align="center">10,0</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">2</td><td>course_id</td><td>商品 id</td><td align="center">int</td><td align="center">10,0</td><td align="center">√</td><td align="center">0</td></tr><tr><td align="center">3</td><td>userid</td><td>用户 ID</td><td align="center">int</td><td align="center">10,0</td><td align="center">√</td><td align="center">0</td></tr><tr><td align="center">4</td><td>add_time</td><td>创建时间</td><td align="center">string</td><td align="center"></td><td align="center">√</td><td align="center"></td></tr></tbody></table></li></ul><p><a name="2407bbc4"></a></p><h4 id="2-2-9-点赞"><a href="#2-2-9-点赞" class="headerlink" title="2.2.9 点赞"></a>2.2.9 点赞</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445204-a4518660-4192-4dc1-b934-848b40a364d9.png#align=left&display=inline&height=772&margin=%5Bobject%20Object%5D&originHeight=772&originWidth=493&size=0&status=done&style=none&width=493" alt></p><ul><li>描述：所有的点赞表（praise）<table><thead><tr><th align="center">序号</th><th>字段名称</th><th>字段描述</th><th align="center">字段类型</th><th align="center">长度</th><th align="center">允许空</th><th align="center">缺省值</th></tr></thead><tbody><tr><td align="center">1</td><td>id</td><td>主键 id</td><td align="center">int</td><td align="center">10,0</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">2</td><td>userid</td><td>用户 id</td><td align="center">int</td><td align="center">10,0</td><td align="center">√</td><td align="center"></td></tr><tr><td align="center">3</td><td>target_id</td><td>点赞的对象 id</td><td align="center">int</td><td align="center">10,0</td><td align="center">√</td><td align="center"></td></tr><tr><td align="center">4</td><td>type</td><td>创建点赞类型：1问答点赞 2问答评论点赞<br>3文章点赞数 4评论点赞</td><td align="center">int</td><td align="center">10,0</td><td align="center">√</td><td align="center"></td></tr><tr><td align="center">5</td><td>add_time</td><td>添加时间</td><td align="center">string</td><td align="center"></td><td align="center">√</td><td align="center"></td></tr></tbody></table></li></ul><p><a name="f4f90cd0"></a></p><h4 id="2-2-10-错误日志"><a href="#2-2-10-错误日志" class="headerlink" title="2.2.10 错误日志"></a>2.2.10 错误日志</h4><table><thead><tr><th align="center"><strong>errorBrief</strong></th><th align="center"><strong>错误摘要</strong></th></tr></thead><tbody><tr><td align="center"><strong>errorBrief</strong></td><td align="center"><strong>错误详情</strong></td></tr></tbody></table><p><a name="blogTitle8"></a></p><h3 id="2-3-埋点启动日志数据"><a href="#2-3-埋点启动日志数据" class="headerlink" title="2.3 埋点启动日志数据"></a>2.3 埋点启动日志数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;action&quot;:&quot;1&quot;,</span><br><span class="line">&quot;ar&quot;:&quot;MX&quot;,</span><br><span class="line">&quot;ba&quot;:&quot;HTC&quot;,</span><br><span class="line">&quot;detail&quot;:&quot;&quot;,</span><br><span class="line">&quot;en&quot;:&quot;start&quot;,</span><br><span class="line">&quot;entry&quot;:&quot;2&quot;,</span><br><span class="line">&quot;extend1&quot;:&quot;&quot;,</span><br><span class="line">&quot;g&quot;:&quot;43R2SEQX@gmail.com&quot;,</span><br><span class="line">&quot;hw&quot;:&quot;640*960&quot;,</span><br><span class="line">&quot;l&quot;:&quot;en&quot;,</span><br><span class="line">&quot;la&quot;:&quot;20.4&quot;,</span><br><span class="line">&quot;ln&quot;:&quot;-99.3&quot;,</span><br><span class="line">&quot;loading_time&quot;:&quot;2&quot;,</span><br><span class="line">&quot;md&quot;:&quot;HTC-2&quot;,</span><br><span class="line">&quot;mid&quot;:&quot;995&quot;,</span><br><span class="line">&quot;nw&quot;:&quot;4G&quot;,</span><br><span class="line">&quot;open_ad_type&quot;:&quot;2&quot;,</span><br><span class="line">&quot;os&quot;:&quot;8.1.2&quot;,</span><br><span class="line">&quot;sr&quot;:&quot;B&quot;,</span><br><span class="line">&quot;sv&quot;:&quot;V2.0.6&quot;,</span><br><span class="line">&quot;t&quot;:&quot;1561472502444&quot;,</span><br><span class="line">&quot;uid&quot;:&quot;995&quot;,</span><br><span class="line">&quot;vc&quot;:&quot;10&quot;,</span><br><span class="line">&quot;vn&quot;:&quot;1.3.4&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>事件标签: start<table><thead><tr><th>标签</th><th>含义</th></tr></thead><tbody><tr><td>entry</td><td>入 口 ： push=1 ， widget=2 ， icon=3 ， notification=4, lockscreen_widget =5</td></tr><tr><td>open_ad_type</td><td>开屏广告类型: 开屏原生广告=1, 开屏插屏广告=2</td></tr><tr><td>action</td><td>状态：成功=1 失败=2</td></tr><tr><td>loading_time</td><td>加载时长：计算下拉开始到接口返回数据的时间，（开始加载报 0，加载成 功或加载失败才上报时间）</td></tr><tr><td>detail</td><td>失败码（没有则上报空）</td></tr><tr><td>extend1</td><td>失败的 message（没有则上报空）</td></tr><tr><td>en</td><td>日志类型 start</td></tr></tbody></table></li></ul><p><a name="blogTitle9"></a></p><h3 id="2-4-数据生成脚本"><a href="#2-4-数据生成脚本" class="headerlink" title="2.4 数据生成脚本"></a>2.4 数据生成脚本</h3><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445276-36599c24-74d5-4b7f-8674-1979b36b32cf.png#align=left&display=inline&height=815&margin=%5Bobject%20Object%5D&originHeight=815&originWidth=1918&size=0&status=done&style=none&width=1918" alt></p><blockquote><p>如下案例中将省略图中红框中的日志生成过程，直接使用Java程序构建logFile文件。</p></blockquote><p><a name="4c767f75"></a></p><h4 id="2-4-1-数据生成格式"><a href="#2-4-1-数据生成格式" class="headerlink" title="2.4.1 数据生成格式"></a>2.4.1 数据生成格式</h4><ul><li>启动日志</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445197-5930bda1-7de7-4d77-8450-d1408dde46ad.png#align=left&display=inline&height=738&margin=%5Bobject%20Object%5D&originHeight=738&originWidth=1301&size=0&status=done&style=none&width=1301" alt></p><blockquote><p>{“action”:”1”,”ar”:”MX”,”ba”:”Sumsung”,”detail”:”201”,”en”:”start”,”entry”:”4”,”extend1”:””,”g”:”<a href="mailto:69021X1Q@gmail.com" rel="external nofollow noopener noreferrer" target="_blank">69021X1Q@gmail.com</a>“,”hw”:”1080*1920”,”l”:”pt”,”la”:”-11.0”,”ln”:”-70.0”,”loading_time”:”9”,”md”:”sumsung-5”,”mid”:”244”,”nw”:”3G”,”open_ad_type”:”1”,”os”:”8.2.3”,”sr”:”D”,”sv”:”V2.1.3”,”t”:”1589612165914”,”uid”:”244”,”vc”:”16”,”vn”:”1.2.1”}</p></blockquote><ul><li>事件日志(由于转换问题，图中没有 “时间戳|”)</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445200-dd221676-3d59-4d7f-a516-52882e9754d2.png#align=left&display=inline&height=810&margin=%5Bobject%20Object%5D&originHeight=810&originWidth=1300&size=0&status=done&style=none&width=1300" alt></p><blockquote><p>1589695383284|{“cm”:{“ln”:”-79.4”,”sv”:”V2.5.3”,”os”:”8.0.6”,”g”:”<a href="mailto:81614U54@gmail.com" rel="external nofollow noopener noreferrer" target="_blank">81614U54@gmail.com</a>“,”mid”:”245”,”nw”:”WIFI”,”l”:”pt”,”vc”:”6”,”hw”:”1080*1920”,”ar”:”MX”,”uid”:”245”,”t”:”1589627025851”,”la”:”-39.6”,”md”:”HTC-7”,”vn”:”1.3.5”,”ba”:”HTC”,”sr”:”N”},”ap”:”app”,”et”:[{“ett”:”1589650631883”,”en”:”display”,”kv”:{“goodsid”:”53”,”action”:”2”,”extend1”:”2”,”place”:”3”,”category”:”50”}},{“ett”:”1589690866312”,”en”:”newsdetail”,”kv”:{“entry”:”3”,”goodsid”:”54”,”news_staytime”:”1”,”loading_time”:”6”,”action”:”4”,”showtype”:”0”,”category”:”78”,”type1”:””}},{“ett”:”1589641734037”,”en”:”loading”,”kv”:{“extend2”:””,”loading_time”:”0”,”action”:”1”,”extend1”:””,”type”:”2”,”type1”:”201”,”loading_way”:”2”}},{“ett”:”1589687684878”,”en”:”ad”,”kv”:{“activityId”:”1”,”displayMills”:”92030”,”entry”:”3”,”action”:”5”,”contentType”:”0”}},{“ett”:”1589632980772”,”en”:”active_background”,”kv”:{“active_source”:”1”}},{“ett”:”1589682030324”,”en”:”error”,”kv”:{“errorDetail”:”java.lang.NullPointerException\n at cn.lift.appIn.web.AbstractBaseController.validInbound(AbstractBaseController.java:72)\n at cn.lift.dfdf.web.AbstractBaseController.validInbound”,”errorBrief”:”at cn.lift.dfdf.web.AbstractBaseController.validInbound(AbstractBaseController.java:72)”}},{“ett”:”1589675065650”,”en”:”comment”,”kv”:{“p_comment_id”:2,”addtime”:”1589624299628”,”praise_count”:509,”other_id”:6,”comment_id”:7,”reply_count”:35,”userid”:3,”content”:”关色芦候佰间纶珊斑禁尹赞涤仇彭企呵姜毅”}},{“ett”:”1589631359459”,”en”:”favorites”,”kv”:{“course_id”:7,”id”:0,”add_time”:”1589681240066”,”userid”:7}},{“ett”:”1589616574187”,”en”:”praise”,”kv”:{“target_id”:1,”id”:7,”type”:3,”add_time”:”1589642497314”,”userid”:8}}]}</p></blockquote><p><a name="e84eff3b"></a></p><h4 id="2-4-2-创建maven工程"><a href="#2-4-2-创建maven工程" class="headerlink" title="2.4.2 创建maven工程"></a>2.4.2 创建maven工程</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445354-3c28f41c-e63c-4fb9-84d2-2758e24117d7.png#align=left&display=inline&height=356&margin=%5Bobject%20Object%5D&originHeight=356&originWidth=1501&size=0&status=done&style=none&width=1501" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445239-29830e5f-2628-4b61-b25c-860285f21cc5.png#align=left&display=inline&height=733&margin=%5Bobject%20Object%5D&originHeight=733&originWidth=1500&size=0&status=done&style=none&width=1500" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445257-f8650a51-09ee-42f3-b9e6-c374f207c5b9.png#align=left&display=inline&height=402&margin=%5Bobject%20Object%5D&originHeight=402&originWidth=1501&size=0&status=done&style=none&width=1501" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445238-b3a082a7-5282-4ffe-b763-62f4d159a8b3.png#align=left&display=inline&height=395&margin=%5Bobject%20Object%5D&originHeight=395&originWidth=1501&size=0&status=done&style=none&width=1501" alt></p><ul><li><p>data-producer：pom.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--版本号统一--&gt;</span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;slf4j.version&gt;1.7.20&lt;&#x2F;slf4j.version&gt;</span><br><span class="line">        &lt;logback.version&gt;1.0.7&lt;&#x2F;logback.version&gt;</span><br><span class="line">    &lt;&#x2F;properties&gt;</span><br><span class="line">    &lt;dependencies&gt; &lt;!--阿里巴巴开源 json 解析框架--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;fastjson&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.2.51&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt; &lt;!--日志生成框架--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;ch.qos.logback&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;logback-core&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;logback.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;ch.qos.logback&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;logback-classic&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;logback.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.projectlombok&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;lombok&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.18.10&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;&#x2F;dependencies&gt;</span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-compiler-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;2.3.2&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;source&gt;1.8&lt;&#x2F;source&gt;</span><br><span class="line">                    &lt;target&gt;1.8&lt;&#x2F;target&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-assembly-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;descriptorRefs&gt;</span><br><span class="line">                        &lt;descriptorRef&gt;jar-with-dependencies&lt;&#x2F;descriptorRef&gt;</span><br><span class="line">                    &lt;&#x2F;descriptorRefs&gt;</span><br><span class="line">                    &lt;archive&gt;</span><br><span class="line">                        &lt;manifest&gt;</span><br><span class="line">                            &lt;!--主类名--&gt;</span><br><span class="line">                            &lt;mainClass&gt;com.heaton.bigdata.datawarehouse.app.App&lt;&#x2F;mainClass&gt;</span><br><span class="line">                        &lt;&#x2F;manifest&gt;</span><br><span class="line">                    &lt;&#x2F;archive&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;make-assembly&lt;&#x2F;id&gt;</span><br><span class="line">                        &lt;phase&gt;package&lt;&#x2F;phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;single&lt;&#x2F;goal&gt;</span><br><span class="line">                        &lt;&#x2F;goals&gt;</span><br><span class="line">                    &lt;&#x2F;execution&gt;</span><br><span class="line">                &lt;&#x2F;executions&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">        &lt;&#x2F;plugins&gt;</span><br><span class="line">    &lt;&#x2F;build&gt;</span><br></pre></td></tr></table></figure></li><li><p>data-producer：logback.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;configuration debug&#x3D;&quot;false&quot;&gt; &lt;!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 --&gt;</span><br><span class="line">    &lt;property name&#x3D;&quot;LOG_HOME&quot; value&#x3D;&quot;&#x2F;root&#x2F;logs&#x2F;&quot;&#x2F;&gt; &lt;!-- 控制台输出 --&gt;</span><br><span class="line">    &lt;appender name&#x3D;&quot;STDOUT&quot; class&#x3D;&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;</span><br><span class="line">        &lt;encoder</span><br><span class="line">                class&#x3D;&quot;ch.qos.logback.classic.encoder.PatternLayoutEncoder&quot;&gt; &lt;!--格式化输出：%d 表示日期，%thread 表示线程名，%-5level：级别从左显示 5 个字符宽度%msg： 日志消息，%n 是换行符 --&gt;</span><br><span class="line">            &lt;pattern&gt;%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;50&#125; - %msg%n&lt;&#x2F;pattern&gt;</span><br><span class="line">        &lt;&#x2F;encoder&gt;</span><br><span class="line">    &lt;&#x2F;appender&gt; &lt;!-- 按照每天生成日志文件。存储事件日志 --&gt;</span><br><span class="line">    &lt;appender name&#x3D;&quot;FILE&quot;</span><br><span class="line">              class&#x3D;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;!-- &lt;File&gt;$&#123;LOG_HOME&#125;&#x2F;app.log&lt;&#x2F;File&gt;设置日志不超过$&#123;log.max.size&#125;时的保存路径，注意， 如果是 web 项目会保存到 Tomcat 的 bin 目录 下 --&gt;</span><br><span class="line">        &lt;rollingPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt; &lt;!--日志文件输出的文件名 --&gt;</span><br><span class="line">            &lt;FileNamePattern&gt;$&#123;LOG_HOME&#125;&#x2F;app-%d&#123;yyyy-MM-dd&#125;.log&lt;&#x2F;FileNamePattern&gt; &lt;!--日志文件保留天数 --&gt;</span><br><span class="line">            &lt;MaxHistory&gt;30&lt;&#x2F;MaxHistory&gt;</span><br><span class="line">        &lt;&#x2F;rollingPolicy&gt;</span><br><span class="line">        &lt;encoder class&#x3D;&quot;ch.qos.logback.classic.encoder.PatternLayoutEncoder&quot;&gt;</span><br><span class="line">            &lt;pattern&gt;%msg%n&lt;&#x2F;pattern&gt;</span><br><span class="line">        &lt;&#x2F;encoder&gt; &lt;!--日志文件最大的大小 --&gt;</span><br><span class="line">        &lt;triggeringPolicy class&#x3D;&quot;ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy&quot;&gt;</span><br><span class="line">            &lt;MaxFileSize&gt;10MB&lt;&#x2F;MaxFileSize&gt;</span><br><span class="line">        &lt;&#x2F;triggeringPolicy&gt;</span><br><span class="line">    &lt;&#x2F;appender&gt; &lt;!--异步打印日志--&gt;</span><br><span class="line">    &lt;appender name&#x3D;&quot;ASYNC_FILE&quot;</span><br><span class="line">              class&#x3D;&quot;ch.qos.logback.classic.AsyncAppender&quot;&gt; &lt;!-- 不丢失日志.默认的,如果队列的 80%已满,则会丢弃 TRACT、DEBUG、INFO 级别的日志 --&gt;</span><br><span class="line">        &lt;discardingThreshold&gt;0&lt;&#x2F;discardingThreshold&gt; &lt;!-- 更改默认的队列的深度,该值会影响性能.默认值为 256 --&gt;</span><br><span class="line">        &lt;queueSize&gt;512&lt;&#x2F;queueSize&gt; &lt;!-- 添加附加的 appender,最多只能添加一个 --&gt;</span><br><span class="line">        &lt;appender-ref ref&#x3D;&quot;FILE&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;appender&gt; &lt;!-- 日志输出级别 --&gt;</span><br><span class="line">    &lt;root level&#x3D;&quot;INFO&quot;&gt;</span><br><span class="line">        &lt;appender-ref ref&#x3D;&quot;STDOUT&quot;&#x2F;&gt;</span><br><span class="line">        &lt;appender-ref ref&#x3D;&quot;ASYNC_FILE&quot;&#x2F;&gt;</span><br><span class="line">        &lt;appender-ref ref&#x3D;&quot;error&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;root&gt;</span><br><span class="line">&lt;&#x2F;configuration&gt;</span><br></pre></td></tr></table></figure></li><li><p>data-flume：pom.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.flume&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;flume-ng-core&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.9.0&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;&#x2F;dependencies&gt;</span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-compiler-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;2.3.2&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;source&gt;1.8&lt;&#x2F;source&gt;</span><br><span class="line">                    &lt;target&gt;1.8&lt;&#x2F;target&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">        &lt;&#x2F;plugins&gt;</span><br><span class="line">    &lt;&#x2F;build&gt;</span><br></pre></td></tr></table></figure></li><li><p>hive-function：pom.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.hive&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;hive-exec&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.1.1&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;&#x2F;dependencies&gt;</span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-compiler-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">                &lt;version&gt;2.3.2&lt;&#x2F;version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;source&gt;1.8&lt;&#x2F;source&gt;</span><br><span class="line">                    &lt;target&gt;1.8&lt;&#x2F;target&gt;</span><br><span class="line">                &lt;&#x2F;configuration&gt;</span><br><span class="line">            &lt;&#x2F;plugin&gt;</span><br><span class="line">        &lt;&#x2F;plugins&gt;</span><br><span class="line">    &lt;&#x2F;build&gt;</span><br></pre></td></tr></table></figure><p><a name="9ad75b74"></a></p><h4 id="2-4-3-各事件bean"><a href="#2-4-3-各事件bean" class="headerlink" title="2.4.3 各事件bean"></a>2.4.3 各事件bean</h4><blockquote><p>data-producer工程</p></blockquote></li></ul><p><a name="fd2c10ec"></a></p><h5 id="2-4-3-1-公共日志类"><a href="#2-4-3-1-公共日志类" class="headerlink" title="2.4.3.1 公共日志类"></a>2.4.3.1 公共日志类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import lombok.Data;</span><br><span class="line">&#x2F;** </span><br><span class="line">* @author Heaton</span><br><span class="line">* @email 70416450@qq.com</span><br><span class="line">* @date 2020&#x2F;4&#x2F;25 14:54 </span><br><span class="line">* @describe 公共日志类</span><br><span class="line">*&#x2F;</span><br><span class="line">@Data</span><br><span class="line">public class AppBase &#123;</span><br><span class="line">    private String mid; &#x2F;&#x2F; (String) 设备唯一</span><br><span class="line">    private String uid; &#x2F;&#x2F; (String) 用户 uid</span><br><span class="line">    private String vc; &#x2F;&#x2F; (String) versionCode，程序版本号</span><br><span class="line">    private String vn; &#x2F;&#x2F; (String) versionName，程序版本名</span><br><span class="line">    private String l; &#x2F;&#x2F; (String) 系统语言</span><br><span class="line">    private String sr; &#x2F;&#x2F; (String) 渠道号，应用从哪个渠道来的。</span><br><span class="line">    private String os; &#x2F;&#x2F; (String) Android 系统版本</span><br><span class="line">    private String ar; &#x2F;&#x2F; (String) 区域</span><br><span class="line">    private String md; &#x2F;&#x2F; (String) 手机型号</span><br><span class="line">    private String ba; &#x2F;&#x2F; (String) 手机品牌</span><br><span class="line">    private String sv; &#x2F;&#x2F; (String) sdkVersion</span><br><span class="line">    private String g; &#x2F;&#x2F; (String) gmail</span><br><span class="line">    private String hw; &#x2F;&#x2F; (String) heightXwidth，屏幕宽高</span><br><span class="line">    private String t; &#x2F;&#x2F; (String) 客户端日志产生时的时间</span><br><span class="line">    private String nw; &#x2F;&#x2F; (String) 网络模式</span><br><span class="line">    private String ln; &#x2F;&#x2F; (double) lng 经度</span><br><span class="line">    private String la; &#x2F;&#x2F; (double) lat 纬度</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="b18452f7"></a></p><h5 id="2-4-3-2-启动日志类"><a href="#2-4-3-2-启动日志类" class="headerlink" title="2.4.3.2 启动日志类"></a>2.4.3.2 启动日志类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import lombok.Data;</span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author Heaton</span><br><span class="line"> * @email 70416450@qq.com</span><br><span class="line"> * @date 2020&#x2F;4&#x2F;25 14:54</span><br><span class="line"> * @describe 启动日志类</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Data</span><br><span class="line">public class AppStart extends AppBase &#123;</span><br><span class="line">    private String entry;&#x2F;&#x2F;入口： push&#x3D;1，widget&#x3D;2，icon&#x3D;3，notification&#x3D;4, lockscreen_widget</span><br><span class="line">    private String open_ad_type;&#x2F;&#x2F;开屏广告类型: 开屏原生广告&#x3D;1, 开屏插屏广告&#x3D;2</span><br><span class="line">    private String action;&#x2F;&#x2F;状态：成功&#x3D;1 失败&#x3D;2</span><br><span class="line">    private String loading_time;&#x2F;&#x2F;加载时长：计算下拉开始到接口返回数据的时间，（开始加载报 0，加载成功或加载失败才上报时间）</span><br><span class="line">    private String detail;&#x2F;&#x2F;失败码（没有则上报空）</span><br><span class="line">    private String extend1;&#x2F;&#x2F;失败的 message（没有则上报空）</span><br><span class="line">    private String en;&#x2F;&#x2F;启动日志类型标记</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="9355740a"></a></p><h5 id="2-4-3-3-错误日志类"><a href="#2-4-3-3-错误日志类" class="headerlink" title="2.4.3.3 错误日志类"></a>2.4.3.3 错误日志类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import lombok.Data;</span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author Heaton</span><br><span class="line"> * @email 70416450@qq.com</span><br><span class="line"> * @date 2020&#x2F;4&#x2F;25 14:54</span><br><span class="line"> * @describe 错误日志类</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Data</span><br><span class="line">public class AppErrorLog &#123;</span><br><span class="line">    private String errorBrief; &#x2F;&#x2F;错误摘要</span><br><span class="line">    private String errorDetail; &#x2F;&#x2F;错误详情</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="14491595"></a></p><h5 id="2-4-3-4-商品点击日志类"><a href="#2-4-3-4-商品点击日志类" class="headerlink" title="2.4.3.4 商品点击日志类"></a>2.4.3.4 商品点击日志类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import lombok.Data;</span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author Heaton</span><br><span class="line"> * @email 70416450@qq.com</span><br><span class="line"> * @date 2020&#x2F;4&#x2F;25 14:54</span><br><span class="line"> * @describe 商品点击日志类</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Data</span><br><span class="line">public class AppDisplay &#123;</span><br><span class="line">    private String action;&#x2F;&#x2F;动作：曝光商品&#x3D;1，点击商品&#x3D;2</span><br><span class="line">    private String goodsid;&#x2F;&#x2F;商品 ID（服务端下发的 ID）</span><br><span class="line">    private String place;&#x2F;&#x2F;顺序（第几条商品，第一条为 0，第二条为 1，如此类推）</span><br><span class="line">    private String extend1;&#x2F;&#x2F;曝光类型：1 - 首次曝光 2-重复曝光（没有使用）</span><br><span class="line">    private String category;&#x2F;&#x2F;分类 ID（服务端定义的分类 ID）</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="938fbf96"></a></p><h5 id="2-4-3-5-商品详情类"><a href="#2-4-3-5-商品详情类" class="headerlink" title="2.4.3.5 商品详情类"></a>2.4.3.5 商品详情类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import lombok.Data;</span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author Heaton</span><br><span class="line"> * @email 70416450@qq.com</span><br><span class="line"> * @date 2020&#x2F;4&#x2F;25 14:54</span><br><span class="line"> * @describe 商品详情类</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Data</span><br><span class="line">public class AppNewsDetail &#123;</span><br><span class="line">    private String entry;&#x2F;&#x2F;页面入口来源：应用首页&#x3D;1、push&#x3D;2、详情页相关推荐</span><br><span class="line">    private String action;&#x2F;&#x2F;动作：开始加载&#x3D;1，加载成功&#x3D;2（pv），加载失败&#x3D;3, 退出页面&#x3D;4</span><br><span class="line">    private String goodsid;&#x2F;&#x2F;商品 ID（服务端下发的 ID）</span><br><span class="line">    private String showtype;&#x2F;&#x2F;商品样式：0、无图 1、一张大图 2、两张图 3、三张小图 4、一张小 图 5、一张大图两张小图 来源于详情页相关推荐的商品，上报样式都为 0（因为都是左文右图）</span><br><span class="line">    private String news_staytime;&#x2F;&#x2F;页面停留时长：从商品开始加载时开始计算，到用户关闭页面 所用的时间。若中途用跳转到其它页面了，则暂停计时，待回到详情页时恢复计时。或中途划出的时间超 过 10 分钟，则本次计时作废，不上报本次数据。如未加载成功退出，则报空。</span><br><span class="line">    private String loading_time;&#x2F;&#x2F;加载时长：计算页面开始加载到接口返回数据的时间 （开始加 载报 0，加载成功或加载失败才上报时间）</span><br><span class="line">    private String type1;&#x2F;&#x2F;加载失败码：把加载失败状态码报回来（报空为加载成功，没有失败）</span><br><span class="line">    private String category;&#x2F;&#x2F;分类 ID（服务端定义的分类 ID）</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="3841af8f"></a></p><h5 id="2-4-3-6-商品列表类"><a href="#2-4-3-6-商品列表类" class="headerlink" title="2.4.3.6 商品列表类"></a>2.4.3.6 商品列表类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import lombok.Data;</span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author Heaton</span><br><span class="line"> * @email 70416450@qq.com</span><br><span class="line"> * @date 2020&#x2F;4&#x2F;25 14:54</span><br><span class="line"> * @describe 商品列表类</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Data</span><br><span class="line">public class AppLoading &#123;</span><br><span class="line">    private String action;&#x2F;&#x2F;动作：开始加载&#x3D;1，加载成功&#x3D;2，加载失败</span><br><span class="line">    private String loading_time;&#x2F;&#x2F;加载时长：计算下拉开始到接口返回数据的时间，（开始加载报 0， 加载成功或加载失败才上报时间）</span><br><span class="line">    private String loading_way;&#x2F;&#x2F;加载类型：1-读取缓存，2-从接口拉新数据 （加载成功才上报加 载类型）</span><br><span class="line">    private String extend1;&#x2F;&#x2F;扩展字段 Extend1</span><br><span class="line">    private String extend2;&#x2F;&#x2F;扩展字段 Extend2</span><br><span class="line">    private String type;&#x2F;&#x2F;加载类型：自动加载&#x3D;1，用户下拽加载&#x3D;2，底部加载&#x3D;3（底部条触发点击底 部提示条&#x2F;点击返回顶部加载）</span><br><span class="line">    private String type1;&#x2F;&#x2F;加载失败码：把加载失败状态码报回来（报空为加载成功，没有失败）</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="fe8dffa0"></a></p><h5 id="2-4-3-7-广告类"><a href="#2-4-3-7-广告类" class="headerlink" title="2.4.3.7 广告类"></a>2.4.3.7 广告类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import lombok.Data;</span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author Heaton</span><br><span class="line"> * @email 70416450@qq.com</span><br><span class="line"> * @date 2020&#x2F;4&#x2F;25 14:54</span><br><span class="line"> * @describe 广告类</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Data</span><br><span class="line">public class AppAd &#123;</span><br><span class="line">    private String entry;&#x2F;&#x2F;入口：商品列表页&#x3D;1  应用首页&#x3D;2 商品详情页&#x3D;3</span><br><span class="line">    private String action;&#x2F;&#x2F;动作： 广告展示&#x3D;1 广告点击&#x3D;2</span><br><span class="line">    private String contentType;&#x2F;&#x2F;Type: 1 商品 2 营销活动</span><br><span class="line">    private String displayMills;&#x2F;&#x2F;展示时长 毫秒数</span><br><span class="line">    private String itemId; &#x2F;&#x2F;商品id</span><br><span class="line">    private String activityId; &#x2F;&#x2F;营销活动id</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="7e94e787"></a></p><h5 id="2-4-3-8-消息通知日志类"><a href="#2-4-3-8-消息通知日志类" class="headerlink" title="2.4.3.8 消息通知日志类"></a>2.4.3.8 消息通知日志类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import lombok.Data;</span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author Heaton</span><br><span class="line"> * @email 70416450@qq.com</span><br><span class="line"> * @date 2020&#x2F;4&#x2F;25 14:54</span><br><span class="line"> * @describe 消息通知日志类</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Data</span><br><span class="line">public class AppNotification &#123;</span><br><span class="line">    private String action;&#x2F;&#x2F;动作：通知产生&#x3D;1，通知弹出&#x3D;2，通知点击&#x3D;3，常驻通知展示（不重复上 报，一天之内只报一次）</span><br><span class="line">    private String type;&#x2F;&#x2F;通知 id：预警通知&#x3D;1，天气预报（早&#x3D;2，晚&#x3D;3），常驻&#x3D;4</span><br><span class="line">    private String ap_time;&#x2F;&#x2F;客户端弹出时间</span><br><span class="line">    private String content;&#x2F;&#x2F;备用字段</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="f7b8845a"></a></p><h5 id="2-4-3-9-用户后台活跃类"><a href="#2-4-3-9-用户后台活跃类" class="headerlink" title="2.4.3.9 用户后台活跃类"></a>2.4.3.9 用户后台活跃类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import lombok.Data;</span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author Heaton</span><br><span class="line"> * @email 70416450@qq.com</span><br><span class="line"> * @date 2020&#x2F;4&#x2F;25 14:54</span><br><span class="line"> * @describe 用户后台活跃类</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Data</span><br><span class="line">public class AppActive &#123;</span><br><span class="line">    private String active_source;&#x2F;&#x2F;1&#x3D;upgrade,2&#x3D;download(下载),3&#x3D;plugin_upgrade</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="eed5386c"></a></p><h5 id="2-4-3-10-用户评论类"><a href="#2-4-3-10-用户评论类" class="headerlink" title="2.4.3.10 用户评论类"></a>2.4.3.10 用户评论类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import lombok.Data;</span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author Heaton</span><br><span class="line"> * @email 70416450@qq.com</span><br><span class="line"> * @date 2020&#x2F;4&#x2F;25 14:54</span><br><span class="line"> * @describe 用户评论类</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Data</span><br><span class="line">public class AppComment &#123;</span><br><span class="line">    private int comment_id;&#x2F;&#x2F;评论表</span><br><span class="line">    private int userid;&#x2F;&#x2F;用户 id</span><br><span class="line">    private int p_comment_id;&#x2F;&#x2F;父级评论 id(为 0 则是一级评论,不为 0 则是回复)</span><br><span class="line">    private String content;&#x2F;&#x2F;评论内容</span><br><span class="line">    private String addtime;&#x2F;&#x2F;创建时间</span><br><span class="line">    private int other_id;&#x2F;&#x2F;评论的相关 id</span><br><span class="line">    private int praise_count;&#x2F;&#x2F;点赞数量</span><br><span class="line">    private int reply_count;&#x2F;&#x2F;回复数量</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="01adfa90"></a></p><h5 id="2-4-3-11-用户收藏类"><a href="#2-4-3-11-用户收藏类" class="headerlink" title="2.4.3.11 用户收藏类"></a>2.4.3.11 用户收藏类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import lombok.Data;</span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author Heaton</span><br><span class="line"> * @email 70416450@qq.com</span><br><span class="line"> * @date 2020&#x2F;4&#x2F;25 14:54</span><br><span class="line"> * @describe 用户收藏类</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Data</span><br><span class="line">public class AppFavorites &#123;</span><br><span class="line">    private int id;&#x2F;&#x2F;主键</span><br><span class="line">    private int course_id;&#x2F;&#x2F;商品 id</span><br><span class="line">    private int userid;&#x2F;&#x2F;用户 ID</span><br><span class="line">    private String add_time;&#x2F;&#x2F;创建时间</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="381f0e2a"></a></p><h5 id="2-4-3-12-用户点赞类"><a href="#2-4-3-12-用户点赞类" class="headerlink" title="2.4.3.12 用户点赞类"></a>2.4.3.12 用户点赞类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import lombok.Data;</span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author Heaton</span><br><span class="line"> * @email 70416450@qq.com</span><br><span class="line"> * @date 2020&#x2F;4&#x2F;25 14:54</span><br><span class="line"> * @describe 用户点赞类</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Data</span><br><span class="line">public class AppPraise &#123;</span><br><span class="line">    private int id; &#x2F;&#x2F;主键 id</span><br><span class="line">    private int userid;&#x2F;&#x2F;用户 id</span><br><span class="line">    private int target_id;&#x2F;&#x2F;点赞的对象 id</span><br><span class="line">    private int type;&#x2F;&#x2F;点赞类型 1 问答点赞 2 问答评论点赞 3 文章点赞数 4 评论点赞</span><br><span class="line">    private String add_time;&#x2F;&#x2F;添加时间</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="c9fc3b91"></a></p><h4 id="2-4-4-启动类"><a href="#2-4-4-启动类" class="headerlink" title="2.4.4 启动类"></a>2.4.4 启动类</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br></pre></td><td class="code"><pre><span class="line">import com.alibaba.fastjson.JSON;</span><br><span class="line">import com.alibaba.fastjson.JSONArray;</span><br><span class="line">import com.alibaba.fastjson.JSONObject;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import java.io.UnsupportedEncodingException;</span><br><span class="line">import java.util.Random;</span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author Heaton</span><br><span class="line"> * @email 70416450@qq.com</span><br><span class="line"> * @date 2020&#x2F;4&#x2F;25 14:54</span><br><span class="line"> * @describe 启动类</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class App &#123;</span><br><span class="line">    private final static Logger logger &#x3D; LoggerFactory.getLogger(App.class);</span><br><span class="line">    private static Random rand &#x3D; new Random();</span><br><span class="line">    &#x2F;&#x2F; 设备id</span><br><span class="line">    private static int s_mid &#x3D; 0;</span><br><span class="line">    &#x2F;&#x2F; 用户id</span><br><span class="line">    private static int s_uid &#x3D; 0;</span><br><span class="line">    &#x2F;&#x2F; 商品id</span><br><span class="line">    private static int s_goodsid &#x3D; 0;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        &#x2F;&#x2F; 参数一：控制发送每条的延时时间，默认是0</span><br><span class="line">        Long delay &#x3D; args.length &gt; 0 ? Long.parseLong(args[0]) : 0L;</span><br><span class="line">        &#x2F;&#x2F; 参数二：循环遍历次数</span><br><span class="line">        int loop_len &#x3D; args.length &gt; 1 ? Integer.parseInt(args[1]) : 1000;</span><br><span class="line">        &#x2F;&#x2F; 生成数据</span><br><span class="line">        generateLog(delay, loop_len);</span><br><span class="line">    &#125;</span><br><span class="line">    private static void generateLog(Long delay, int loop_len) &#123;</span><br><span class="line">        for (int i &#x3D; 0; i &lt; loop_len; i++) &#123;</span><br><span class="line">            int flag &#x3D; rand.nextInt(2);</span><br><span class="line">            switch (flag) &#123;</span><br><span class="line">                case (0):</span><br><span class="line">                    &#x2F;&#x2F;应用启动</span><br><span class="line">                    AppStart appStart &#x3D; generateStart();</span><br><span class="line">                    String jsonString &#x3D; JSON.toJSONString(appStart);</span><br><span class="line">                    &#x2F;&#x2F;控制台打印</span><br><span class="line">                    logger.info(jsonString);</span><br><span class="line">                    break;</span><br><span class="line">                case (1):</span><br><span class="line">                    JSONObject json &#x3D; new JSONObject();</span><br><span class="line">                    json.put(&quot;ap&quot;, &quot;app&quot;);</span><br><span class="line">                    json.put(&quot;cm&quot;, generateComFields());</span><br><span class="line">                    JSONArray eventsArray &#x3D; new JSONArray();</span><br><span class="line">                    &#x2F;&#x2F; 事件日志</span><br><span class="line">                    &#x2F;&#x2F; 商品点击，展示</span><br><span class="line">                    if (rand.nextBoolean()) &#123;</span><br><span class="line">                        eventsArray.add(generateDisplay());</span><br><span class="line">                        json.put(&quot;et&quot;, eventsArray);</span><br><span class="line">                    &#125;</span><br><span class="line">                    &#x2F;&#x2F; 商品详情页</span><br><span class="line">                    if (rand.nextBoolean()) &#123;</span><br><span class="line">                        eventsArray.add(generateNewsDetail());</span><br><span class="line">                        json.put(&quot;et&quot;, eventsArray);</span><br><span class="line">                    &#125;</span><br><span class="line">                    &#x2F;&#x2F; 商品列表页</span><br><span class="line">                    if (rand.nextBoolean()) &#123;</span><br><span class="line">                        eventsArray.add(generateNewList());</span><br><span class="line">                        json.put(&quot;et&quot;, eventsArray);</span><br><span class="line">                    &#125;</span><br><span class="line">                    &#x2F;&#x2F; 广告</span><br><span class="line">                    if (rand.nextBoolean()) &#123;</span><br><span class="line">                        eventsArray.add(generateAd());</span><br><span class="line">                        json.put(&quot;et&quot;, eventsArray);</span><br><span class="line">                    &#125;</span><br><span class="line">                    &#x2F;&#x2F; 消息通知</span><br><span class="line">                    if (rand.nextBoolean()) &#123;</span><br><span class="line">                        eventsArray.add(generateNotification());</span><br><span class="line">                        json.put(&quot;et&quot;, eventsArray);</span><br><span class="line">                    &#125;</span><br><span class="line">                    &#x2F;&#x2F; 用户后台活跃</span><br><span class="line">                    if (rand.nextBoolean()) &#123;</span><br><span class="line">                        eventsArray.add(generateBackground());</span><br><span class="line">                        json.put(&quot;et&quot;, eventsArray);</span><br><span class="line">                    &#125;</span><br><span class="line">                    &#x2F;&#x2F;故障日志</span><br><span class="line">                    if (rand.nextBoolean()) &#123;</span><br><span class="line">                        eventsArray.add(generateError());</span><br><span class="line">                        json.put(&quot;et&quot;, eventsArray);</span><br><span class="line">                    &#125;</span><br><span class="line">                    &#x2F;&#x2F; 用户评论</span><br><span class="line">                    if (rand.nextBoolean()) &#123;</span><br><span class="line">                        eventsArray.add(generateComment());</span><br><span class="line">                        json.put(&quot;et&quot;, eventsArray);</span><br><span class="line">                    &#125;</span><br><span class="line">                    &#x2F;&#x2F; 用户收藏</span><br><span class="line">                    if (rand.nextBoolean()) &#123;</span><br><span class="line">                        eventsArray.add(generateFavorites());</span><br><span class="line">                        json.put(&quot;et&quot;, eventsArray);</span><br><span class="line">                    &#125;</span><br><span class="line">                    &#x2F;&#x2F; 用户点赞</span><br><span class="line">                    if (rand.nextBoolean()) &#123;</span><br><span class="line">                        eventsArray.add(generatePraise());</span><br><span class="line">                        json.put(&quot;et&quot;, eventsArray);</span><br><span class="line">                    &#125;</span><br><span class="line">                    &#x2F;&#x2F;时间</span><br><span class="line">                    long millis &#x3D; System.currentTimeMillis();</span><br><span class="line">                    &#x2F;&#x2F;控制台打印</span><br><span class="line">                    logger.info(millis + &quot;|&quot; + json.toJSONString());</span><br><span class="line">                    break;</span><br><span class="line">            &#125;</span><br><span class="line">            &#x2F;&#x2F; 延迟</span><br><span class="line">            try &#123;</span><br><span class="line">                Thread.sleep(delay);</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 公共字段设置</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static JSONObject generateComFields() &#123;</span><br><span class="line">        AppBase appBase &#x3D; new AppBase();</span><br><span class="line">        &#x2F;&#x2F;设备id</span><br><span class="line">        appBase.setMid(s_mid + &quot;&quot;);</span><br><span class="line">        s_mid++;</span><br><span class="line">        &#x2F;&#x2F; 用户id</span><br><span class="line">        appBase.setUid(s_uid + &quot;&quot;);</span><br><span class="line">        s_uid++;</span><br><span class="line">        &#x2F;&#x2F; 程序版本号 5,6等</span><br><span class="line">        appBase.setVc(&quot;&quot; + rand.nextInt(20));</span><br><span class="line">        &#x2F;&#x2F;程序版本名 v1.1.1</span><br><span class="line">        appBase.setVn(&quot;1.&quot; + rand.nextInt(4) + &quot;.&quot; + rand.nextInt(10));</span><br><span class="line">        &#x2F;&#x2F; 安卓系统版本</span><br><span class="line">        appBase.setOs(&quot;8.&quot; + rand.nextInt(3) + &quot;.&quot; + rand.nextInt(10));</span><br><span class="line">        &#x2F;&#x2F; 语言  es,en,pt</span><br><span class="line">        int flag &#x3D; rand.nextInt(3);</span><br><span class="line">        switch (flag) &#123;</span><br><span class="line">            case (0):</span><br><span class="line">                appBase.setL(&quot;es&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case (1):</span><br><span class="line">                appBase.setL(&quot;en&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case (2):</span><br><span class="line">                appBase.setL(&quot;pt&quot;);</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 渠道号   从哪个渠道来的</span><br><span class="line">        appBase.setSr(getRandomChar(1));</span><br><span class="line">        &#x2F;&#x2F; 区域</span><br><span class="line">        flag &#x3D; rand.nextInt(2);</span><br><span class="line">        switch (flag) &#123;</span><br><span class="line">            case 0:</span><br><span class="line">                appBase.setAr(&quot;BR&quot;);</span><br><span class="line">            case 1:</span><br><span class="line">                appBase.setAr(&quot;MX&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 手机品牌 ba ,手机型号 md，就取2位数字了</span><br><span class="line">        flag &#x3D; rand.nextInt(3);</span><br><span class="line">        switch (flag) &#123;</span><br><span class="line">            case 0:</span><br><span class="line">                appBase.setBa(&quot;Sumsung&quot;);</span><br><span class="line">                appBase.setMd(&quot;sumsung-&quot; + rand.nextInt(20));</span><br><span class="line">                break;</span><br><span class="line">            case 1:</span><br><span class="line">                appBase.setBa(&quot;Huawei&quot;);</span><br><span class="line">                appBase.setMd(&quot;Huawei-&quot; + rand.nextInt(20));</span><br><span class="line">                break;</span><br><span class="line">            case 2:</span><br><span class="line">                appBase.setBa(&quot;HTC&quot;);</span><br><span class="line">                appBase.setMd(&quot;HTC-&quot; + rand.nextInt(20));</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 嵌入sdk的版本</span><br><span class="line">        appBase.setSv(&quot;V2.&quot; + rand.nextInt(10) + &quot;.&quot; + rand.nextInt(10));</span><br><span class="line">        &#x2F;&#x2F; gmail</span><br><span class="line">        appBase.setG(getRandomCharAndNumr(8) + &quot;@gmail.com&quot;);</span><br><span class="line">        &#x2F;&#x2F; 屏幕宽高 hw</span><br><span class="line">        flag &#x3D; rand.nextInt(4);</span><br><span class="line">        switch (flag) &#123;</span><br><span class="line">            case 0:</span><br><span class="line">                appBase.setHw(&quot;640*960&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 1:</span><br><span class="line">                appBase.setHw(&quot;640*1136&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 2:</span><br><span class="line">                appBase.setHw(&quot;750*1134&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 3:</span><br><span class="line">                appBase.setHw(&quot;1080*1920&quot;);</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 客户端产生日志时间</span><br><span class="line">        long millis &#x3D; System.currentTimeMillis();</span><br><span class="line">        appBase.setT(&quot;&quot; + (millis - rand.nextInt(99999999)));</span><br><span class="line">        &#x2F;&#x2F; 手机网络模式 3G,4G,WIFI</span><br><span class="line">        flag &#x3D; rand.nextInt(3);</span><br><span class="line">        switch (flag) &#123;</span><br><span class="line">            case 0:</span><br><span class="line">                appBase.setNw(&quot;3G&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 1:</span><br><span class="line">                appBase.setNw(&quot;4G&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 2:</span><br><span class="line">                appBase.setNw(&quot;WIFI&quot;);</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 拉丁美洲 西经34°46′至西经117°09；北纬32°42′至南纬53°54′</span><br><span class="line">        &#x2F;&#x2F; 经度</span><br><span class="line">        appBase.setLn((-34 - rand.nextInt(83) - rand.nextInt(60) &#x2F; 10.0) + &quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 纬度</span><br><span class="line">        appBase.setLa((32 - rand.nextInt(85) - rand.nextInt(60) &#x2F; 10.0) + &quot;&quot;);</span><br><span class="line">        return (JSONObject) JSON.toJSON(appBase);</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 商品展示事件</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static JSONObject generateDisplay() &#123;</span><br><span class="line">        AppDisplay appDisplay &#x3D; new AppDisplay();</span><br><span class="line">        boolean boolFlag &#x3D; rand.nextInt(10) &lt; 7;</span><br><span class="line">        &#x2F;&#x2F; 动作：曝光商品&#x3D;1，点击商品&#x3D;2，</span><br><span class="line">        if (boolFlag) &#123;</span><br><span class="line">            appDisplay.setAction(&quot;1&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            appDisplay.setAction(&quot;2&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 商品id</span><br><span class="line">        String goodsId &#x3D; s_goodsid + &quot;&quot;;</span><br><span class="line">        s_goodsid++;</span><br><span class="line">        appDisplay.setGoodsid(goodsId);</span><br><span class="line">        &#x2F;&#x2F; 顺序  设置成6条吧</span><br><span class="line">        int flag &#x3D; rand.nextInt(6);</span><br><span class="line">        appDisplay.setPlace(&quot;&quot; + flag);</span><br><span class="line">        &#x2F;&#x2F; 曝光类型</span><br><span class="line">        flag &#x3D; 1 + rand.nextInt(2);</span><br><span class="line">        appDisplay.setExtend1(&quot;&quot; + flag);</span><br><span class="line">        &#x2F;&#x2F; 分类</span><br><span class="line">        flag &#x3D; 1 + rand.nextInt(100);</span><br><span class="line">        appDisplay.setCategory(&quot;&quot; + flag);</span><br><span class="line">        JSONObject jsonObject &#x3D; (JSONObject) JSON.toJSON(appDisplay);</span><br><span class="line">        return packEventJson(&quot;display&quot;, jsonObject);</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 商品详情页</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static JSONObject generateNewsDetail() &#123;</span><br><span class="line">        AppNewsDetail appNewsDetail &#x3D; new AppNewsDetail();</span><br><span class="line">        &#x2F;&#x2F; 页面入口来源</span><br><span class="line">        int flag &#x3D; 1 + rand.nextInt(3);</span><br><span class="line">        appNewsDetail.setEntry(flag + &quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 动作</span><br><span class="line">        appNewsDetail.setAction(&quot;&quot; + (rand.nextInt(4) + 1));</span><br><span class="line">        &#x2F;&#x2F; 商品id</span><br><span class="line">        appNewsDetail.setGoodsid(s_goodsid + &quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 商品来源类型</span><br><span class="line">        flag &#x3D; 1 + rand.nextInt(3);</span><br><span class="line">        appNewsDetail.setShowtype(flag + &quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 商品样式</span><br><span class="line">        flag &#x3D; rand.nextInt(6);</span><br><span class="line">        appNewsDetail.setShowtype(&quot;&quot; + flag);</span><br><span class="line">        &#x2F;&#x2F; 页面停留时长</span><br><span class="line">        flag &#x3D; rand.nextInt(10) * rand.nextInt(7);</span><br><span class="line">        appNewsDetail.setNews_staytime(flag + &quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 加载时长</span><br><span class="line">        flag &#x3D; rand.nextInt(10) * rand.nextInt(7);</span><br><span class="line">        appNewsDetail.setLoading_time(flag + &quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 加载失败码</span><br><span class="line">        flag &#x3D; rand.nextInt(10);</span><br><span class="line">        switch (flag) &#123;</span><br><span class="line">            case 1:</span><br><span class="line">                appNewsDetail.setType1(&quot;102&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 2:</span><br><span class="line">                appNewsDetail.setType1(&quot;201&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 3:</span><br><span class="line">                appNewsDetail.setType1(&quot;325&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 4:</span><br><span class="line">                appNewsDetail.setType1(&quot;433&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 5:</span><br><span class="line">                appNewsDetail.setType1(&quot;542&quot;);</span><br><span class="line">                break;</span><br><span class="line">            default:</span><br><span class="line">                appNewsDetail.setType1(&quot;&quot;);</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 分类</span><br><span class="line">        flag &#x3D; 1 + rand.nextInt(100);</span><br><span class="line">        appNewsDetail.setCategory(&quot;&quot; + flag);</span><br><span class="line">        JSONObject eventJson &#x3D; (JSONObject) JSON.toJSON(appNewsDetail);</span><br><span class="line">        return packEventJson(&quot;newsdetail&quot;, eventJson);</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 商品列表</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static JSONObject generateNewList() &#123;</span><br><span class="line">        AppLoading appLoading &#x3D; new AppLoading();</span><br><span class="line">        &#x2F;&#x2F; 动作</span><br><span class="line">        int flag &#x3D; rand.nextInt(3) + 1;</span><br><span class="line">        appLoading.setAction(flag + &quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 加载时长</span><br><span class="line">        flag &#x3D; rand.nextInt(10) * rand.nextInt(7);</span><br><span class="line">        appLoading.setLoading_time(flag + &quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 失败码</span><br><span class="line">        flag &#x3D; rand.nextInt(10);</span><br><span class="line">        switch (flag) &#123;</span><br><span class="line">            case 1:</span><br><span class="line">                appLoading.setType1(&quot;102&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 2:</span><br><span class="line">                appLoading.setType1(&quot;201&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 3:</span><br><span class="line">                appLoading.setType1(&quot;325&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 4:</span><br><span class="line">                appLoading.setType1(&quot;433&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 5:</span><br><span class="line">                appLoading.setType1(&quot;542&quot;);</span><br><span class="line">                break;</span><br><span class="line">            default:</span><br><span class="line">                appLoading.setType1(&quot;&quot;);</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 页面  加载类型</span><br><span class="line">        flag &#x3D; 1 + rand.nextInt(2);</span><br><span class="line">        appLoading.setLoading_way(&quot;&quot; + flag);</span><br><span class="line">        &#x2F;&#x2F; 扩展字段1</span><br><span class="line">        appLoading.setExtend1(&quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 扩展字段2</span><br><span class="line">        appLoading.setExtend2(&quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 用户加载类型</span><br><span class="line">        flag &#x3D; 1 + rand.nextInt(3);</span><br><span class="line">        appLoading.setType(&quot;&quot; + flag);</span><br><span class="line">        JSONObject jsonObject &#x3D; (JSONObject) JSON.toJSON(appLoading);</span><br><span class="line">        return packEventJson(&quot;loading&quot;, jsonObject);</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 广告相关字段</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static JSONObject generateAd() &#123;</span><br><span class="line">        AppAd appAd &#x3D; new AppAd();</span><br><span class="line">        &#x2F;&#x2F; 入口</span><br><span class="line">        int flag &#x3D; rand.nextInt(3) + 1;</span><br><span class="line">        appAd.setEntry(flag + &quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 动作</span><br><span class="line">        flag &#x3D; rand.nextInt(5) + 1;</span><br><span class="line">        appAd.setAction(flag + &quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 内容类型类型</span><br><span class="line">        flag &#x3D; rand.nextInt(6) + 1;</span><br><span class="line">        appAd.setContentType(flag + &quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 展示样式</span><br><span class="line">        flag &#x3D; rand.nextInt(120000) + 1000;</span><br><span class="line">        appAd.setDisplayMills(flag + &quot;&quot;);</span><br><span class="line">        flag &#x3D; rand.nextInt(1);</span><br><span class="line">        if (flag &#x3D;&#x3D; 1) &#123;</span><br><span class="line">            appAd.setContentType(flag + &quot;&quot;);</span><br><span class="line">            flag &#x3D; rand.nextInt(6);</span><br><span class="line">            appAd.setItemId(flag + &quot;&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            appAd.setContentType(flag + &quot;&quot;);</span><br><span class="line">            flag &#x3D; rand.nextInt(1) + 1;</span><br><span class="line">            appAd.setActivityId(flag + &quot;&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        JSONObject jsonObject &#x3D; (JSONObject) JSON.toJSON(appAd);</span><br><span class="line">        return packEventJson(&quot;ad&quot;, jsonObject);</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 启动日志</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static AppStart generateStart() &#123;</span><br><span class="line">        AppStart appStart &#x3D; new AppStart();</span><br><span class="line">        &#x2F;&#x2F;设备id</span><br><span class="line">        appStart.setMid(s_mid + &quot;&quot;);</span><br><span class="line">        s_mid++;</span><br><span class="line">        &#x2F;&#x2F; 用户id</span><br><span class="line">        appStart.setUid(s_uid + &quot;&quot;);</span><br><span class="line">        s_uid++;</span><br><span class="line">        &#x2F;&#x2F; 程序版本号 5,6等</span><br><span class="line">        appStart.setVc(&quot;&quot; + rand.nextInt(20));</span><br><span class="line">        &#x2F;&#x2F;程序版本名 v1.1.1</span><br><span class="line">        appStart.setVn(&quot;1.&quot; + rand.nextInt(4) + &quot;.&quot; + rand.nextInt(10));</span><br><span class="line">        &#x2F;&#x2F; 安卓系统版本</span><br><span class="line">        appStart.setOs(&quot;8.&quot; + rand.nextInt(3) + &quot;.&quot; + rand.nextInt(10));</span><br><span class="line">        &#x2F;&#x2F;设置日志类型</span><br><span class="line">        appStart.setEn(&quot;start&quot;);</span><br><span class="line">        &#x2F;&#x2F;    语言  es,en,pt</span><br><span class="line">        int flag &#x3D; rand.nextInt(3);</span><br><span class="line">        switch (flag) &#123;</span><br><span class="line">            case (0):</span><br><span class="line">                appStart.setL(&quot;es&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case (1):</span><br><span class="line">                appStart.setL(&quot;en&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case (2):</span><br><span class="line">                appStart.setL(&quot;pt&quot;);</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 渠道号   从哪个渠道来的</span><br><span class="line">        appStart.setSr(getRandomChar(1));</span><br><span class="line">        &#x2F;&#x2F; 区域</span><br><span class="line">        flag &#x3D; rand.nextInt(2);</span><br><span class="line">        switch (flag) &#123;</span><br><span class="line">            case 0:</span><br><span class="line">                appStart.setAr(&quot;BR&quot;);</span><br><span class="line">            case 1:</span><br><span class="line">                appStart.setAr(&quot;MX&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 手机品牌 ba ,手机型号 md，就取2位数字了</span><br><span class="line">        flag &#x3D; rand.nextInt(3);</span><br><span class="line">        switch (flag) &#123;</span><br><span class="line">            case 0:</span><br><span class="line">                appStart.setBa(&quot;Sumsung&quot;);</span><br><span class="line">                appStart.setMd(&quot;sumsung-&quot; + rand.nextInt(20));</span><br><span class="line">                break;</span><br><span class="line">            case 1:</span><br><span class="line">                appStart.setBa(&quot;Huawei&quot;);</span><br><span class="line">                appStart.setMd(&quot;Huawei-&quot; + rand.nextInt(20));</span><br><span class="line">                break;</span><br><span class="line">            case 2:</span><br><span class="line">                appStart.setBa(&quot;HTC&quot;);</span><br><span class="line">                appStart.setMd(&quot;HTC-&quot; + rand.nextInt(20));</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 嵌入sdk的版本</span><br><span class="line">        appStart.setSv(&quot;V2.&quot; + rand.nextInt(10) + &quot;.&quot; + rand.nextInt(10));</span><br><span class="line">        &#x2F;&#x2F; gmail</span><br><span class="line">        appStart.setG(getRandomCharAndNumr(8) + &quot;@gmail.com&quot;);</span><br><span class="line">        &#x2F;&#x2F; 屏幕宽高 hw</span><br><span class="line">        flag &#x3D; rand.nextInt(4);</span><br><span class="line">        switch (flag) &#123;</span><br><span class="line">            case 0:</span><br><span class="line">                appStart.setHw(&quot;640*960&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 1:</span><br><span class="line">                appStart.setHw(&quot;640*1136&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 2:</span><br><span class="line">                appStart.setHw(&quot;750*1134&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 3:</span><br><span class="line">                appStart.setHw(&quot;1080*1920&quot;);</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 客户端产生日志时间</span><br><span class="line">        long millis &#x3D; System.currentTimeMillis();</span><br><span class="line">        appStart.setT(&quot;&quot; + (millis - rand.nextInt(99999999)));</span><br><span class="line">        &#x2F;&#x2F; 手机网络模式 3G,4G,WIFI</span><br><span class="line">        flag &#x3D; rand.nextInt(3);</span><br><span class="line">        switch (flag) &#123;</span><br><span class="line">            case 0:</span><br><span class="line">                appStart.setNw(&quot;3G&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 1:</span><br><span class="line">                appStart.setNw(&quot;4G&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 2:</span><br><span class="line">                appStart.setNw(&quot;WIFI&quot;);</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 拉丁美洲 西经34°46′至西经117°09；北纬32°42′至南纬53°54′</span><br><span class="line">        &#x2F;&#x2F; 经度</span><br><span class="line">        appStart.setLn((-34 - rand.nextInt(83) - rand.nextInt(60) &#x2F; 10.0) + &quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 纬度</span><br><span class="line">        appStart.setLa((32 - rand.nextInt(85) - rand.nextInt(60) &#x2F; 10.0) + &quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 入口</span><br><span class="line">        flag &#x3D; rand.nextInt(5) + 1;</span><br><span class="line">        appStart.setEntry(flag + &quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 开屏广告类型</span><br><span class="line">        flag &#x3D; rand.nextInt(2) + 1;</span><br><span class="line">        appStart.setOpen_ad_type(flag + &quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 状态</span><br><span class="line">        flag &#x3D; rand.nextInt(10) &gt; 8 ? 2 : 1;</span><br><span class="line">        appStart.setAction(flag + &quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 加载时长</span><br><span class="line">        appStart.setLoading_time(rand.nextInt(20) + &quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 失败码</span><br><span class="line">        flag &#x3D; rand.nextInt(10);</span><br><span class="line">        switch (flag) &#123;</span><br><span class="line">            case 1:</span><br><span class="line">                appStart.setDetail(&quot;102&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 2:</span><br><span class="line">                appStart.setDetail(&quot;201&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 3:</span><br><span class="line">                appStart.setDetail(&quot;325&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 4:</span><br><span class="line">                appStart.setDetail(&quot;433&quot;);</span><br><span class="line">                break;</span><br><span class="line">            case 5:</span><br><span class="line">                appStart.setDetail(&quot;542&quot;);</span><br><span class="line">                break;</span><br><span class="line">            default:</span><br><span class="line">                appStart.setDetail(&quot;&quot;);</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 扩展字段</span><br><span class="line">        appStart.setExtend1(&quot;&quot;);</span><br><span class="line">        return appStart;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 消息通知</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static JSONObject generateNotification() &#123;</span><br><span class="line">        AppNotification appNotification &#x3D; new AppNotification();</span><br><span class="line">        int flag &#x3D; rand.nextInt(4) + 1;</span><br><span class="line">        &#x2F;&#x2F; 动作</span><br><span class="line">        appNotification.setAction(flag + &quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 通知id</span><br><span class="line">        flag &#x3D; rand.nextInt(4) + 1;</span><br><span class="line">        appNotification.setType(flag + &quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 客户端弹时间</span><br><span class="line">        appNotification.setAp_time((System.currentTimeMillis() - rand.nextInt(99999999)) + &quot;&quot;);</span><br><span class="line">        &#x2F;&#x2F; 备用字段</span><br><span class="line">        appNotification.setContent(&quot;&quot;);</span><br><span class="line">        JSONObject jsonObject &#x3D; (JSONObject) JSON.toJSON(appNotification);</span><br><span class="line">        return packEventJson(&quot;notification&quot;, jsonObject);</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 后台活跃</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static JSONObject generateBackground() &#123;</span><br><span class="line">        AppActive appActive_background &#x3D; new AppActive();</span><br><span class="line">        &#x2F;&#x2F; 启动源</span><br><span class="line">        int flag &#x3D; rand.nextInt(3) + 1;</span><br><span class="line">        appActive_background.setActive_source(flag + &quot;&quot;);</span><br><span class="line">        JSONObject jsonObject &#x3D; (JSONObject) JSON.toJSON(appActive_background);</span><br><span class="line">        return packEventJson(&quot;active_background&quot;, jsonObject);</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 错误日志数据</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static JSONObject generateError() &#123;</span><br><span class="line">        AppErrorLog appErrorLog &#x3D; new AppErrorLog();</span><br><span class="line">        String[] errorBriefs &#x3D; &#123;&quot;at cn.lift.dfdf.web.AbstractBaseController.validInbound(AbstractBaseController.java:72)&quot;, &quot;at cn.lift.appIn.control.CommandUtil.getInfo(CommandUtil.java:67)&quot;&#125;;        &#x2F;&#x2F;错误摘要</span><br><span class="line">        String[] errorDetails &#x3D; &#123;&quot;java.lang.NullPointerException\\n    &quot; + &quot;at cn.lift.appIn.web.AbstractBaseController.validInbound(AbstractBaseController.java:72)\\n &quot; + &quot;at cn.lift.dfdf.web.AbstractBaseController.validInbound&quot;, &quot;at cn.lift.dfdfdf.control.CommandUtil.getInfo(CommandUtil.java:67)\\n &quot; + &quot;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n&quot; + &quot; at java.lang.reflect.Method.invoke(Method.java:606)\\n&quot;&#125;;        &#x2F;&#x2F;错误详情</span><br><span class="line">        &#x2F;&#x2F;错误摘要</span><br><span class="line">        appErrorLog.setErrorBrief(errorBriefs[rand.nextInt(errorBriefs.length)]);</span><br><span class="line">        &#x2F;&#x2F;错误详情</span><br><span class="line">        appErrorLog.setErrorDetail(errorDetails[rand.nextInt(errorDetails.length)]);</span><br><span class="line">        JSONObject jsonObject &#x3D; (JSONObject) JSON.toJSON(appErrorLog);</span><br><span class="line">        return packEventJson(&quot;error&quot;, jsonObject);</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 为各个事件类型的公共字段（时间、事件类型、Json数据）拼接</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static JSONObject packEventJson(String eventName, JSONObject jsonObject) &#123;</span><br><span class="line">        JSONObject eventJson &#x3D; new JSONObject();</span><br><span class="line">        eventJson.put(&quot;ett&quot;, (System.currentTimeMillis() - rand.nextInt(99999999)) + &quot;&quot;);</span><br><span class="line">        eventJson.put(&quot;en&quot;, eventName);</span><br><span class="line">        eventJson.put(&quot;kv&quot;, jsonObject);</span><br><span class="line">        return eventJson;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 获取随机字母组合</span><br><span class="line">     *</span><br><span class="line">     * @param length 字符串长度</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static String getRandomChar(Integer length) &#123;</span><br><span class="line">        StringBuilder str &#x3D; new StringBuilder();</span><br><span class="line">        Random random &#x3D; new Random();</span><br><span class="line">        for (int i &#x3D; 0; i &lt; length; i++) &#123;</span><br><span class="line">            &#x2F;&#x2F; 字符串</span><br><span class="line">            str.append((char) (65 + random.nextInt(26)));&#x2F;&#x2F; 取得大写字母</span><br><span class="line">        &#125;</span><br><span class="line">        return str.toString();</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 获取随机字母数字组合</span><br><span class="line">     *</span><br><span class="line">     * @param length 字符串长度</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static String getRandomCharAndNumr(Integer length) &#123;</span><br><span class="line">        StringBuilder str &#x3D; new StringBuilder();</span><br><span class="line">        Random random &#x3D; new Random();</span><br><span class="line">        for (int i &#x3D; 0; i &lt; length; i++) &#123;</span><br><span class="line">            boolean b &#x3D; random.nextBoolean();</span><br><span class="line">            if (b) &#123; &#x2F;&#x2F; 字符串</span><br><span class="line">                &#x2F;&#x2F; int choice &#x3D; random.nextBoolean() ? 65 : 97; 取得65大写字母还是97小写字母</span><br><span class="line">                str.append((char) (65 + random.nextInt(26)));&#x2F;&#x2F; 取得大写字母</span><br><span class="line">            &#125; else &#123; &#x2F;&#x2F; 数字</span><br><span class="line">                str.append(String.valueOf(random.nextInt(10)));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return str.toString();</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 收藏</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static JSONObject generateFavorites() &#123;</span><br><span class="line">        AppFavorites favorites &#x3D; new AppFavorites();</span><br><span class="line">        favorites.setCourse_id(rand.nextInt(10));</span><br><span class="line">        favorites.setUserid(rand.nextInt(10));</span><br><span class="line">        favorites.setAdd_time((System.currentTimeMillis() - rand.nextInt(99999999)) + &quot;&quot;);</span><br><span class="line">        JSONObject jsonObject &#x3D; (JSONObject) JSON.toJSON(favorites);</span><br><span class="line">        return packEventJson(&quot;favorites&quot;, jsonObject);</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 点赞</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static JSONObject generatePraise() &#123;</span><br><span class="line">        AppPraise praise &#x3D; new AppPraise();</span><br><span class="line">        praise.setId(rand.nextInt(10));</span><br><span class="line">        praise.setUserid(rand.nextInt(10));</span><br><span class="line">        praise.setTarget_id(rand.nextInt(10));</span><br><span class="line">        praise.setType(rand.nextInt(4) + 1);</span><br><span class="line">        praise.setAdd_time((System.currentTimeMillis() - rand.nextInt(99999999)) + &quot;&quot;);</span><br><span class="line">        JSONObject jsonObject &#x3D; (JSONObject) JSON.toJSON(praise);</span><br><span class="line">        return packEventJson(&quot;praise&quot;, jsonObject);</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 评论</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static JSONObject generateComment() &#123;</span><br><span class="line">        AppComment comment &#x3D; new AppComment();</span><br><span class="line">        comment.setComment_id(rand.nextInt(10));</span><br><span class="line">        comment.setUserid(rand.nextInt(10));</span><br><span class="line">        comment.setP_comment_id(rand.nextInt(5));</span><br><span class="line">        comment.setContent(getCONTENT());</span><br><span class="line">        comment.setAddtime((System.currentTimeMillis() - rand.nextInt(99999999)) + &quot;&quot;);</span><br><span class="line">        comment.setOther_id(rand.nextInt(10));</span><br><span class="line">        comment.setPraise_count(rand.nextInt(1000));</span><br><span class="line">        comment.setReply_count(rand.nextInt(200));</span><br><span class="line">        JSONObject jsonObject &#x3D; (JSONObject) JSON.toJSON(comment);</span><br><span class="line">        return packEventJson(&quot;comment&quot;, jsonObject);</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 生成单个汉字</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static char getRandomChar() &#123;</span><br><span class="line">        String str &#x3D; &quot;&quot;;</span><br><span class="line">        int hightPos; &#x2F;&#x2F;</span><br><span class="line">        int lowPos;</span><br><span class="line">        Random random &#x3D; new Random();</span><br><span class="line">        &#x2F;&#x2F;随机生成汉子的两个字节</span><br><span class="line">        hightPos &#x3D; (176 + Math.abs(random.nextInt(39)));</span><br><span class="line">        lowPos &#x3D; (161 + Math.abs(random.nextInt(93)));</span><br><span class="line">        byte[] b &#x3D; new byte[2];</span><br><span class="line">        b[0] &#x3D; (Integer.valueOf(hightPos)).byteValue();</span><br><span class="line">        b[1] &#x3D; (Integer.valueOf(lowPos)).byteValue();</span><br><span class="line">        try &#123;</span><br><span class="line">            str &#x3D; new String(b, &quot;GBK&quot;);</span><br><span class="line">        &#125; catch (UnsupportedEncodingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(&quot;错误&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        return str.charAt(0);</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 拼接成多个汉字</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static String getCONTENT() &#123;</span><br><span class="line">        StringBuilder str &#x3D; new StringBuilder();</span><br><span class="line">        for (int i &#x3D; 0; i &lt; rand.nextInt(100); i++) &#123;</span><br><span class="line">            str.append(getRandomChar());</span><br><span class="line">        &#125;</span><br><span class="line">        return str.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="d6c3b682"></a></p><h4 id="2-4-5-启动测试"><a href="#2-4-5-启动测试" class="headerlink" title="2.4.5 启动测试"></a>2.4.5 启动测试</h4><blockquote><p>注意，需要将日志模拟放到2台服务器上，模拟日志每一条中即包括公共日志，又包含事件日志，需要flume拦截器进行日志分发，当然也需要两个flume-ng来做这个事情<br>打包上传2台服务器节点，生产数据为后面的测试做准备，这里为用户目录test文件夹下</p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445231-a9463aec-bcbe-4716-9e21-e761f37fc57e.png#align=left&display=inline&height=64&margin=%5Bobject%20Object%5D&originHeight=64&originWidth=1152&size=0&status=done&style=none&width=1152" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445356-4fb1c879-70b3-4a9b-aecd-98bc3096d13d.png#align=left&display=inline&height=61&margin=%5Bobject%20Object%5D&originHeight=61&originWidth=1150&size=0&status=done&style=none&width=1150" alt></p><blockquote><p>通过参数控制生成消息速度及产量(如下 2秒一条，打印1000条)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#控制时间及条数</span><br><span class="line">nohup java -jar data-producer-1.0-SNAPSHOT-jar-with-dependencies.jar 2000 1000 &amp;</span><br><span class="line">#监控日志</span><br><span class="line">tail -F &#x2F;root&#x2F;logs&#x2F;*.log</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445278-2645af1d-a1c6-49eb-9fae-9a2e54c6fdd1.png#align=left&display=inline&height=125&margin=%5Bobject%20Object%5D&originHeight=125&originWidth=1204&size=0&status=done&style=none&width=1204" alt></p><blockquote><p>通过<a href="https://www.json.cn/" target="_blank" rel="external nofollow noopener noreferrer">www.json.cn</a>查看数据格式</p></blockquote><p><a name="blogTitle10"></a></p><h2 id="3-创建KafKa-Topic"><a href="#3-创建KafKa-Topic" class="headerlink" title="3 创建KafKa-Topic"></a>3 创建KafKa-Topic</h2><ul><li>创建启动日志主题：topic_start</li><li>创建事件日志主题：topic_event</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445291-68eeb8c7-d2d0-4420-b26b-7008b185d7d4.png#align=left&display=inline&height=278&margin=%5Bobject%20Object%5D&originHeight=278&originWidth=918&size=0&status=done&style=none&width=918" alt><br><a name="blogTitle11"></a></p><h2 id="4-Flume准备"><a href="#4-Flume准备" class="headerlink" title="4 Flume准备"></a>4 Flume准备</h2><blockquote><p>共分为2组flume<br>第一组：将服务器日志收集，并使用Kafka-Channels将数据发往Kafka不同的Topic，其中使用拦截器进行公共日志和事件日志的分发，<br>第二组：收集Kafka数据，使用Flie-Channels缓存数据，最终发往Hdfs保存</p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445578-b0c40759-4e33-4b63-899b-6757a21dca2b.png#align=left&display=inline&height=821&margin=%5Bobject%20Object%5D&originHeight=821&originWidth=1920&size=0&status=done&style=none&width=1920" alt><br><a name="blogTitle12"></a></p><h3 id="4-1-Flume：File-gt-Kafka配置编写"><a href="#4-1-Flume：File-gt-Kafka配置编写" class="headerlink" title="4.1 Flume：File-&gt;Kafka配置编写"></a>4.1 Flume：File-&gt;Kafka配置编写</h3><ul><li>vim /root/test/file-flume-kafka.conf<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#1 定义组件</span><br><span class="line">a1.sources&#x3D;r1</span><br><span class="line">a1.channels&#x3D;c1 c2</span><br><span class="line"># 2 source配置 type类型 positionFile记录日志读取位置 filegroups读取哪些目录  app.+为读取什么开头 channels发往哪里</span><br><span class="line">a1.sources.r1.type &#x3D; TAILDIR</span><br><span class="line">a1.sources.r1.positionFile &#x3D; &#x2F;root&#x2F;test&#x2F;flume&#x2F;log_position.json</span><br><span class="line">a1.sources.r1.filegroups &#x3D; f1</span><br><span class="line">a1.sources.r1.filegroups.f1 &#x3D; &#x2F;root&#x2F;logs&#x2F;app.+</span><br><span class="line">a1.sources.r1.fileHeader &#x3D; true</span><br><span class="line">a1.sources.r1.channels &#x3D; c1 c2</span><br><span class="line">#3 拦截器 这里2个为自定义的拦截器 multiplexing为类型区分选择器 header头用于区分类型 mapping匹配头</span><br><span class="line">a1.sources.r1.interceptors &#x3D; i1 i2</span><br><span class="line">a1.sources.r1.interceptors.i1.type &#x3D; com.heaton.bigdata.flume.LogETLInterceptor$Builder</span><br><span class="line">a1.sources.r1.interceptors.i2.type &#x3D; com.heaton.bigdata.flume.LogTypeInterceptor$Builder</span><br><span class="line">a1.sources.r1.selector.type &#x3D; multiplexing</span><br><span class="line">a1.sources.r1.selector.header &#x3D; topic</span><br><span class="line">a1.sources.r1.selector.mapping.topic_start &#x3D; c1</span><br><span class="line">a1.sources.r1.selector.mapping.topic_event &#x3D; c2</span><br><span class="line">#4 channel配置 kafkaChannel</span><br><span class="line">a1.channels.c1.type &#x3D; org.apache.flume.channel.kafka.KafkaChannel</span><br><span class="line">a1.channels.c1.kafka.bootstrap.servers &#x3D; cdh01.cm:9092,cdh02.cm:9092,cdh03.cm:9092</span><br><span class="line">a1.channels.c1.kafka.topic &#x3D; topic_start</span><br><span class="line">a1.channels.c1.parseAsFlumeEvent &#x3D; false</span><br><span class="line">a1.channels.c1.kafka.consumer.group.id &#x3D; flume-consumer</span><br><span class="line">a1.channels.c2.type &#x3D;org.apache.flume.channel.kafka.KafkaChannel</span><br><span class="line">a1.channels.c2.kafka.bootstrap.servers &#x3D; cdh01.cm:9092,cdh02.cm:9092,cdh03.cm:9092</span><br><span class="line">a1.channels.c2.kafka.topic &#x3D; topic_event</span><br><span class="line">a1.channels.c2.parseAsFlumeEvent &#x3D; false</span><br><span class="line">a1.channels.c2.kafka.consumer.group.id &#x3D; flume-consumer</span><br></pre></td></tr></table></figure><blockquote><p>在生产日志的2台服务器节点上创建flume配置文件。<br>LogETLInterceptor，LogTypeInterceptor为自定义拦截</p></blockquote></li></ul><p><a name="blogTitle13"></a></p><h3 id="4-2-自定义拦截器"><a href="#4-2-自定义拦截器" class="headerlink" title="4.2 自定义拦截器"></a>4.2 自定义拦截器</h3><blockquote><p>data-flume工程</p></blockquote><ul><li><p>LogUtils</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">import org.apache.commons.lang.math.NumberUtils;</span><br><span class="line">public class LogUtils &#123;</span><br><span class="line">    public static boolean validateEvent(String log) &#123;</span><br><span class="line">        &#x2F;** 服务器时间 | json</span><br><span class="line">         1588319303710|&#123;</span><br><span class="line">         &quot;cm&quot;:&#123;</span><br><span class="line">         &quot;ln&quot;:&quot;-51.5&quot;,&quot;sv&quot;:&quot;V2.0.7&quot;,&quot;os&quot;:&quot;8.0.8&quot;,&quot;g&quot;:&quot;L1470998@gmail.com&quot;,&quot;mid&quot;:&quot;13&quot;,</span><br><span class="line">         &quot;nw&quot;:&quot;4G&quot;,&quot;l&quot;:&quot;en&quot;,&quot;vc&quot;:&quot;7&quot;,&quot;hw&quot;:&quot;640*960&quot;,&quot;ar&quot;:&quot;MX&quot;,&quot;uid&quot;:&quot;13&quot;,&quot;t&quot;:&quot;1588291826938&quot;,</span><br><span class="line">         &quot;la&quot;:&quot;-38.2&quot;,&quot;md&quot;:&quot;Huawei-14&quot;,&quot;vn&quot;:&quot;1.3.6&quot;,&quot;ba&quot;:&quot;Huawei&quot;,&quot;sr&quot;:&quot;Y&quot;</span><br><span class="line">         &#125;,</span><br><span class="line">         &quot;ap&quot;:&quot;app&quot;,</span><br><span class="line">         &quot;et&quot;:[&#123;</span><br><span class="line">                &quot;ett&quot;:&quot;1588228193191&quot;,&quot;en&quot;:&quot;ad&quot;,&quot;kv&quot;:&#123;&quot;activityId&quot;:&quot;1&quot;,&quot;displayMills&quot;:&quot;113201&quot;,&quot;entry&quot;:&quot;3&quot;,&quot;action&quot;:&quot;5&quot;,&quot;contentType&quot;:&quot;0&quot;&#125;</span><br><span class="line">                &#125;,&#123;</span><br><span class="line">                &quot;ett&quot;:&quot;1588300304713&quot;,&quot;en&quot;:&quot;notification&quot;,&quot;kv&quot;:&#123;&quot;ap_time&quot;:&quot;1588277440794&quot;,&quot;action&quot;:&quot;2&quot;,&quot;type&quot;:&quot;3&quot;,&quot;content&quot;:&quot;&quot;&#125;</span><br><span class="line">                &#125;,&#123;</span><br><span class="line">                &quot;ett&quot;:&quot;1588249203743&quot;,&quot;en&quot;:&quot;active_background&quot;,&quot;kv&quot;:&#123;&quot;active_source&quot;:&quot;3&quot;&#125;</span><br><span class="line">                &#125;,&#123;</span><br><span class="line">                &quot;ett&quot;:&quot;1588254200122&quot;,&quot;en&quot;:&quot;favorites&quot;,&quot;kv&quot;:&#123;&quot;course_id&quot;:5,&quot;id&quot;:0,&quot;add_time&quot;:&quot;1588264138625&quot;,&quot;userid&quot;:0&#125;</span><br><span class="line">                &#125;,&#123;</span><br><span class="line">                &quot;ett&quot;:&quot;1588281152824&quot;,&quot;en&quot;:&quot;praise&quot;,&quot;kv&quot;:&#123;&quot;target_id&quot;:4,&quot;id&quot;:3,&quot;type&quot;:3,&quot;add_time&quot;:&quot;1588307696417&quot;,&quot;userid&quot;:8&#125;</span><br><span class="line">                &#125;]</span><br><span class="line">         &#125;</span><br><span class="line">         *&#x2F;</span><br><span class="line">        &#x2F;&#x2F; 1 切割</span><br><span class="line">        String[] logContents &#x3D; log.split(&quot;\\|&quot;);</span><br><span class="line">        &#x2F;&#x2F; 2 校验</span><br><span class="line">        if (logContents.length !&#x3D; 2) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;3 校验服务器时间</span><br><span class="line">        if (logContents[0].length() !&#x3D; 13 || !NumberUtils.isDigits(logContents[0])) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 4 校验 json</span><br><span class="line">        if (!logContents[1].trim().startsWith(&quot;&#123;&quot;)</span><br><span class="line">                || !logContents[1].trim().endsWith(&quot;&#125;&quot;)) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">    public static boolean validateStart(String log) &#123;</span><br><span class="line">        &#x2F;**</span><br><span class="line">         &#123;</span><br><span class="line">         &quot;action&quot;:&quot;1&quot;,&quot;ar&quot;:&quot;MX&quot;,&quot;ba&quot;:&quot;HTC&quot;,&quot;detail&quot;:&quot;201&quot;,&quot;en&quot;:&quot;start&quot;,&quot;entry&quot;:&quot;4&quot;,&quot;extend1&quot;:&quot;&quot;,</span><br><span class="line">         &quot;g&quot;:&quot;4Z174142@gmail.com&quot;,&quot;hw&quot;:&quot;750*1134&quot;,&quot;l&quot;:&quot;pt&quot;,&quot;la&quot;:&quot;-29.7&quot;,&quot;ln&quot;:&quot;-48.1&quot;,&quot;loading_time&quot;:&quot;0&quot;,</span><br><span class="line">         &quot;md&quot;:&quot;HTC-18&quot;,&quot;mid&quot;:&quot;14&quot;,&quot;nw&quot;:&quot;3G&quot;,&quot;open_ad_type&quot;:&quot;2&quot;,&quot;os&quot;:&quot;8.0.8&quot;,&quot;sr&quot;:&quot;D&quot;,&quot;sv&quot;:&quot;V2.8.2&quot;,</span><br><span class="line">         &quot;t&quot;:&quot;1588251833523&quot;,&quot;uid&quot;:&quot;14&quot;,&quot;vc&quot;:&quot;15&quot;,&quot;vn&quot;:&quot;1.2.9&quot;</span><br><span class="line">         &#125;</span><br><span class="line">        *&#x2F;</span><br><span class="line">        if (log &#x3D;&#x3D; null) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 校验 json</span><br><span class="line">        if (!log.trim().startsWith(&quot;&#123;&quot;) || !log.trim().endsWith(&quot;&#125;&quot;)) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>LogETLInterceptor</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">import org.apache.flume.Context;</span><br><span class="line">import org.apache.flume.Event;</span><br><span class="line">import org.apache.flume.interceptor.Interceptor;</span><br><span class="line">import java.nio.charset.Charset;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line">public class LogETLInterceptor implements Interceptor &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void initialize() &#123;</span><br><span class="line">    &#x2F;&#x2F;初始化</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    public Event intercept(Event event) &#123;</span><br><span class="line">        &#x2F;&#x2F; 1 获取数据</span><br><span class="line">        byte[] body &#x3D; event.getBody();</span><br><span class="line">        String log &#x3D; new String(body, Charset.forName(&quot;UTF-8&quot;));</span><br><span class="line">        &#x2F;&#x2F; 2 判断数据类型并向 Header 中赋值</span><br><span class="line">        if (log.contains(&quot;start&quot;)) &#123;</span><br><span class="line">            if (LogUtils.validateStart(log)) &#123;</span><br><span class="line">                return event;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            if (LogUtils.validateEvent(log)) &#123;</span><br><span class="line">                return event;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 3 返回校验结果</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    public List&lt;Event&gt; intercept(List&lt;Event&gt; events) &#123;</span><br><span class="line">        ArrayList&lt;Event&gt; interceptors &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line">        for (Event event : events) &#123;</span><br><span class="line">            Event intercept1 &#x3D; intercept(event);</span><br><span class="line">            if (intercept1 !&#x3D; null) &#123;</span><br><span class="line">                interceptors.add(intercept1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return interceptors;</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    public void close() &#123;</span><br><span class="line">    &#x2F;&#x2F;关闭</span><br><span class="line">    &#125;</span><br><span class="line">    public static class Builder implements Interceptor.Builder &#123;</span><br><span class="line">        @Override</span><br><span class="line">        public Interceptor build() &#123;</span><br><span class="line">            return new LogETLInterceptor();</span><br><span class="line">        &#125;</span><br><span class="line">        @Override</span><br><span class="line">        public void configure(Context context) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>LogTypeInterceptor</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">import org.apache.flume.Context;</span><br><span class="line">import org.apache.flume.Event;</span><br><span class="line">import org.apache.flume.interceptor.Interceptor;</span><br><span class="line">import java.nio.charset.Charset;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Map;</span><br><span class="line">public class LogTypeInterceptor implements Interceptor &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void initialize() &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    public Event intercept(Event event) &#123;</span><br><span class="line">        &#x2F;&#x2F; 区分日志类型： body header</span><br><span class="line">        &#x2F;&#x2F; 1 获取 body 数据</span><br><span class="line">        byte[] body &#x3D; event.getBody();</span><br><span class="line">        String log &#x3D; new String(body, Charset.forName(&quot;UTF-8&quot;));</span><br><span class="line">        &#x2F;&#x2F; 2 获取 header</span><br><span class="line">        Map&lt;String, String&gt; headers &#x3D; event.getHeaders();</span><br><span class="line">        &#x2F;&#x2F; 3 判断数据类型并向 Header 中赋值</span><br><span class="line">        if (log.contains(&quot;start&quot;)) &#123;</span><br><span class="line">            headers.put(&quot;topic&quot;, &quot;topic_start&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            headers.put(&quot;topic&quot;, &quot;topic_event&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        return event;</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    public List&lt;Event&gt; intercept(List&lt;Event&gt; events) &#123;</span><br><span class="line">        ArrayList&lt;Event&gt; interceptors &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line">        for (Event event : events) &#123;</span><br><span class="line">            Event intercept1 &#x3D; intercept(event);</span><br><span class="line">            interceptors.add(intercept1);</span><br><span class="line">        &#125;</span><br><span class="line">        return interceptors;</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    public void close() &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    public static class Builder implements Interceptor.Builder &#123;</span><br><span class="line">        @Override</span><br><span class="line">        public Interceptor build() &#123;</span><br><span class="line">            return new LogTypeInterceptor();</span><br><span class="line">        &#125;</span><br><span class="line">        @Override</span><br><span class="line">        public void configure(Context context) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>将项目打包放入Flume/lib目录下(所有节点)：<br>CDH路径参考：/opt/cloudera/parcels/CDH-6.2.0-1.cdh6.2.0.p0.967373/lib/flume-ng/lib</p></blockquote></li></ul><p><a name="blogTitle14"></a></p><h3 id="4-3-Flume启停脚本"><a href="#4-3-Flume启停脚本" class="headerlink" title="4.3 Flume启停脚本"></a>4.3 Flume启停脚本</h3><ul><li><p>vim /root/log-kafka-flume.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#! &#x2F;bin&#x2F;bash</span><br><span class="line">case $1 in</span><br><span class="line">&quot;start&quot;)&#123;</span><br><span class="line">for i in cdh02.cm cdh03.cm</span><br><span class="line">do</span><br><span class="line">echo &quot; --------启动 $i 消费 flume-------&quot;</span><br><span class="line">ssh $i &quot;nohup flume-ng agent --conf-file &#x2F;root&#x2F;test&#x2F;file-flume-kafka.conf --name a1 -Dflume.root.logger&#x3D;INFO,LOGFILE &gt;&#x2F;root&#x2F;test&#x2F;file-flume-kafka.log 2&gt;&amp;1 &amp;&quot;</span><br><span class="line">done</span><br><span class="line">&#125;;;</span><br><span class="line">&quot;stop&quot;)&#123;</span><br><span class="line">for i in cdh02.cm cdh03.cm</span><br><span class="line">do</span><br><span class="line">echo &quot; --------停止 $i 消费 flume-------&quot;</span><br><span class="line">ssh $i &quot;ps -ef | grep file-flume-kafka | grep -v grep |awk &#39;&#123;print \$2&#125;&#39; | xargs kill&quot;</span><br><span class="line">done</span><br><span class="line">&#125;;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445286-e3d74a0a-846a-497d-9395-835dc06bbe36.png#align=left&display=inline&height=378&margin=%5Bobject%20Object%5D&originHeight=378&originWidth=1509&size=0&status=done&style=none&width=1509" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445293-b89b1d01-98f1-4ea2-9a5f-8b49b3bb9549.png#align=left&display=inline&height=385&margin=%5Bobject%20Object%5D&originHeight=385&originWidth=1511&size=0&status=done&style=none&width=1511" alt><br><a name="blogTitle15"></a></p><h3 id="4-4-Flume：Kafka-gt-HDFS配置编写"><a href="#4-4-Flume：Kafka-gt-HDFS配置编写" class="headerlink" title="4.4 Flume：Kafka-&gt;HDFS配置编写"></a>4.4 Flume：Kafka-&gt;HDFS配置编写</h3><blockquote><p>在第三台服务上准备</p></blockquote></li><li><p>vim /root/test/kafka-flume-hdfs.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">## 组件 </span><br><span class="line">a1.sources&#x3D;r1 r2</span><br><span class="line">a1.channels&#x3D;c1 c2 </span><br><span class="line">a1.sinks&#x3D;k1 k2</span><br><span class="line">    </span><br><span class="line">## Kafka-source1</span><br><span class="line">a1.sources.r1.type &#x3D; org.apache.flume.source.kafka.KafkaSource</span><br><span class="line">a1.sources.r1.batchSize &#x3D; 5000</span><br><span class="line">a1.sources.r1.batchDurationMillis &#x3D; 2000</span><br><span class="line">a1.sources.r1.kafka.bootstrap.servers&#x3D; cdh01.cm:9092,cdh02.cm:9092,cdh03.cm:9092</span><br><span class="line">a1.sources.r1.kafka.topics &#x3D; topic_start</span><br><span class="line">## Kafka- source2</span><br><span class="line">a1.sources.r2.type &#x3D; org.apache.flume.source.kafka.KafkaSource</span><br><span class="line">a1.sources.r2.batchSize &#x3D; 5000</span><br><span class="line">a1.sources.r2.batchDurationMillis &#x3D; 2000</span><br><span class="line">a1.sources.r2.kafka.bootstrap.servers &#x3D; cdh01.cm:9092,cdh02.cm:9092,cdh03.cm:9092</span><br><span class="line">a1.sources.r2.kafka.topics &#x3D; topic_event</span><br><span class="line">    </span><br><span class="line">## channel1</span><br><span class="line">a1.channels.c1.type &#x3D; file</span><br><span class="line">##索引文件路径</span><br><span class="line">a1.channels.c1.checkpointDir&#x3D;&#x2F;root&#x2F;test&#x2F;flume&#x2F;checkpoint&#x2F;behavior1</span><br><span class="line">##持久化路径</span><br><span class="line">a1.channels.c1.dataDirs &#x3D; &#x2F;root&#x2F;test&#x2F;flume&#x2F;data&#x2F;behavior1&#x2F;</span><br><span class="line">a1.channels.c1.maxFileSize &#x3D; 2146435071</span><br><span class="line">a1.channels.c1.capacity &#x3D; 1000000</span><br><span class="line">a1.channels.c1.keep-alive &#x3D; 6</span><br><span class="line">## channel2</span><br><span class="line">a1.channels.c2.type &#x3D; file</span><br><span class="line">##索引文件路径</span><br><span class="line">a1.channels.c1.checkpointDir&#x3D;&#x2F;root&#x2F;test&#x2F;flume&#x2F;checkpoint&#x2F;behavior2</span><br><span class="line">##持久化路径</span><br><span class="line">a1.channels.c1.dataDirs &#x3D; &#x2F;root&#x2F;test&#x2F;flume&#x2F;data&#x2F;behavior2&#x2F;</span><br><span class="line">a1.channels.c2.maxFileSize &#x3D; 2146435071</span><br><span class="line">a1.channels.c2.capacity &#x3D; 1000000</span><br><span class="line">a1.channels.c2.keep-alive &#x3D; 6</span><br><span class="line">    </span><br><span class="line">## HDFS-sink1</span><br><span class="line">a1.sinks.k1.type &#x3D; hdfs</span><br><span class="line">a1.sinks.k1.hdfs.path&#x3D;&#x2F;origin_data&#x2F;gmall&#x2F;log&#x2F;topic_start&#x2F;%Y-%m-%d</span><br><span class="line">a1.sinks.k1.hdfs.filePrefix &#x3D; logstart-</span><br><span class="line">## HDFS-sink2       </span><br><span class="line">a1.sinks.k2.type &#x3D; hdfs</span><br><span class="line">a1.sinks.k2.hdfs.path &#x3D; &#x2F;origin_data&#x2F;gmall&#x2F;log&#x2F;topic_event&#x2F;%Y-%m-%d</span><br><span class="line">a1.sinks.k2.hdfs.filePrefix &#x3D; logevent-</span><br><span class="line">    </span><br><span class="line">## 不要产生大量小文件</span><br><span class="line">a1.sinks.k1.hdfs.rollInterval &#x3D; 10</span><br><span class="line">a1.sinks.k1.hdfs.rollSize &#x3D; 134217728</span><br><span class="line">a1.sinks.k1.hdfs.rollCount &#x3D; 0</span><br><span class="line">a1.sinks.k2.hdfs.rollInterval &#x3D; 50</span><br><span class="line">a1.sinks.k2.hdfs.rollSize &#x3D; 134217728</span><br><span class="line">a1.sinks.k2.hdfs.rollCount &#x3D; 0</span><br><span class="line">## 控制输出文件是原生文件。</span><br><span class="line">a1.sinks.k1.hdfs.fileType &#x3D; CompressedStream</span><br><span class="line">a1.sinks.k2.hdfs.fileType &#x3D; CompressedStream</span><br><span class="line">a1.sinks.k1.hdfs.codeC &#x3D; snappy</span><br><span class="line">a1.sinks.k2.hdfs.codeC &#x3D; snappy</span><br><span class="line">    </span><br><span class="line">## 组件拼装</span><br><span class="line">a1.sources.r1.channels &#x3D; c1</span><br><span class="line">a1.sinks.k1.channel&#x3D; c1</span><br><span class="line">a1.sources.r2.channels &#x3D; c2</span><br><span class="line">a1.sinks.k2.channel&#x3D; c2</span><br></pre></td></tr></table></figure><p><a name="blogTitle16"></a></p><h3 id="4-5-Flume启停脚本"><a href="#4-5-Flume启停脚本" class="headerlink" title="4.5 Flume启停脚本"></a>4.5 Flume启停脚本</h3><blockquote><p>在第三台服务上准备</p></blockquote></li><li><p>vim /root/test/kafka-hdfs-flume.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#! &#x2F;bin&#x2F;bash</span><br><span class="line">case $1 in</span><br><span class="line">&quot;start&quot;)&#123;</span><br><span class="line">for i in cdh01.cm</span><br><span class="line">do</span><br><span class="line">echo &quot; --------启动 $i 消费 flume-------&quot;</span><br><span class="line">ssh $i &quot;nohup flume-ng agent --conf-file &#x2F;root&#x2F;test&#x2F;kafka-flume-hdfs.conf --name a1 -Dflume.root.logger&#x3D;INFO,LOGFILE &gt;&#x2F;root&#x2F;test&#x2F;kafka-flume-hdfs.log 2&gt;&amp;1 &amp;&quot;</span><br><span class="line">done</span><br><span class="line">&#125;;;</span><br><span class="line">&quot;stop&quot;)&#123;</span><br><span class="line">for i in cdh01.cm</span><br><span class="line">do</span><br><span class="line">echo &quot; --------停止 $i 消费 flume-------&quot;</span><br><span class="line">ssh $i &quot;ps -ef | grep kafka-flume-hdfs | grep -v grep |awk &#39;&#123;print \$2&#125;&#39; | xargs kill&quot;</span><br><span class="line">done</span><br><span class="line">&#125;;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure></li></ul><p><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445281-63bb8866-411b-4829-b0b3-0d989bca1884.png#align=left&display=inline&height=571&margin=%5Bobject%20Object%5D&originHeight=571&originWidth=1159&size=0&status=done&style=none&width=1159" alt><br><a name="blogTitle17"></a></p><h2 id="5-业务数据"><a href="#5-业务数据" class="headerlink" title="5 业务数据"></a>5 业务数据</h2><blockquote><p>此模块后主要针对于企业报表决策，为数据分析提供数据支持，解决大数据量下，无法快速产出报表，及一些即席业务需求的快速展示提供数据支撑。划分企业离线与实时业务，用离线的方式直观的管理数据呈现，为实时方案奠定良好基础。</p></blockquote><p><a name="blogTitle18"></a></p><h3 id="5-1-电商业务流程"><a href="#5-1-电商业务流程" class="headerlink" title="5.1 电商业务流程"></a>5.1 电商业务流程</h3><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445499-c8b438ec-8428-4251-83c3-daecf0ea0f47.png#align=left&display=inline&height=647&margin=%5Bobject%20Object%5D&originHeight=647&originWidth=959&size=0&status=done&style=none&width=959" alt><br><a name="blogTitle19"></a></p><h3 id="5-2-SKU-SPU"><a href="#5-2-SKU-SPU" class="headerlink" title="5.2 SKU-SPU"></a>5.2 SKU-SPU</h3><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445306-c312505f-c425-4ba5-97ee-9970d00d11df.png#align=left&display=inline&height=603&margin=%5Bobject%20Object%5D&originHeight=603&originWidth=1244&size=0&status=done&style=none&width=1244" alt></p><ul><li>SKU（Stock Keeping Unit）：库存量基本单位，现在已经被引申为产品统一编号的简称， 每种产品均对应有唯一的 SKU 号。</li><li>SPU（Standard Product Unit）：是商品信息聚合的最小单位，是一组可复用、易检索的 标准化信息集合。</li><li>总结：黑鲨3 手机就是 SPU。一台铠甲灰、256G 内存的就是 SKU。<br><a name="blogTitle20"></a><h3 id="5-3-业务表结构"><a href="#5-3-业务表结构" class="headerlink" title="5.3 业务表结构"></a>5.3 业务表结构</h3><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445320-2cc623a5-0587-4abf-a3ae-daaaf038854d.png#align=left&display=inline&height=682&margin=%5Bobject%20Object%5D&originHeight=682&originWidth=1134&size=0&status=done&style=none&width=1134" alt><br><a name="2a0538a3"></a><h4 id="5-3-1-订单表（order-info）"><a href="#5-3-1-订单表（order-info）" class="headerlink" title="5.3.1 订单表（order_info）"></a>5.3.1 订单表（order_info）</h4><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445293-807044ab-66a1-4421-823b-b7945c79f048.png#align=left&display=inline&height=370&margin=%5Bobject%20Object%5D&originHeight=370&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="e3c30ff7"></a><h4 id="5-3-2-订单详情表（order-detail）"><a href="#5-3-2-订单详情表（order-detail）" class="headerlink" title="5.3.2 订单详情表（order_detail）"></a>5.3.2 订单详情表（order_detail）</h4><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445421-3fefa623-d4e1-4458-9247-ceafcc11bbd9.png#align=left&display=inline&height=188&margin=%5Bobject%20Object%5D&originHeight=188&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="ef4539a6"></a><h4 id="5-3-3-SKU-商品表（sku-info）"><a href="#5-3-3-SKU-商品表（sku-info）" class="headerlink" title="5.3.3 SKU 商品表（sku_info）"></a>5.3.3 SKU 商品表（sku_info）</h4><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445457-375551a4-5ba5-4fe2-8594-36a86445a0e9.png#align=left&display=inline&height=224&margin=%5Bobject%20Object%5D&originHeight=224&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="9ecdba66"></a><h4 id="5-3-4-用户表（user-info）"><a href="#5-3-4-用户表（user-info）" class="headerlink" title="5.3.4 用户表（user_info）"></a>5.3.4 用户表（user_info）</h4><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445409-4fcce741-b0a9-40fe-ae2a-e0669c51338b.png#align=left&display=inline&height=261&margin=%5Bobject%20Object%5D&originHeight=261&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="4097e291"></a><h4 id="5-3-5-商品一级分类表（base-category1）"><a href="#5-3-5-商品一级分类表（base-category1）" class="headerlink" title="5.3.5 商品一级分类表（base_category1）"></a>5.3.5 商品一级分类表（base_category1）</h4><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445599-b968e841-b432-4d76-87e3-e4e4990466c9.png#align=left&display=inline&height=93&margin=%5Bobject%20Object%5D&originHeight=93&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="edd3477b"></a><h4 id="5-3-6-商品二级分类表（base-category2）"><a href="#5-3-6-商品二级分类表（base-category2）" class="headerlink" title="5.3.6 商品二级分类表（base_category2）"></a>5.3.6 商品二级分类表（base_category2）</h4><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445399-404c5075-6615-4886-8101-ae6a9a2ea836.png#align=left&display=inline&height=99&margin=%5Bobject%20Object%5D&originHeight=99&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="761365da"></a><h4 id="5-3-7-商品三级分类表（base-category3）"><a href="#5-3-7-商品三级分类表（base-category3）" class="headerlink" title="5.3.7 商品三级分类表（base_category3）"></a>5.3.7 商品三级分类表（base_category3）</h4><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445762-7d1a4322-7ef5-4fe2-bb8b-ef97c0bcbb9a.png#align=left&display=inline&height=103&margin=%5Bobject%20Object%5D&originHeight=103&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="d73753a2"></a><h4 id="5-3-8-支付流水表（payment-info）"><a href="#5-3-8-支付流水表（payment-info）" class="headerlink" title="5.3.8 支付流水表（payment_info）"></a>5.3.8 支付流水表（payment_info）</h4><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445446820-0341ff71-434e-4a82-8036-eba14a8476b9.png#align=left&display=inline&height=199&margin=%5Bobject%20Object%5D&originHeight=199&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="8e375166"></a><h4 id="5-3-9-省份表（base-province）"><a href="#5-3-9-省份表（base-province）" class="headerlink" title="5.3.9 省份表（base_province）"></a>5.3.9 省份表（base_province）</h4><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445408-12faad35-63c2-4718-ac13-83b26354b3c3.png#align=left&display=inline&height=119&margin=%5Bobject%20Object%5D&originHeight=119&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="d0920d19"></a><h4 id="5-3-10-地区表（base-region）"><a href="#5-3-10-地区表（base-region）" class="headerlink" title="5.3.10 地区表（base_region）"></a>5.3.10 地区表（base_region）</h4><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445709-051d048d-66ef-40a7-981a-8538094858a6.png#align=left&display=inline&height=72&margin=%5Bobject%20Object%5D&originHeight=72&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="3df9abe4"></a><h4 id="5-3-11-品牌表（base-trademark）"><a href="#5-3-11-品牌表（base-trademark）" class="headerlink" title="5.3.11 品牌表（base_trademark）"></a>5.3.11 品牌表（base_trademark）</h4><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445417-956df41f-c8d8-43e9-a9ef-478c4e16fa95.png#align=left&display=inline&height=106&margin=%5Bobject%20Object%5D&originHeight=106&originWidth=1277&size=0&status=done&style=none&width=1277" alt><br><a name="e1eb5124"></a><h4 id="5-3-12-订单状态表（order-status-log）"><a href="#5-3-12-订单状态表（order-status-log）" class="headerlink" title="5.3.12 订单状态表（order_status_log）"></a>5.3.12 订单状态表（order_status_log）</h4><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445403-6ebe9cc2-6007-4e39-9647-1d63cb9886f4.png#align=left&display=inline&height=118&margin=%5Bobject%20Object%5D&originHeight=118&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="dbb7a316"></a><h4 id="5-3-13-SPU-商品表（spu-info）"><a href="#5-3-13-SPU-商品表（spu-info）" class="headerlink" title="5.3.13 SPU 商品表（spu_info）"></a>5.3.13 SPU 商品表（spu_info）</h4><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445616-7c564b8c-e4be-4942-a245-5a986b440689.png#align=left&display=inline&height=136&margin=%5Bobject%20Object%5D&originHeight=136&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="afc9aaeb"></a><h4 id="5-3-14-商品评论表（comment-info）"><a href="#5-3-14-商品评论表（comment-info）" class="headerlink" title="5.3.14 商品评论表（comment_info）"></a>5.3.14 商品评论表（comment_info）</h4><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445432-2a0d5fa0-0fcf-45b9-9d62-a3c97be4ced3.png#align=left&display=inline&height=260&margin=%5Bobject%20Object%5D&originHeight=260&originWidth=1132&size=0&status=done&style=none&width=1132" alt><br><a name="3cd84c4c"></a><h4 id="5-3-15-退单表（order-refund-info）"><a href="#5-3-15-退单表（order-refund-info）" class="headerlink" title="5.3.15 退单表（order_refund_info）"></a>5.3.15 退单表（order_refund_info）</h4><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445415-560c225d-39ad-4e97-ae5e-feded91e61bc.png#align=left&display=inline&height=211&margin=%5Bobject%20Object%5D&originHeight=211&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="86808c1f"></a><h4 id="5-3-16-加入购物车表（cart-info）"><a href="#5-3-16-加入购物车表（cart-info）" class="headerlink" title="5.3.16 加入购物车表（cart_info）"></a>5.3.16 加入购物车表（cart_info）</h4><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445420-ec008b1a-ac25-4d67-8f30-a4f22f8bf986.png#align=left&display=inline&height=229&margin=%5Bobject%20Object%5D&originHeight=229&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="e396f00d"></a><h4 id="5-3-17-商品收藏表（favor-info）"><a href="#5-3-17-商品收藏表（favor-info）" class="headerlink" title="5.3.17 商品收藏表（favor_info）"></a>5.3.17 商品收藏表（favor_info）</h4><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445413-5bc2fefc-43ea-4198-962a-68e04c3693b5.png#align=left&display=inline&height=167&margin=%5Bobject%20Object%5D&originHeight=167&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="599c2d57"></a><h4 id="5-3-18-优惠券领用表（coupon-use）"><a href="#5-3-18-优惠券领用表（coupon-use）" class="headerlink" title="5.3.18 优惠券领用表（coupon_use）"></a>5.3.18 优惠券领用表（coupon_use）</h4><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445440-5134d8aa-2085-457c-bb47-4ba611528bc1.png#align=left&display=inline&height=193&margin=%5Bobject%20Object%5D&originHeight=193&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="597f8aa7"></a><h4 id="5-3-19-优惠券表（coupon-info）"><a href="#5-3-19-优惠券表（coupon-info）" class="headerlink" title="5.3.19 优惠券表（coupon_info）"></a>5.3.19 优惠券表（coupon_info）</h4><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445469-06ad320b-4efb-4e48-b359-66b5a0180987.png#align=left&display=inline&height=306&margin=%5Bobject%20Object%5D&originHeight=306&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="14b73501"></a><h4 id="5-3-20-活动表（activity-info）"><a href="#5-3-20-活动表（activity-info）" class="headerlink" title="5.3.20 活动表（activity_info）"></a>5.3.20 活动表（activity_info）</h4><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445480-d02fd607-dfe9-47b8-992f-8f675460e400.png#align=left&display=inline&height=172&margin=%5Bobject%20Object%5D&originHeight=172&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="23b08d0d"></a><h4 id="5-3-21-活动订单关联表（activity-order）"><a href="#5-3-21-活动订单关联表（activity-order）" class="headerlink" title="5.3.21 活动订单关联表（activity_order）"></a>5.3.21 活动订单关联表（activity_order）</h4></li></ul><p><a name="f2c83679"></a></p><h4 id="5-3-22-优惠规则表（activity-rule）"><a href="#5-3-22-优惠规则表（activity-rule）" class="headerlink" title="5.3.22 优惠规则表（activity_rule）"></a>5.3.22 优惠规则表（activity_rule）</h4><p><a name="c05cf4cd"></a></p><h4 id="5-3-23-编码字典表（base-dic）"><a href="#5-3-23-编码字典表（base-dic）" class="headerlink" title="5.3.23 编码字典表（base_dic）"></a>5.3.23 编码字典表（base_dic）</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445580-ef8aff78-4e6e-4cfa-8a34-5cb0929bbf8f.png#align=left&display=inline&height=133&margin=%5Bobject%20Object%5D&originHeight=133&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="41ae15c6"></a></p><h4 id="5-3-24-活动参与商品表（activity-sku）"><a href="#5-3-24-活动参与商品表（activity-sku）" class="headerlink" title="5.3.24 活动参与商品表（activity_sku）"></a>5.3.24 活动参与商品表（activity_sku）</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445455-d299fd9e-7ed4-4419-a4eb-41e0d3af4c25.png#align=left&display=inline&height=181&margin=%5Bobject%20Object%5D&originHeight=181&originWidth=1279&size=0&status=done&style=none&width=1279" alt><br><a name="blogTitle21"></a></p><h3 id="5-4-时间表结构"><a href="#5-4-时间表结构" class="headerlink" title="5.4 时间表结构"></a>5.4 时间表结构</h3><p><a name="f09b2786"></a></p><h4 id="5-4-1-时间表（date-info）"><a href="#5-4-1-时间表（date-info）" class="headerlink" title="5.4.1 时间表（date_info）"></a>5.4.1 时间表（date_info）</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445509-9e9b8580-ed76-4d31-9524-0d9d35af8e7e.png#align=left&display=inline&height=194&margin=%5Bobject%20Object%5D&originHeight=194&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="f703d98c"></a></p><h4 id="5-4-2-假期表（holiday-info）"><a href="#5-4-2-假期表（holiday-info）" class="headerlink" title="5.4.2 假期表（holiday_info）"></a>5.4.2 假期表（holiday_info）</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445498-cace1b91-fd1c-495e-ae9e-5b20b950f181.png#align=left&display=inline&height=80&margin=%5Bobject%20Object%5D&originHeight=80&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="421431fc"></a></p><h4 id="5-4-3-假期年表（holiday-year）"><a href="#5-4-3-假期年表（holiday-year）" class="headerlink" title="5.4.3 假期年表（holiday_year）"></a>5.4.3 假期年表（holiday_year）</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445585-dfcd1dca-4af1-4822-98c0-729ff17ad0cd.png#align=left&display=inline&height=105&margin=%5Bobject%20Object%5D&originHeight=105&originWidth=820&size=0&status=done&style=none&width=820" alt><br><a name="blogTitle22"></a></p><h2 id="6-同步策略及数仓分层"><a href="#6-同步策略及数仓分层" class="headerlink" title="6 同步策略及数仓分层"></a>6 同步策略及数仓分层</h2><blockquote><p>数据同步策略的类型包括：全量表、增量表、新增及变化表</p></blockquote><ul><li>全量表：每天一个分区，存储完整的数据。<br></li><li>增量表：每天新增数据放在一个分区，存储新增加的数据。<br></li><li>新增及变化表：每天新增和变化的数据放在一个分区，存储新增加的数据和变化的数据。<br></li><li>特殊表：没有分区，只需要存储一次。<br><br><a name="blogTitle23"></a><h3 id="6-1-全量策略"><a href="#6-1-全量策略" class="headerlink" title="6.1 全量策略"></a>6.1 全量策略</h3><blockquote><p>每日全量，每天存储一份完整数据，作为一个分区。<br>适合场景：表数据量不大，且有新增或修改业务的场景<br>例如：品牌表、编码表、商品分类表、优惠规则表、活动表、商品表、加购表、收藏表、SKU/SPU表</p></blockquote></li></ul><p><a name="blogTitle24"></a></p><h3 id="6-2-增量策略"><a href="#6-2-增量策略" class="headerlink" title="6.2 增量策略"></a>6.2 增量策略</h3><blockquote><p>每日增量，每天储存一份增量数据，作为一个分区<br>适合场景：表数据量大，且只会有新增数据的场景。<br>例如：退单表、订单状态表、支付流水表、订单详情表、活动与订单关联表、商品评论表</p></blockquote><p><a name="blogTitle25"></a></p><h3 id="6-3-新增及变化策略"><a href="#6-3-新增及变化策略" class="headerlink" title="6.3 新增及变化策略"></a>6.3 新增及变化策略</h3><blockquote><p>每日新增及变化，储存创建时间和操作时间都是今天的数据，作为一个分区<br>适合场景：表数据量大，既会有新增，又会有修改。<br>例如：用户表、订单表、优惠卷领用表。</p></blockquote><p><a name="blogTitle26"></a></p><h3 id="6-4-特殊策略"><a href="#6-4-特殊策略" class="headerlink" title="6.4 特殊策略"></a>6.4 特殊策略</h3><blockquote><p>某些特殊的维度表，可不必遵循上述同步策略，在数仓中只做一次同步，数据不变化不更新<br>适合场景：表数据几乎不会变化<br>1.客观世界维度：没变化的客观世界的维度（比如性别，地区，民族，政治成分，鞋子尺码）可以只存一 份固定值<br>2.日期维度：日期维度可以一次性导入一年或若干年的数据。<br>3.地区维度：省份表、地区表</p></blockquote><p><a name="blogTitle27"></a></p><h3 id="6-5-分析业务表同步策略"><a href="#6-5-分析业务表同步策略" class="headerlink" title="6.5 分析业务表同步策略"></a>6.5 分析业务表同步策略</h3><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445558-f3526a7c-422a-4254-b832-a0edb969ecd0.png#align=left&display=inline&height=577&margin=%5Bobject%20Object%5D&originHeight=577&originWidth=1161&size=0&status=done&style=none&width=1161" alt></p><blockquote><p>考虑到特殊表可能会缓慢变化，比如打仗占地盘，地区表可能就会发生变化，故也选择分区全量同步策略。</p></blockquote><p><a name="blogTitle28"></a></p><h3 id="6-6-数仓分层"><a href="#6-6-数仓分层" class="headerlink" title="6.6 数仓分层"></a>6.6 数仓分层</h3><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445503-1f00df37-1048-4dab-bd2a-b93874b97ed6.png#align=left&display=inline&height=563&margin=%5Bobject%20Object%5D&originHeight=563&originWidth=1141&size=0&status=done&style=none&width=1141" alt></p><ul><li><p>为什么分层：</p><ul><li>简单化：把复杂的任务分解为多层来完成，每层处理各自的任务，方便定位问题。</li><li>减少重复开发：规范数据分层，通过中间层数据，能够极大的减少重复计算，增加结果复用性。</li><li>隔离数据：不论是数据异常还是数据敏感性，使真实数据和统计数据解耦。</li><li>一般在DWD层进行维度建模</li></ul></li><li><p>ODS层：原始数据层，存放原始数据</p></li><li><p>DWD层：对ODS层数据进行清洗（去空、脏数据，转换类型等），维度退化，脱敏(保护隐私)</p></li><li><p>DWS层：以DWD为基础，按天进行汇总</p></li><li><p>DWT层：以DWS为基础，按主题进行汇总</p></li><li><p>ADS层：为各种数据分析报表提供数据<br><a name="blogTitle29"></a></p><h2 id="7-Sqoop同步数据"><a href="#7-Sqoop同步数据" class="headerlink" title="7 Sqoop同步数据"></a>7 Sqoop同步数据</h2><blockquote><p>Sqoop注意点：<br>Hive 中的 Null 在底层是以“\N”来存储，而 MySQL 中的 Null 在底层就是 Null，为了 保证数据两端的一致性。</p><ul><li>在导出数据时采用 –input-null-string 和 –input-null-non-string</li><li>导入数据时采用 –null-string 和 –null-non-string</li></ul></blockquote><p>本例思路为：sqoop抽取mysql数据上传至Hdfs上，存储为parquet文件，在建立hive-ods表，使用对应数据。</p><blockquote><p>使用DolphinScheduler调度执行脚本。</p></blockquote></li><li><p>Sqoop采集Mysql和Hive数据格式</p><table><thead><tr><th>mysql字段类型</th><th>hive:ods字段类型</th><th>hive:dwd-ads字段类型</th></tr></thead><tbody><tr><td>tinyint</td><td>tinyint</td><td>tinyint</td></tr><tr><td>int</td><td>int</td><td>int</td></tr><tr><td>bigint</td><td>bigint</td><td>bigint</td></tr><tr><td>varchar</td><td>string</td><td>string</td></tr><tr><td>datetime</td><td>bigint</td><td>string</td></tr><tr><td>bit</td><td>boolean</td><td>int</td></tr><tr><td>double</td><td>double</td><td>double</td></tr><tr><td>decimal</td><td>decimal</td><td>decimal</td></tr></tbody></table></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445576-95ae80a2-e157-4ba2-ac2f-39c0057bfc4d.png#align=left&display=inline&height=820&margin=%5Bobject%20Object%5D&originHeight=820&originWidth=1920&size=0&status=done&style=none&width=1920" alt><br><a name="blogTitle30"></a></p><h2 id="8-ods层构建"><a href="#8-ods层构建" class="headerlink" title="8 ods层构建"></a>8 ods层构建</h2><p><a name="blogTitle31"></a></p><h3 id="8-1-ods建表"><a href="#8-1-ods建表" class="headerlink" title="8.1 ods建表"></a>8.1 ods建表</h3><blockquote><p>hive创建ods数据库，使用DolphinScheduler创建数据源，在创建DAG时需要选择hive库。<br>顺便将dwd，dws，dwt，ads一起创建了</p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445577-7f5949c5-01ad-4097-b19b-0ebe0cfd3546.png#align=left&display=inline&height=625&margin=%5Bobject%20Object%5D&originHeight=625&originWidth=847&size=0&status=done&style=none&width=847" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445447507-0aa01c2c-12fc-4d51-ba3e-a055609bcb47.png#align=left&display=inline&height=682&margin=%5Bobject%20Object%5D&originHeight=682&originWidth=1134&size=0&status=done&style=none&width=1134" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445580-441c434e-54a5-49d6-973a-ef7d97c1b4ac.png#align=left&display=inline&height=577&margin=%5Bobject%20Object%5D&originHeight=577&originWidth=1161&size=0&status=done&style=none&width=1161" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445560-1a8ada2f-b802-4db9-b161-788f80c89770.png#align=left&display=inline&height=683&margin=%5Bobject%20Object%5D&originHeight=683&originWidth=1168&size=0&status=done&style=none&width=1168" alt></p><ol><li><p>base_dic</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__base_dic</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__base_dic&#96;(</span><br><span class="line">  &#96;dic_code&#96; string COMMENT &#39;编号&#39;,</span><br><span class="line">  &#96;dic_name&#96; string COMMENT &#39;编码名称&#39;,</span><br><span class="line">  &#96;parent_code&#96;  string COMMENT &#39;父编号&#39;,</span><br><span class="line">  &#96;create_time&#96; bigint COMMENT &#39;创建日期&#39;,</span><br><span class="line">  &#96;operate_time&#96; bigint COMMENT &#39;修改日期&#39;</span><br><span class="line">  ) COMMENT &#39;编码字典表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;base_dic&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>base_trademark</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__base_trademark</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__base_trademark&#96;(</span><br><span class="line">  &#96;tm_id&#96; string COMMENT &#39;品牌id&#39;,</span><br><span class="line">  &#96;tm_name&#96; string COMMENT &#39;品牌名称&#39;</span><br><span class="line">  ) COMMENT &#39;品牌表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;base_trademark&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>base_category3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__base_category3</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__base_category3&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;编号&#39;,</span><br><span class="line">  &#96;name&#96; string COMMENT &#39;三级分类名称&#39;,</span><br><span class="line">  &#96;category2_id&#96; bigint COMMENT &#39;二级分类编号&#39;</span><br><span class="line">  ) COMMENT &#39;三级分类表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;base_category3&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>base_category2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__base_category2</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__base_category2&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;编号&#39;,</span><br><span class="line">  &#96;name&#96; string COMMENT &#39;二级分类名称&#39;,</span><br><span class="line">  &#96;category1_id&#96; bigint COMMENT &#39;一级分类编号&#39;</span><br><span class="line">  ) COMMENT &#39;二级分类表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;base_category2&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>base_category1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__base_category1</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__base_category1&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;编号&#39;,</span><br><span class="line">  &#96;name&#96; string COMMENT &#39;分类名称&#39;</span><br><span class="line">  ) COMMENT &#39;一级分类表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;base_category1&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>activity_rule</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__activity_rule</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__activity_rule&#96;(</span><br><span class="line">  &#96;id&#96; int COMMENT &#39;编号&#39;,</span><br><span class="line">  &#96;activity_id&#96; int COMMENT &#39;类型&#39;,</span><br><span class="line">  &#96;condition_amount&#96; decimal(16,2) COMMENT &#39;满减金额&#39;,</span><br><span class="line">  &#96;condition_num&#96; bigint COMMENT &#39;满减件数&#39;,</span><br><span class="line">  &#96;benefit_amount&#96; decimal(16,2) COMMENT &#39;优惠金额&#39;,</span><br><span class="line">  &#96;benefit_discount&#96; bigint COMMENT &#39;优惠折扣&#39;,</span><br><span class="line">  &#96;benefit_level&#96; bigint COMMENT &#39;优惠级别&#39;</span><br><span class="line">  ) COMMENT &#39;优惠规则&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;activity_rule&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>activity_info</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__activity_info</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__activity_info&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;活动id&#39;,</span><br><span class="line">  &#96;activity_name&#96; string COMMENT &#39;活动名称&#39;,</span><br><span class="line">  &#96;activity_type&#96; string COMMENT &#39;活动类型&#39;,</span><br><span class="line">  &#96;start_time&#96; bigint COMMENT &#39;开始时间&#39;,</span><br><span class="line">  &#96;end_time&#96; bigint COMMENT &#39;结束时间&#39;,</span><br><span class="line">  &#96;create_time&#96; bigint COMMENT &#39;创建时间&#39;</span><br><span class="line">  ) COMMENT &#39;活动表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;activity_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>activity_sku</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__activity_sku</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__activity_sku&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;编号&#39;,</span><br><span class="line">  &#96;activity_id&#96; bigint COMMENT &#39;活动id&#39;,</span><br><span class="line">  &#96;sku_id&#96; bigint COMMENT &#39;sku_id&#39;,</span><br><span class="line">  &#96;create_time&#96; bigint COMMENT &#39;创建时间&#39;</span><br><span class="line">  ) COMMENT &#39;活动参与商品&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;activity_sku&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>cart_info</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__cart_info</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__cart_info&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;编号&#39;,</span><br><span class="line">  &#96;user_id&#96; bigint COMMENT &#39;用户id&#39;,</span><br><span class="line">  &#96;sku_id&#96; bigint COMMENT &#39;sku_id&#39;,</span><br><span class="line">  &#96;cart_price&#96; decimal(10,2) COMMENT &#39;放入购物车时价格&#39;,</span><br><span class="line">  &#96;sku_num&#96; bigint COMMENT &#39;数量&#39;,</span><br><span class="line">  &#96;sku_name&#96; string COMMENT &#39;sku名称&#39;,</span><br><span class="line">  &#96;create_time&#96; bigint COMMENT &#39;创建时间&#39;,</span><br><span class="line">  &#96;operate_time&#96; bigint COMMENT &#39;修改时间&#39;,</span><br><span class="line">  &#96;is_ordered&#96; bigint COMMENT &#39;是否已经下单&#39;,</span><br><span class="line">  &#96;order_time&#96; bigint COMMENT &#39;下单时间&#39;</span><br><span class="line">  ) COMMENT &#39;购物车表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;cart_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>favor_info</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__favor_info</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__favor_info&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;编号&#39;,</span><br><span class="line">  &#96;user_id&#96; bigint COMMENT &#39;用户id&#39;,</span><br><span class="line">  &#96;sku_id&#96; bigint COMMENT &#39;sku_id&#39;,</span><br><span class="line">  &#96;spu_id&#96; bigint COMMENT &#39;商品id&#39;,</span><br><span class="line">  &#96;is_cancel&#96; string COMMENT &#39;是否已取消 0 正常 1 已取消&#39;,</span><br><span class="line">  &#96;create_time&#96; bigint COMMENT &#39;创建时间&#39;,</span><br><span class="line">  &#96;cancel_time&#96; bigint COMMENT &#39;修改时间&#39;</span><br><span class="line">  ) COMMENT &#39;商品收藏表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;favor_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>coupon_info</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__coupon_info</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__coupon_info&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;购物券编号&#39;,</span><br><span class="line">  &#96;coupon_name&#96; string COMMENT &#39;购物券名称&#39;,</span><br><span class="line">  &#96;coupon_type&#96; string COMMENT &#39;购物券类型 1 现金券 2 折扣券 3 满减券 4 满件打折券&#39;,</span><br><span class="line">  &#96;condition_amount&#96; decimal(10,2) COMMENT &#39;满额数&#39;,</span><br><span class="line">  &#96;condition_num&#96; bigint COMMENT &#39;满件数&#39;,</span><br><span class="line">  &#96;activity_id&#96; bigint COMMENT &#39;活动编号&#39;,</span><br><span class="line">  &#96;benefit_amount&#96; decimal(16,2) COMMENT &#39;减金额&#39;,</span><br><span class="line">  &#96;benefit_discount&#96; bigint COMMENT &#39;折扣&#39;,</span><br><span class="line">  &#96;create_time&#96; bigint COMMENT &#39;创建时间&#39;,</span><br><span class="line">  &#96;range_type&#96; string COMMENT &#39;范围类型 1、商品 2、品类 3、品牌&#39;,</span><br><span class="line">  &#96;spu_id&#96; bigint COMMENT &#39;商品id&#39;,</span><br><span class="line">  &#96;tm_id&#96; bigint COMMENT &#39;品牌id&#39;,</span><br><span class="line">  &#96;category3_id&#96; bigint COMMENT &#39;品类id&#39;,</span><br><span class="line">  &#96;limit_num&#96; int COMMENT &#39;最多领用次数&#39;,</span><br><span class="line">  &#96;operate_time&#96; bigint COMMENT &#39;修改时间&#39;,</span><br><span class="line">  &#96;expire_time&#96; bigint COMMENT &#39;过期时间&#39;</span><br><span class="line">  ) COMMENT &#39;优惠券表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;coupon_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>sku_info</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__sku_info</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__sku_info&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;skuid&#39;,</span><br><span class="line">  &#96;spu_id&#96; bigint COMMENT &#39;spuid&#39;,</span><br><span class="line">  &#96;price&#96; decimal(10,0) COMMENT &#39;价格&#39;,</span><br><span class="line">  &#96;sku_name&#96; string COMMENT &#39;sku名称&#39;,</span><br><span class="line">  &#96;sku_desc&#96; string COMMENT &#39;商品规格描述&#39;,</span><br><span class="line">  &#96;weight&#96; decimal(10,2) COMMENT &#39;重量&#39;,</span><br><span class="line">  &#96;tm_id&#96; bigint COMMENT &#39;品牌&#39;,</span><br><span class="line">  &#96;category3_id&#96; bigint COMMENT &#39;三级分类id&#39;,</span><br><span class="line">  &#96;create_time&#96; bigint COMMENT &#39;创建时间&#39;</span><br><span class="line">  ) COMMENT &#39;库存单元表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;sku_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>spu_info</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__spu_info</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__spu_info&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;商品id&#39;,</span><br><span class="line">  &#96;spu_name&#96; string COMMENT &#39;商品名称&#39;,</span><br><span class="line">  &#96;category3_id&#96; bigint COMMENT &#39;三级分类id&#39;,</span><br><span class="line">  &#96;tm_id&#96; bigint COMMENT &#39;品牌id&#39;</span><br><span class="line">  ) COMMENT &#39;商品表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;spu_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>base_province</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__base_province</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__base_province&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;id&#39;,</span><br><span class="line">  &#96;name&#96; string COMMENT &#39;省名称&#39;,</span><br><span class="line">  &#96;region_id&#96; string COMMENT &#39;大区id&#39;,</span><br><span class="line">  &#96;area_code&#96; string COMMENT &#39;行政区位码&#39;,</span><br><span class="line">  &#96;iso_code&#96; string COMMENT &#39;国际编码&#39;</span><br><span class="line">  ) COMMENT &#39;省份表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;base_province&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>base_region</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__base_region</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__base_region&#96;(</span><br><span class="line">  &#96;id&#96; string COMMENT &#39;大区id&#39;,</span><br><span class="line">  &#96;region_name&#96; string COMMENT &#39;大区名称&#39;</span><br><span class="line">  ) COMMENT &#39;地区表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;base_region&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>refund_info</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__order_refund_info</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__order_refund_info&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;编号&#39;,</span><br><span class="line">  &#96;user_id&#96; bigint COMMENT &#39;用户id&#39;,</span><br><span class="line">  &#96;order_id&#96; bigint COMMENT &#39;订单编号&#39;,</span><br><span class="line">  &#96;sku_id&#96; bigint COMMENT &#39;skuid&#39;,</span><br><span class="line">  &#96;refund_type&#96; string COMMENT &#39;退款类型&#39;,</span><br><span class="line">  &#96;refund_num&#96; bigint COMMENT &#39;退货件数&#39;,</span><br><span class="line">  &#96;refund_amount&#96; decimal(16,2) COMMENT &#39;退款金额&#39;,</span><br><span class="line">  &#96;refund_reason_type&#96; string COMMENT &#39;原因类型&#39;,</span><br><span class="line">  &#96;create_time&#96; bigint COMMENT &#39;创建时间&#39;</span><br><span class="line">  ) COMMENT &#39;退单表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;order_refund_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>order_status_log</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__order_status_log</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__order_status_log&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;编号&#39;,</span><br><span class="line">  &#96;order_id&#96; bigint COMMENT &#39;订单编号&#39;,</span><br><span class="line">  &#96;order_status&#96; string COMMENT &#39;订单状态&#39;,</span><br><span class="line">  &#96;operate_time&#96; bigint COMMENT &#39;操作时间&#39;</span><br><span class="line">  ) COMMENT &#39;订单状态表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;order_status_log&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>payment_info</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__payment_info</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__payment_info&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;编号&#39;,</span><br><span class="line">  &#96;out_trade_no&#96; string COMMENT &#39;对外业务编号&#39;,</span><br><span class="line">  &#96;order_id&#96; bigint COMMENT &#39;订单编号&#39;,</span><br><span class="line">  &#96;user_id&#96; bigint COMMENT &#39;用户编号&#39;,</span><br><span class="line">  &#96;alipay_trade_no&#96; string COMMENT &#39;支付宝交易流水编号&#39;,</span><br><span class="line">  &#96;total_amount&#96; decimal(16,2) COMMENT &#39;支付金额&#39;,</span><br><span class="line">  &#96;subject&#96; string COMMENT &#39;交易内容&#39;,</span><br><span class="line">  &#96;payment_type&#96; string COMMENT &#39;支付方式&#39;,</span><br><span class="line">  &#96;payment_time&#96; bigint COMMENT &#39;支付时间&#39;</span><br><span class="line">  ) COMMENT &#39;支付流水表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;payment_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>order_detail</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__order_detail</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__order_detail&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;编号&#39;,</span><br><span class="line">  &#96;order_id&#96; bigint COMMENT &#39;订单编号&#39;,</span><br><span class="line">  &#96;user_id&#96; bigint COMMENT &#39;用户id&#39;,</span><br><span class="line">  &#96;sku_id&#96; bigint COMMENT &#39;sku_id&#39;,</span><br><span class="line">  &#96;sku_name&#96; string COMMENT &#39;sku名称&#39;,</span><br><span class="line">  &#96;order_price&#96; decimal(10,2) COMMENT &#39;购买价格(下单时sku价格）&#39;,</span><br><span class="line">  &#96;sku_num&#96; string COMMENT &#39;购买个数&#39;,</span><br><span class="line">  &#96;create_time&#96; bigint COMMENT &#39;创建时间&#39;</span><br><span class="line">  ) COMMENT &#39;订单明细表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;order_detail&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>activity_order</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__activity_order</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__activity_order&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;编号&#39;,</span><br><span class="line">  &#96;activity_id&#96; bigint COMMENT &#39;活动id&#39;,</span><br><span class="line">  &#96;order_id&#96; bigint COMMENT &#39;订单编号&#39;,</span><br><span class="line">  &#96;create_time&#96; bigint COMMENT &#39;发生日期&#39;</span><br><span class="line">  ) COMMENT &#39;活动与订单关联表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;activity_order&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>comment_info</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__comment_info</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__comment_info&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;编号&#39;,</span><br><span class="line">  &#96;user_id&#96; bigint COMMENT &#39;用户名称&#39;,</span><br><span class="line">  &#96;sku_id&#96; bigint COMMENT &#39;skuid&#39;,</span><br><span class="line">  &#96;spu_id&#96; bigint COMMENT &#39;商品id&#39;,</span><br><span class="line">  &#96;order_id&#96; bigint COMMENT &#39;订单编号&#39;,</span><br><span class="line">  &#96;appraise&#96; string COMMENT &#39;评价 1 好评 2 中评 3 差评&#39;,</span><br><span class="line">  &#96;comment_txt&#96; string COMMENT &#39;评价内容&#39;,</span><br><span class="line">  &#96;create_time&#96; bigint COMMENT &#39;创建时间&#39;</span><br><span class="line">  ) COMMENT &#39;商品评论表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;comment_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>coupon_use</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__coupon_use</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__coupon_use&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;编号&#39;,</span><br><span class="line">  &#96;coupon_id&#96; bigint COMMENT &#39;购物券ID&#39;,</span><br><span class="line">  &#96;user_id&#96; bigint COMMENT &#39;用户ID&#39;,</span><br><span class="line">  &#96;order_id&#96; bigint COMMENT &#39;订单ID&#39;,</span><br><span class="line">  &#96;coupon_status&#96; string COMMENT &#39;购物券状态&#39;,</span><br><span class="line">  &#96;get_time&#96; bigint COMMENT &#39;领券时间&#39;,</span><br><span class="line">  &#96;using_time&#96; bigint COMMENT &#39;使用时间&#39;,</span><br><span class="line">  &#96;used_time&#96; bigint COMMENT &#39;过期时间&#39;</span><br><span class="line">  ) COMMENT &#39;优惠券领用表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;coupon_use&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>user_info</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__user_info</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__user_info&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;编号&#39;,</span><br><span class="line">  &#96;name&#96; string COMMENT &#39;用户姓名&#39;,</span><br><span class="line">  &#96;email&#96; string COMMENT &#39;邮箱&#39;,</span><br><span class="line">  &#96;user_level&#96; string COMMENT &#39;用户级别&#39;,</span><br><span class="line">  &#96;birthday&#96; bigint COMMENT &#39;用户生日&#39;,</span><br><span class="line">  &#96;gender&#96; string COMMENT &#39;性别 M男,F女&#39;,</span><br><span class="line">  &#96;create_time&#96; bigint COMMENT &#39;创建时间&#39;,</span><br><span class="line">  &#96;operate_time&#96; bigint COMMENT &#39;修改时间&#39;</span><br><span class="line">  ) COMMENT &#39;用户表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;user_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>order_info</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__order_info</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__order_info&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;编号&#39;,</span><br><span class="line">  &#96;final_total_amount&#96; decimal(16,2) COMMENT &#39;总金额&#39;,</span><br><span class="line">  &#96;order_status&#96; string COMMENT &#39;订单状态&#39;,</span><br><span class="line">  &#96;user_id&#96; bigint COMMENT &#39;用户id&#39;,</span><br><span class="line">  &#96;out_trade_no&#96; string COMMENT &#39;订单交易编号（第三方支付用)&#39;,</span><br><span class="line">  &#96;create_time&#96; bigint COMMENT &#39;创建时间&#39;,</span><br><span class="line">  &#96;operate_time&#96; bigint COMMENT &#39;操作时间&#39;,</span><br><span class="line">  &#96;province_id&#96; int COMMENT &#39;地区&#39;,</span><br><span class="line">  &#96;benefit_reduce_amount&#96; decimal(16,2) COMMENT &#39;优惠金额&#39;,</span><br><span class="line">  &#96;original_total_amount&#96; decimal(16,2) COMMENT &#39;原价金额&#39;,</span><br><span class="line">  &#96;feight_fee&#96; decimal(16,2) COMMENT &#39;运费&#39;</span><br><span class="line">  ) COMMENT &#39;订单表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;order_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>start_log</p><blockquote><p>此为埋点启动日志表</p></blockquote></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__start_log</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__start_log&#96;(</span><br><span class="line">  &#96;line&#96; string COMMENT &#39;启动日志&#39;</span><br><span class="line">  ) COMMENT &#39;启动日志表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;start_log&#x2F;&#39;</span><br></pre></td></tr></table></figure><ol start="26"><li>event_log<blockquote><p>此为埋点事件日志表</p></blockquote></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__event_log</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__event_log&#96;(</span><br><span class="line">  &#96;line&#96; string COMMENT &#39;事件日志&#39;</span><br><span class="line">  ) COMMENT &#39;事件日志表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;event_log&#x2F;&#39;</span><br></pre></td></tr></table></figure><ol start="27"><li>date_info<blockquote><p>此为时间表</p></blockquote></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ods.mall__date_info</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ods.mall__date_info&#96;(</span><br><span class="line">&#96;date_id&#96; int COMMENT &#39;日&#39;,</span><br><span class="line">&#96;week_id&#96; int COMMENT &#39;周&#39;,</span><br><span class="line">&#96;week_day&#96; int COMMENT &#39;周的第几天&#39;,</span><br><span class="line">&#96;day&#96; int COMMENT &#39;每月的第几天&#39;,</span><br><span class="line">&#96;month&#96; int COMMENT &#39;第几月&#39;,</span><br><span class="line">&#96;quarter&#96; int COMMENT &#39;第几季度&#39;,</span><br><span class="line">&#96;year&#96; int COMMENT &#39;年&#39;,</span><br><span class="line">&#96;is_workday&#96; int COMMENT &#39;是否是周末&#39;,</span><br><span class="line">&#96;holiday_id&#96; int COMMENT &#39;是否是节假日&#39;</span><br><span class="line">  ) COMMENT &#39;时间维度表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ods&#x2F;mall&#x2F;date_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure><p><a name="blogTitle32"></a></p><h3 id="8-2-mysql数据抽取"><a href="#8-2-mysql数据抽取" class="headerlink" title="8.2 mysql数据抽取"></a>8.2 mysql数据抽取</h3><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445550-cccdcf34-74d8-42ae-ba5e-2c3769ca3c9e.png#align=left&display=inline&height=77&margin=%5Bobject%20Object%5D&originHeight=77&originWidth=1255&size=0&status=done&style=none&width=1255" alt></p><ul><li><p>sqoop抽取脚本基础</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">mysql_db_name&#x3D;$&#123;db_name&#125;</span><br><span class="line">mysql_db_addr&#x3D;$&#123;db_addr&#125;</span><br><span class="line">mysql_db_user&#x3D;$&#123;db_user&#125;</span><br><span class="line">mysql_db_password&#x3D;$&#123;db_password&#125;</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">echo &quot;日期:&quot;$db_date</span><br><span class="line">echo &quot;mysql库名:&quot;$mysql_db_name</span><br><span class="line">import_data() &#123;</span><br><span class="line">&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;sqoop import \</span><br><span class="line">--connect jdbc:mysql:&#x2F;&#x2F;$mysql_db_addr:3306&#x2F;$mysql_db_name?tinyInt1isBit&#x3D;false \</span><br><span class="line">--username $mysql_db_user \</span><br><span class="line">--password $mysql_db_password \</span><br><span class="line">--target-dir &#x2F;origin_data&#x2F;$mysql_db_name&#x2F;$1&#x2F;$db_date \</span><br><span class="line">--delete-target-dir \</span><br><span class="line">--num-mappers 1 \</span><br><span class="line">--null-string &#39;&#39; \</span><br><span class="line">--null-non-string &#39;\\n&#39; \</span><br><span class="line">--fields-terminated-by &quot;\t&quot; \</span><br><span class="line">--query &quot;$2&quot;&#39; and $CONDITIONS;&#39; \</span><br><span class="line">--as-parquetfile </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>DolphinScheduler全局参数</p></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445578-aeef9cf0-c4cf-4a5a-91ea-02ec01c0bf61.png#align=left&display=inline&height=622&margin=%5Bobject%20Object%5D&originHeight=622&originWidth=981&size=0&status=done&style=none&width=981" alt></p><table><thead><tr><th>date</th><th>不传为昨天</th></tr></thead><tbody><tr><td>db_name</td><td>数据库名字</td></tr><tr><td>db_addr</td><td>数据库IP地址</td></tr><tr><td>db_user</td><td>数据库用户</td></tr><tr><td>db_password</td><td>数据库密码</td></tr></tbody></table><blockquote><p>元数据中数据开始日期为2020-03-15<br>如下导入数据代码片段，拼接上述的基础片段执行</p></blockquote><ul><li><p>全量表代码片段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">import_data &quot;base_dic&quot; &quot;select</span><br><span class="line">dic_code,</span><br><span class="line">dic_name,</span><br><span class="line">parent_code,</span><br><span class="line">create_time,</span><br><span class="line">operate_time</span><br><span class="line">from base_dic</span><br><span class="line">where 1&#x3D;1&quot;</span><br><span class="line">import_data &quot;base_trademark&quot; &quot;select</span><br><span class="line">tm_id,</span><br><span class="line">tm_name</span><br><span class="line">from base_trademark</span><br><span class="line">where 1&#x3D;1&quot;</span><br><span class="line">import_data &quot;base_category3&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">name,</span><br><span class="line">category2_id</span><br><span class="line">from base_category3 where 1&#x3D;1&quot;</span><br><span class="line">import_data &quot;base_category2&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">name,</span><br><span class="line">category1_id</span><br><span class="line">from base_category2 where 1&#x3D;1&quot;</span><br><span class="line">import_data &quot;base_category1&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">name</span><br><span class="line">from base_category1 where 1&#x3D;1&quot;</span><br><span class="line">import_data &quot;activity_rule&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">activity_id,</span><br><span class="line">condition_amount,</span><br><span class="line">condition_num,</span><br><span class="line">benefit_amount,</span><br><span class="line">benefit_discount,</span><br><span class="line">benefit_level</span><br><span class="line">from activity_rule</span><br><span class="line">where 1&#x3D;1&quot;</span><br><span class="line">import_data &quot;activity_info&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">activity_name,</span><br><span class="line">activity_type,</span><br><span class="line">start_time,</span><br><span class="line">end_time,</span><br><span class="line">create_time</span><br><span class="line">from activity_info</span><br><span class="line">where 1&#x3D;1&quot;</span><br><span class="line">import_data &quot;activity_sku&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">activity_id,</span><br><span class="line">sku_id,</span><br><span class="line">create_time</span><br><span class="line">FROM</span><br><span class="line">activity_sku</span><br><span class="line">where 1&#x3D;1&quot;</span><br><span class="line">import_data &quot;cart_info&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">user_id,</span><br><span class="line">sku_id,</span><br><span class="line">cart_price,</span><br><span class="line">sku_num,</span><br><span class="line">sku_name,</span><br><span class="line">create_time,</span><br><span class="line">operate_time,</span><br><span class="line">is_ordered,</span><br><span class="line">order_time</span><br><span class="line">from cart_info</span><br><span class="line">where 1&#x3D;1&quot;</span><br><span class="line">import_data &quot;favor_info&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">user_id,</span><br><span class="line">sku_id,</span><br><span class="line">spu_id,</span><br><span class="line">is_cancel,</span><br><span class="line">create_time,</span><br><span class="line">cancel_time</span><br><span class="line">from favor_info</span><br><span class="line">where 1&#x3D;1&quot;</span><br><span class="line">import_data &quot;coupon_info&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">coupon_name,</span><br><span class="line">coupon_type,</span><br><span class="line">condition_amount,</span><br><span class="line">condition_num,</span><br><span class="line">activity_id,</span><br><span class="line">benefit_amount,</span><br><span class="line">benefit_discount,</span><br><span class="line">create_time,</span><br><span class="line">range_type,</span><br><span class="line">spu_id,</span><br><span class="line">tm_id,</span><br><span class="line">category3_id,</span><br><span class="line">limit_num,</span><br><span class="line">operate_time,</span><br><span class="line">expire_time</span><br><span class="line">from coupon_info</span><br><span class="line">where 1&#x3D;1&quot;</span><br><span class="line">import_data &quot;sku_info&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">spu_id,</span><br><span class="line">price,</span><br><span class="line">sku_name,</span><br><span class="line">sku_desc,</span><br><span class="line">weight,</span><br><span class="line">tm_id,</span><br><span class="line">category3_id,</span><br><span class="line">create_time</span><br><span class="line">from sku_info where 1&#x3D;1&quot;</span><br><span class="line">import_data &quot;spu_info&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">spu_name,</span><br><span class="line">category3_id,</span><br><span class="line">tm_id</span><br><span class="line">from spu_info</span><br><span class="line">where 1&#x3D;1&quot;</span><br></pre></td></tr></table></figure></li><li><p>特殊表代码片段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import_data &quot;base_province&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">name,</span><br><span class="line">region_id,</span><br><span class="line">area_code,</span><br><span class="line">iso_code</span><br><span class="line">from base_province</span><br><span class="line">where 1&#x3D;1&quot;</span><br><span class="line">import_data &quot;base_region&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">region_name</span><br><span class="line">from base_region</span><br><span class="line">where 1&#x3D;1&quot;</span><br><span class="line">import_data &quot;date_info&quot; &quot;select</span><br><span class="line">date_id,</span><br><span class="line">week_id,</span><br><span class="line">week_day,</span><br><span class="line">day,</span><br><span class="line">month,</span><br><span class="line">quarter,</span><br><span class="line">year,</span><br><span class="line">is_workday,</span><br><span class="line">holiday_id</span><br><span class="line">from date_info</span><br><span class="line">where 1&#x3D;1&quot;</span><br></pre></td></tr></table></figure></li><li><p>增量表代码片段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">import_data &quot;order_refund_info&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">user_id,</span><br><span class="line">order_id,</span><br><span class="line">sku_id,</span><br><span class="line">refund_type,</span><br><span class="line">refund_num,</span><br><span class="line">refund_amount,</span><br><span class="line">refund_reason_type,</span><br><span class="line">create_time</span><br><span class="line">from order_refund_info</span><br><span class="line">where</span><br><span class="line">date_format(create_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$db_date&#39;&quot;</span><br><span class="line">import_data &quot;order_status_log&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">order_id,</span><br><span class="line">order_status,</span><br><span class="line">operate_time</span><br><span class="line">from order_status_log</span><br><span class="line">where</span><br><span class="line">date_format(operate_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$db_date&#39;&quot;</span><br><span class="line">import_data &quot;payment_info&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">out_trade_no,</span><br><span class="line">order_id,</span><br><span class="line">user_id,</span><br><span class="line">alipay_trade_no,</span><br><span class="line">total_amount,</span><br><span class="line">subject,</span><br><span class="line">payment_type,</span><br><span class="line">payment_time</span><br><span class="line">from payment_info</span><br><span class="line">where</span><br><span class="line">DATE_FORMAT(payment_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$db_date&#39;&quot;</span><br><span class="line">import_data &quot;order_detail&quot; &quot;select</span><br><span class="line">od.id,</span><br><span class="line">od.order_id,</span><br><span class="line">oi.user_id,</span><br><span class="line">od.sku_id,</span><br><span class="line">od.sku_name,</span><br><span class="line">od.order_price,</span><br><span class="line">od.sku_num,</span><br><span class="line">od.create_time</span><br><span class="line">from order_detail od</span><br><span class="line">join order_info oi</span><br><span class="line">on od.order_id&#x3D;oi.id</span><br><span class="line">where</span><br><span class="line">DATE_FORMAT(od.create_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$db_date&#39;&quot;</span><br><span class="line">import_data &quot;activity_order&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">activity_id,</span><br><span class="line">order_id,</span><br><span class="line">create_time</span><br><span class="line">from activity_order</span><br><span class="line">where</span><br><span class="line">date_format(create_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$db_date&#39;&quot;</span><br><span class="line">import_data &quot;comment_info&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">user_id,</span><br><span class="line">sku_id,</span><br><span class="line">spu_id,</span><br><span class="line">order_id,</span><br><span class="line">appraise,</span><br><span class="line">comment_txt,</span><br><span class="line">create_time</span><br><span class="line">from comment_info</span><br><span class="line">where date_format(create_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$db_date&#39;&quot;</span><br></pre></td></tr></table></figure></li><li><p>增量及变化表代码片段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">import_data &quot;coupon_use&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">coupon_id,</span><br><span class="line">user_id,</span><br><span class="line">order_id,</span><br><span class="line">coupon_status,</span><br><span class="line">get_time,</span><br><span class="line">using_time,</span><br><span class="line">used_time</span><br><span class="line">from coupon_use</span><br><span class="line">where (date_format(get_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$db_date&#39;</span><br><span class="line">or date_format(using_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$db_date&#39;</span><br><span class="line">or date_format(used_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$db_date&#39;)&quot;</span><br><span class="line">import_data &quot;user_info&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">name,</span><br><span class="line">birthday,</span><br><span class="line">gender,</span><br><span class="line">email,</span><br><span class="line">user_level,</span><br><span class="line">create_time,</span><br><span class="line">operate_time</span><br><span class="line">from user_info</span><br><span class="line">where (DATE_FORMAT(create_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$db_date&#39;</span><br><span class="line">or DATE_FORMAT(operate_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$db_date&#39;)&quot;</span><br><span class="line">import_data &quot;order_info&quot; &quot;select</span><br><span class="line">id,</span><br><span class="line">final_total_amount,</span><br><span class="line">order_status,</span><br><span class="line">user_id,</span><br><span class="line">out_trade_no,</span><br><span class="line">create_time,</span><br><span class="line">operate_time,</span><br><span class="line">province_id,</span><br><span class="line">benefit_reduce_amount,</span><br><span class="line">original_total_amount,</span><br><span class="line">feight_fee</span><br><span class="line">from order_info</span><br><span class="line">where (date_format(create_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$db_date&#39;</span><br><span class="line">or date_format(operate_time,&#39;%Y-%m-%d&#39;)&#x3D;&#39;$db_date&#39;)&quot;</span><br></pre></td></tr></table></figure><p><a name="blogTitle33"></a></p><h3 id="8-3-ods层数据加载"><a href="#8-3-ods层数据加载" class="headerlink" title="8.3 ods层数据加载"></a>8.3 ods层数据加载</h3></li><li><p>脚本修改$table_name即可</p><blockquote><p>注意2张埋点日志表的数据导出目录</p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;ods</span><br><span class="line">table_name&#x3D;base_dic</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">load data inpath &#39;&#x2F;origin_data&#x2F;$APP1&#x2F;$table_name&#x2F;$db_date&#39; OVERWRITE into table $hive_table_name partition(dt&#x3D;&#39;$db_date&#39;);</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="blogTitle34"></a></p><h2 id="9-dwd层构建"><a href="#9-dwd层构建" class="headerlink" title="9 dwd层构建"></a>9 dwd层构建</h2><p><a name="blogTitle35"></a></p><h3 id="9-1-dwd层构建（启动-事件日志）"><a href="#9-1-dwd层构建（启动-事件日志）" class="headerlink" title="9.1 dwd层构建（启动-事件日志）"></a>9.1 dwd层构建（启动-事件日志）</h3><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445446614-4652a8e0-0b0a-4e2a-910b-e90751aed058.png#align=left&display=inline&height=446&margin=%5Bobject%20Object%5D&originHeight=446&originWidth=951&size=0&status=done&style=none&width=951" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445749-02840e2e-dcb1-4a8a-8778-e6ee6b650936.png#align=left&display=inline&height=614&margin=%5Bobject%20Object%5D&originHeight=614&originWidth=1477&size=0&status=done&style=none&width=1477" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445567-5b7c6d42-4d24-4807-afb3-cdea023f4f90.png#align=left&display=inline&height=477&margin=%5Bobject%20Object%5D&originHeight=477&originWidth=951&size=0&status=done&style=none&width=951" alt><br><a name="65a81e92"></a></p><h4 id="9-1-1-启动日志表"><a href="#9-1-1-启动日志表" class="headerlink" title="9.1.1 启动日志表"></a>9.1.1 启动日志表</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445612-d6f7562c-f0bb-430f-b4af-7b42344e971f.png#align=left&display=inline&height=730&margin=%5Bobject%20Object%5D&originHeight=730&originWidth=1437&size=0&status=done&style=none&width=1437" alt></p><ul><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__start_log</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__start_log&#96;(</span><br><span class="line">  &#96;mid_id&#96; string COMMENT &#39;设备唯一标识&#39;,</span><br><span class="line">  &#96;user_id&#96; string COMMENT &#39;用户标识&#39;,</span><br><span class="line">  &#96;version_code&#96; string COMMENT &#39;程序版本号&#39;,</span><br><span class="line">  &#96;version_name&#96; string COMMENT &#39;程序版本名&#39;,</span><br><span class="line">  &#96;lang&#96; string COMMENT &#39;系统语言&#39;,</span><br><span class="line">  &#96;source&#96; string COMMENT &#39;渠道号&#39;,</span><br><span class="line">  &#96;os&#96; string COMMENT &#39;系统版本&#39;,</span><br><span class="line">  &#96;area&#96; string COMMENT &#39;区域&#39;,</span><br><span class="line">  &#96;model&#96; string COMMENT &#39;手机型号&#39;,</span><br><span class="line">  &#96;brand&#96; string COMMENT &#39;手机品牌&#39;,</span><br><span class="line">  &#96;sdk_version&#96; string COMMENT &#39;sdkVersion&#39;,</span><br><span class="line">  &#96;gmail&#96; string COMMENT &#39;gmail&#39;,</span><br><span class="line">  &#96;height_width&#96; string COMMENT &#39;屏幕宽高&#39;,</span><br><span class="line">  &#96;app_time&#96; string COMMENT &#39;客户端日志产生时的时间&#39;,</span><br><span class="line">  &#96;network&#96; string COMMENT &#39;网络模式&#39;,</span><br><span class="line">  &#96;lng&#96; string COMMENT &#39;经度&#39;,</span><br><span class="line">  &#96;lat&#96; string COMMENT &#39;纬度&#39;,</span><br><span class="line">  &#96;entry&#96; string COMMENT &#39;入口: push&#x3D;1,widget&#x3D;2,icon&#x3D;3,notification&#x3D;4,lockscreen_widget&#x3D;5&#39;,</span><br><span class="line">  &#96;open_ad_type&#96; string COMMENT &#39;开屏广告类型: 开屏原生广告&#x3D;1, 开屏插屏广告&#x3D;2&#39;,</span><br><span class="line">  &#96;action&#96; string COMMENT &#39;状态：成功&#x3D;1 失败&#x3D;2&#39;,</span><br><span class="line">  &#96;loading_time&#96; string COMMENT &#39;加载时长&#39;,</span><br><span class="line">  &#96;detail&#96; string COMMENT &#39;失败码&#39;,</span><br><span class="line">  &#96;extend1&#96; string COMMENT &#39;失败的 message&#39;</span><br><span class="line">  ) COMMENT &#39;启动日志表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;start_log&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">APP3&#x3D;ods</span><br><span class="line">table_name&#x3D;start_log</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line">hive_origin_table_name&#x3D;$APP3.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">get_json_object(line,&#39;$.mid&#39;) mid_id,</span><br><span class="line">get_json_object(line,&#39;$.uid&#39;) user_id,</span><br><span class="line">get_json_object(line,&#39;$.vc&#39;) version_code,</span><br><span class="line">get_json_object(line,&#39;$.vn&#39;) version_name,</span><br><span class="line">get_json_object(line,&#39;$.l&#39;) lang,</span><br><span class="line">get_json_object(line,&#39;$.sr&#39;) source,</span><br><span class="line">get_json_object(line,&#39;$.os&#39;) os,</span><br><span class="line">get_json_object(line,&#39;$.ar&#39;) area,</span><br><span class="line">get_json_object(line,&#39;$.md&#39;) model,</span><br><span class="line">get_json_object(line,&#39;$.ba&#39;) brand,</span><br><span class="line">get_json_object(line,&#39;$.sv&#39;) sdk_version,</span><br><span class="line">get_json_object(line,&#39;$.g&#39;) gmail,</span><br><span class="line">get_json_object(line,&#39;$.hw&#39;) height_width,</span><br><span class="line">get_json_object(line,&#39;$.t&#39;) app_time,</span><br><span class="line">get_json_object(line,&#39;$.nw&#39;) network,</span><br><span class="line">get_json_object(line,&#39;$.ln&#39;) lng,</span><br><span class="line">get_json_object(line,&#39;$.la&#39;) lat,</span><br><span class="line">get_json_object(line,&#39;$.entry&#39;) entry,</span><br><span class="line">get_json_object(line,&#39;$.open_ad_type&#39;) open_ad_type,</span><br><span class="line">get_json_object(line,&#39;$.action&#39;) action,</span><br><span class="line">get_json_object(line,&#39;$.loading_time&#39;) loading_time,</span><br><span class="line">get_json_object(line,&#39;$.detail&#39;) detail,</span><br><span class="line">get_json_object(line,&#39;$.extend1&#39;) extend1</span><br><span class="line">from $hive_origin_table_name</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="396f2a2b"></a></p><h4 id="9-1-2-事件日志表"><a href="#9-1-2-事件日志表" class="headerlink" title="9.1.2 事件日志表"></a>9.1.2 事件日志表</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445586-766cb2b8-d761-4c9a-a289-16f60a99ddcd.png#align=left&display=inline&height=477&margin=%5Bobject%20Object%5D&originHeight=477&originWidth=951&size=0&status=done&style=none&width=951" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445702-d1a78ffa-edf3-4d58-a3bb-dab7ac195815.png#align=left&display=inline&height=604&margin=%5Bobject%20Object%5D&originHeight=604&originWidth=1333&size=0&status=done&style=none&width=1333" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445677-bc019011-2053-412d-b4c8-bfd856f29547.png#align=left&display=inline&height=603&margin=%5Bobject%20Object%5D&originHeight=603&originWidth=1333&size=0&status=done&style=none&width=1333" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445698-37476ac6-25f3-4cea-86ac-f907a3cb1d1d.png#align=left&display=inline&height=621&margin=%5Bobject%20Object%5D&originHeight=621&originWidth=1376&size=0&status=done&style=none&width=1376" alt><br></p></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__event_log</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__event_log&#96;(</span><br><span class="line">  &#96;mid_id&#96; string COMMENT &#39;设备唯一标识&#39;,</span><br><span class="line">  &#96;user_id&#96; string COMMENT &#39;用户标识&#39;,</span><br><span class="line">  &#96;version_code&#96; string COMMENT &#39;程序版本号&#39;,</span><br><span class="line">  &#96;version_name&#96; string COMMENT &#39;程序版本名&#39;,</span><br><span class="line">  &#96;lang&#96; string COMMENT &#39;系统语言&#39;,</span><br><span class="line">  &#96;source&#96; string COMMENT &#39;渠道号&#39;,</span><br><span class="line">  &#96;os&#96; string COMMENT &#39;系统版本&#39;,</span><br><span class="line">  &#96;area&#96; string COMMENT &#39;区域&#39;,</span><br><span class="line">  &#96;model&#96; string COMMENT &#39;手机型号&#39;,</span><br><span class="line">  &#96;brand&#96; string COMMENT &#39;手机品牌&#39;,</span><br><span class="line">  &#96;sdk_version&#96; string COMMENT &#39;sdkVersion&#39;,</span><br><span class="line">  &#96;gmail&#96; string COMMENT &#39;gmail&#39;,</span><br><span class="line">  &#96;height_width&#96; string COMMENT &#39;屏幕宽高&#39;,</span><br><span class="line">  &#96;app_time&#96; string COMMENT &#39;客户端日志产生时的时间&#39;,</span><br><span class="line">  &#96;network&#96; string COMMENT &#39;网络模式&#39;,</span><br><span class="line">  &#96;lng&#96; string COMMENT &#39;经度&#39;,</span><br><span class="line">  &#96;lat&#96; string COMMENT &#39;纬度&#39;,</span><br><span class="line">  &#96;event_name&#96; string COMMENT &#39;事件名称&#39;,</span><br><span class="line">  &#96;event_json&#96; string COMMENT &#39;事件详情&#39;,</span><br><span class="line">  &#96;server_time&#96; string COMMENT &#39;服务器时间&#39;</span><br><span class="line">  ) COMMENT &#39;事件日志表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;event_log&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure><p><a name="3a5115eb"></a></p><h5 id="9-2-1-制作-UDF-UDTF"><a href="#9-2-1-制作-UDF-UDTF" class="headerlink" title="9.2.1 制作 UDF UDTF"></a>9.2.1 制作 UDF UDTF</h5></li><li><p>udf</p></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445696-3b581062-c5d4-427f-ba12-e6867d59b49c.png#align=left&display=inline&height=417&margin=%5Bobject%20Object%5D&originHeight=417&originWidth=1318&size=0&status=done&style=none&width=1318" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445883-e8c65772-697b-4f7a-9dd5-d454e8615019.png#align=left&display=inline&height=534&margin=%5Bobject%20Object%5D&originHeight=534&originWidth=1315&size=0&status=done&style=none&width=1315" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">import org.apache.commons.lang.StringUtils;</span><br><span class="line">import org.apache.hadoop.hive.ql.exec.UDF;</span><br><span class="line">import org.json.JSONException;</span><br><span class="line">import org.json.JSONObject;</span><br><span class="line">public class BaseFieldUDF extends UDF &#123;</span><br><span class="line">    public String evaluate(String line, String key) throws JSONException &#123;</span><br><span class="line">        String[] log &#x3D; line.split(&quot;\\|&quot;);</span><br><span class="line">        if (log.length !&#x3D; 2 || StringUtils.isBlank(log[1])) &#123;</span><br><span class="line">            return &quot;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        JSONObject baseJson &#x3D; new JSONObject(log[1].trim());</span><br><span class="line">        String result &#x3D; &quot;&quot;;</span><br><span class="line">        &#x2F;&#x2F; 获取服务器时间</span><br><span class="line">        if (&quot;st&quot;.equals(key)) &#123;</span><br><span class="line">            result &#x3D; log[0].trim();</span><br><span class="line">        &#125; else if (&quot;et&quot;.equals(key)) &#123;</span><br><span class="line">        &#x2F;&#x2F; 获取事件数组</span><br><span class="line">            if (baseJson.has(&quot;et&quot;)) &#123;</span><br><span class="line">                result &#x3D; baseJson.getString(&quot;et&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            JSONObject cm &#x3D; baseJson.getJSONObject(&quot;cm&quot;);</span><br><span class="line">        &#x2F;&#x2F; 获取 key 对应公共字段的 value</span><br><span class="line">            if (cm.has(key)) &#123;</span><br><span class="line">                result &#x3D; cm.getString(key);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line">    public static void main(String[] args) throws JSONException &#123;</span><br><span class="line">        String line &#x3D; &quot;         1588319303710|&#123;\n&quot; +</span><br><span class="line">                &quot;        \&quot;cm\&quot;:&#123;\n&quot; +</span><br><span class="line">                &quot;            \&quot;ln\&quot;:\&quot;-51.5\&quot;,\&quot;sv\&quot;:\&quot;V2.0.7\&quot;,\&quot;os\&quot;:\&quot;8.0.8\&quot;,\&quot;g\&quot;:\&quot;L1470998@gmail.com\&quot;,\&quot;mid\&quot;:\&quot;13\&quot;,\n&quot; +</span><br><span class="line">                &quot;                    \&quot;nw\&quot;:\&quot;4G\&quot;,\&quot;l\&quot;:\&quot;en\&quot;,\&quot;vc\&quot;:\&quot;7\&quot;,\&quot;hw\&quot;:\&quot;640*960\&quot;,\&quot;ar\&quot;:\&quot;MX\&quot;,\&quot;uid\&quot;:\&quot;13\&quot;,\&quot;t\&quot;:\&quot;1588291826938\&quot;,\n&quot; +</span><br><span class="line">                &quot;                    \&quot;la\&quot;:\&quot;-38.2\&quot;,\&quot;md\&quot;:\&quot;Huawei-14\&quot;,\&quot;vn\&quot;:\&quot;1.3.6\&quot;,\&quot;ba\&quot;:\&quot;Huawei\&quot;,\&quot;sr\&quot;:\&quot;Y\&quot;\n&quot; +</span><br><span class="line">                &quot;        &#125;,\n&quot; +</span><br><span class="line">                &quot;        \&quot;ap\&quot;:\&quot;app\&quot;,\n&quot; +</span><br><span class="line">                &quot;                \&quot;et\&quot;:[&#123;\n&quot; +</span><br><span class="line">                &quot;            \&quot;ett\&quot;:\&quot;1588228193191\&quot;,\&quot;en\&quot;:\&quot;ad\&quot;,\&quot;kv\&quot;:&#123;\&quot;activityId\&quot;:\&quot;1\&quot;,\&quot;displayMills\&quot;:\&quot;113201\&quot;,\&quot;entry\&quot;:\&quot;3\&quot;,\&quot;action\&quot;:\&quot;5\&quot;,\&quot;contentType\&quot;:\&quot;0\&quot;&#125;\n&quot; +</span><br><span class="line">                &quot;        &#125;,&#123;\n&quot; +</span><br><span class="line">                &quot;            \&quot;ett\&quot;:\&quot;1588300304713\&quot;,\&quot;en\&quot;:\&quot;notification\&quot;,\&quot;kv\&quot;:&#123;\&quot;ap_time\&quot;:\&quot;1588277440794\&quot;,\&quot;action\&quot;:\&quot;2\&quot;,\&quot;type\&quot;:\&quot;3\&quot;,\&quot;content\&quot;:\&quot;\&quot;&#125;\n&quot; +</span><br><span class="line">                &quot;        &#125;,&#123;\n&quot; +</span><br><span class="line">                &quot;            \&quot;ett\&quot;:\&quot;1588249203743\&quot;,\&quot;en\&quot;:\&quot;active_background\&quot;,\&quot;kv\&quot;:&#123;\&quot;active_source\&quot;:\&quot;3\&quot;&#125;\n&quot; +</span><br><span class="line">                &quot;        &#125;,&#123;\n&quot; +</span><br><span class="line">                &quot;            \&quot;ett\&quot;:\&quot;1588225856101\&quot;,\&quot;en\&quot;:\&quot;comment\&quot;,\&quot;kv\&quot;:&#123;\&quot;p_comment_id\&quot;:0,\&quot;addtime\&quot;:\&quot;1588263895040\&quot;,\&quot;praise_count\&quot;:231,\&quot;other_id\&quot;:5,\&quot;comment_id\&quot;:5,\&quot;reply_count\&quot;:62,\&quot;userid\&quot;:7,\&quot;content\&quot;:\&quot;骸汞\&quot;&#125;\n&quot; +</span><br><span class="line">                &quot;        &#125;,&#123;\n&quot; +</span><br><span class="line">                &quot;            \&quot;ett\&quot;:\&quot;1588254200122\&quot;,\&quot;en\&quot;:\&quot;favorites\&quot;,\&quot;kv\&quot;:&#123;\&quot;course_id\&quot;:5,\&quot;id\&quot;:0,\&quot;add_time\&quot;:\&quot;1588264138625\&quot;,\&quot;userid\&quot;:0&#125;\n&quot; +</span><br><span class="line">                &quot;        &#125;,&#123;\n&quot; +</span><br><span class="line">                &quot;            \&quot;ett\&quot;:\&quot;1588281152824\&quot;,\&quot;en\&quot;:\&quot;praise\&quot;,\&quot;kv\&quot;:&#123;\&quot;target_id\&quot;:4,\&quot;id\&quot;:3,\&quot;type\&quot;:3,\&quot;add_time\&quot;:\&quot;1588307696417\&quot;,\&quot;userid\&quot;:8&#125;\n&quot; +</span><br><span class="line">                &quot;        &#125;]\n&quot; +</span><br><span class="line">                &quot;    &#125;&quot;;</span><br><span class="line">        String s &#x3D; new BaseFieldUDF().evaluate(line, &quot;mid&quot;);</span><br><span class="line">        String ss &#x3D; new BaseFieldUDF().evaluate(line, &quot;st&quot;);</span><br><span class="line">        String sss &#x3D; new BaseFieldUDF().evaluate(line, &quot;et&quot;);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">        System.out.println(ss);</span><br><span class="line">        System.out.println(sss);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>结果：<br>13<br>1588319303710<br>[{“ett”:”1588228193191”,”en”:”ad”,”kv”:{“activityId”:”1”,”displayMills”:”113201”,”entry”:”3”,”action”:”5”,”contentType”:”0”}},{“ett”:”1588300304713”,”en”:”notification”,”kv”:{“ap_time”:”1588277440794”,”action”:”2”,”type”:”3”,”content”:””}},{“ett”:”1588249203743”,”en”:”active_background”,”kv”:{“active_source”:”3”}},{“ett”:”1588225856101”,”en”:”comment”,”kv”:{“p_comment_id”:0,”addtime”:”1588263895040”,”praise_count”:231,”other_id”:5,”comment_id”:5,”reply_count”:62,”userid”:7,”content”:”骸汞”}},{“ett”:”1588254200122”,”en”:”favorites”,”kv”:{“course_id”:5,”id”:0,”add_time”:”1588264138625”,”userid”:0}},{“ett”:”1588281152824”,”en”:”praise”,”kv”:{“target_id”:4,”id”:3,”type”:3,”add_time”:”1588307696417”,”userid”:8}}]</p></blockquote><ul><li>udtf</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445446239-9b99f151-4d88-4505-ab08-fb212a6d8ac7.png#align=left&display=inline&height=339&margin=%5Bobject%20Object%5D&originHeight=339&originWidth=1207&size=0&status=done&style=none&width=1207" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445446059-b20b058a-4006-4c97-bce2-84b85cd28599.png#align=left&display=inline&height=624&margin=%5Bobject%20Object%5D&originHeight=624&originWidth=1205&size=0&status=done&style=none&width=1205" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">import org.apache.commons.lang.StringUtils;</span><br><span class="line">import org.apache.hadoop.hive.ql.exec.UDFArgumentException;</span><br><span class="line">import org.apache.hadoop.hive.ql.metadata.HiveException;</span><br><span class="line">import org.apache.hadoop.hive.ql.udf.generic.GenericUDTF;</span><br><span class="line">import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;</span><br><span class="line">import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorFactory;</span><br><span class="line">import org.apache.hadoop.hive.serde2.objectinspector.StructObjectInspector;</span><br><span class="line">import org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory;</span><br><span class="line">import org.json.JSONArray;</span><br><span class="line">import org.json.JSONException;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">public class EventJsonUDTF extends GenericUDTF &#123;</span><br><span class="line">    &#x2F;&#x2F;该方法中，我们将指定输出参数的名称和参数类型：</span><br><span class="line">    public StructObjectInspector initialize(StructObjectInspector argOIs) throws UDFArgumentException &#123;</span><br><span class="line">        ArrayList&lt;String&gt; fieldNames &#x3D; new ArrayList&lt;String&gt;();</span><br><span class="line">        ArrayList&lt;ObjectInspector&gt; fieldOIs &#x3D; new ArrayList&lt;ObjectInspector&gt;();</span><br><span class="line">        fieldNames.add(&quot;event_name&quot;);</span><br><span class="line">        fieldOIs.add(PrimitiveObjectInspectorFactory.javaStringObjectInspector);</span><br><span class="line">        fieldNames.add(&quot;event_json&quot;);</span><br><span class="line">        fieldOIs.add(PrimitiveObjectInspectorFactory.javaStringObjectInspector);</span><br><span class="line">        return ObjectInspectorFactory.getStandardStructObjectInspector(fieldNames,</span><br><span class="line">                fieldOIs);</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;输入 1 条记录，输出若干条结果</span><br><span class="line">    @Override</span><br><span class="line">    public void process(Object[] objects) throws HiveException &#123;</span><br><span class="line">        &#x2F;&#x2F; 获取传入的 et</span><br><span class="line">        String input &#x3D; objects[0].toString();</span><br><span class="line">        &#x2F;&#x2F; 如果传进来的数据为空，直接返回过滤掉该数据</span><br><span class="line">        if (StringUtils.isBlank(input)) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                &#x2F;&#x2F; 获取一共有几个事件（ad&#x2F;facoriters）</span><br><span class="line">                JSONArray ja &#x3D; new JSONArray(input);</span><br><span class="line">                if (ja &#x3D;&#x3D; null)</span><br><span class="line">                    return;</span><br><span class="line">                &#x2F;&#x2F; 循环遍历每一个事件</span><br><span class="line">                for (int i &#x3D; 0; i &lt; ja.length(); i++) &#123;</span><br><span class="line">                    String[] result &#x3D; new String[2];</span><br><span class="line">                    try &#123;</span><br><span class="line">                        &#x2F;&#x2F; 取出每个的事件名称（ad&#x2F;facoriters）</span><br><span class="line">                        result[0] &#x3D; ja.getJSONObject(i).getString(&quot;en&quot;);</span><br><span class="line">                        &#x2F;&#x2F; 取出每一个事件整体</span><br><span class="line">                        result[1] &#x3D; ja.getString(i);</span><br><span class="line">                    &#125; catch (JSONException e) &#123;</span><br><span class="line">                        continue;</span><br><span class="line">                    &#125;</span><br><span class="line">                    &#x2F;&#x2F; 将结果返回</span><br><span class="line">                    forward(result);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (JSONException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;当没有记录处理的时候该方法会被调用，用来清理代码或者产生额外的输出</span><br><span class="line">    @Override</span><br><span class="line">    public void close() throws HiveException &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="86de846c"></a></p><h5 id="9-1-2-2-直接永久使用UDF"><a href="#9-1-2-2-直接永久使用UDF" class="headerlink" title="9.1.2.2 直接永久使用UDF"></a>9.1.2.2 直接永久使用UDF</h5><ul><li>上传UDF资源<blockquote><p>将hive-function-1.0-SNAPSHOT包传到HDFS 的/user/hive/jars下</p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hadoop dfs -mkdir  &#x2F;user&#x2F;hive&#x2F;jars</span><br><span class="line">hadoop dfs -put hive-function-1.0-SNAPSHOT.jar &#x2F;user&#x2F;hive&#x2F;jars&#x2F;hive-function-1.0-SNAPSHOT.jar</span><br></pre></td></tr></table></figure><blockquote><p>在hive中创建永久UDF</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create function base_analizer as &#39;com.heaton.bigdata.udf.BaseFieldUDF&#39; using jar &#39;hdfs:&#x2F;&#x2F;cdh01.cm:8020&#x2F;user&#x2F;hive&#x2F;jars&#x2F;hive-function-1.0-SNAPSHOT.jar&#39;;</span><br><span class="line">create function flat_analizer as &#39;com.heaton.bigdata.udtf.EventJsonUDTF&#39; using jar &#39;hdfs:&#x2F;&#x2F;cdh01.cm:8020&#x2F;user&#x2F;hive&#x2F;jars&#x2F;hive-function-1.0-SNAPSHOT.jar&#39;;</span><br></pre></td></tr></table></figure><p><a name="620b459a"></a></p><h5 id="9-1-2-3-Dolphin使用方式UDF"><a href="#9-1-2-3-Dolphin使用方式UDF" class="headerlink" title="9.1.2.3 Dolphin使用方式UDF"></a>9.1.2.3 Dolphin使用方式UDF</h5><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445818-d1c8fc14-e529-4591-805f-7345bab479e8.png#align=left&display=inline&height=330&margin=%5Bobject%20Object%5D&originHeight=330&originWidth=1906&size=0&status=done&style=none&width=1906" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445645-ab931a0b-bb10-4b9a-9c67-c42afdb4132d.png#align=left&display=inline&height=334&margin=%5Bobject%20Object%5D&originHeight=334&originWidth=1722&size=0&status=done&style=none&width=1722" alt></p><blockquote><p>在DAG图创建SQL工具中选择对应UDF函数即可使用，但是目前Dolphin1.2.0中关联函数操作保存无效。<br>大家可以使用UDF管理功能将JAR传入到HDFS上，这样通过脚本加入临时函数，也可以很好的完成功能。<br>临时函数语句：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create temporary function base_analizer as &#39;com.heaton.bigdata.udf.BaseFieldUDF&#39; using jar &#39;hdfs:&#x2F;&#x2F;cdh01.cm:8020&#x2F;dolphinscheduler&#x2F;dolphinscheduler&#x2F;udfs&#x2F;hive-function-1.0-SNAPSHOT.jar&#39;;</span><br><span class="line">create temporary function flat_analizer as &#39;com.heaton.bigdata.udtf.EventJsonUDTF&#39; using jar &#39;hdfs:&#x2F;&#x2F;cdh01.cm:8020&#x2F;dolphinscheduler&#x2F;dolphinscheduler&#x2F;udfs&#x2F;hive-function-1.0-SNAPSHOT.jar&#39;;</span><br></pre></td></tr></table></figure><p><a name="29e0a488"></a></p><h5 id="9-2-4-数据导入"><a href="#9-2-4-数据导入" class="headerlink" title="9.2.4 数据导入"></a>9.2.4 数据导入</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">APP3&#x3D;ods</span><br><span class="line">table_name&#x3D;event_log</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line">hive_origin_table_name&#x3D;$APP3.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">base_analizer(line,&#39;mid&#39;) as mid_id,</span><br><span class="line">base_analizer(line,&#39;uid&#39;) as user_id,</span><br><span class="line">base_analizer(line,&#39;vc&#39;) as version_code,</span><br><span class="line">base_analizer(line,&#39;vn&#39;) as version_name,</span><br><span class="line">base_analizer(line,&#39;l&#39;) as lang,</span><br><span class="line">base_analizer(line,&#39;sr&#39;) as source,</span><br><span class="line">base_analizer(line,&#39;os&#39;) as os,</span><br><span class="line">base_analizer(line,&#39;ar&#39;) as area,</span><br><span class="line">base_analizer(line,&#39;md&#39;) as model,</span><br><span class="line">base_analizer(line,&#39;ba&#39;) as brand,</span><br><span class="line">base_analizer(line,&#39;sv&#39;) as sdk_version,</span><br><span class="line">base_analizer(line,&#39;g&#39;) as gmail,</span><br><span class="line">base_analizer(line,&#39;hw&#39;) as height_width,</span><br><span class="line">base_analizer(line,&#39;t&#39;) as app_time,</span><br><span class="line">base_analizer(line,&#39;nw&#39;) as network,</span><br><span class="line">base_analizer(line,&#39;ln&#39;) as lng,</span><br><span class="line">base_analizer(line,&#39;la&#39;) as lat,</span><br><span class="line">event_name,</span><br><span class="line">event_json,</span><br><span class="line">base_analizer(line,&#39;st&#39;) as server_time</span><br><span class="line">from $hive_origin_table_name lateral view flat_analizer(base_analizer(line,&#39;et&#39;)) tmp_flat as event_name,event_json</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39; and base_analizer(line,&#39;et&#39;)&lt;&gt;&#39;&#39;;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="44c27f4d"></a></p><h4 id="9-1-3-商品点击表"><a href="#9-1-3-商品点击表" class="headerlink" title="9.1.3 商品点击表"></a>9.1.3 商品点击表</h4><ul><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__display_log</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__display_log&#96;(</span><br><span class="line">&#96;mid_id&#96; string,</span><br><span class="line">&#96;user_id&#96; string,</span><br><span class="line">&#96;version_code&#96; string,</span><br><span class="line">&#96;version_name&#96; string,</span><br><span class="line">&#96;lang&#96; string,</span><br><span class="line">&#96;source&#96; string,</span><br><span class="line">&#96;os&#96; string,</span><br><span class="line">&#96;area&#96; string,</span><br><span class="line">&#96;model&#96; string,</span><br><span class="line">&#96;brand&#96; string,</span><br><span class="line">&#96;sdk_version&#96; string,</span><br><span class="line">&#96;gmail&#96; string,</span><br><span class="line">&#96;height_width&#96; string,</span><br><span class="line">&#96;app_time&#96; string,</span><br><span class="line">&#96;network&#96; string,</span><br><span class="line">&#96;lng&#96; string,</span><br><span class="line">&#96;lat&#96; string,</span><br><span class="line">&#96;action&#96; string,</span><br><span class="line">&#96;goodsid&#96; string,</span><br><span class="line">&#96;place&#96; string,</span><br><span class="line">&#96;extend1&#96; string,</span><br><span class="line">&#96;category&#96; string,</span><br><span class="line">&#96;server_time&#96; string</span><br><span class="line">  ) COMMENT &#39;商品点击表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;display_log&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">APP3&#x3D;ods</span><br><span class="line">table_name&#x3D;display_log</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line">hive_origin_table_name&#x3D;$APP3.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">mid_id,</span><br><span class="line">user_id,</span><br><span class="line">version_code,</span><br><span class="line">version_name,</span><br><span class="line">lang,</span><br><span class="line">source,</span><br><span class="line">os,</span><br><span class="line">area,</span><br><span class="line">model,</span><br><span class="line">brand,</span><br><span class="line">sdk_version,</span><br><span class="line">gmail,</span><br><span class="line">height_width,</span><br><span class="line">app_time,</span><br><span class="line">network,</span><br><span class="line">lng,</span><br><span class="line">lat,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.action&#39;) action,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.goodsid&#39;) goodsid,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.place&#39;) place,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.extend1&#39;) extend1,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.category&#39;) category,</span><br><span class="line">server_time</span><br><span class="line">from dwd.mall__event_log</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39; and event_name&#x3D;&#39;display&#39;;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="9a570f18"></a></p><h4 id="9-1-4-商品列表表"><a href="#9-1-4-商品列表表" class="headerlink" title="9.1.4 商品列表表"></a>9.1.4 商品列表表</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__loading_log</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__loading_log&#96;(</span><br><span class="line">&#96;mid_id&#96; string,</span><br><span class="line">&#96;user_id&#96; string,</span><br><span class="line">&#96;version_code&#96; string,</span><br><span class="line">&#96;version_name&#96; string,</span><br><span class="line">&#96;lang&#96; string,</span><br><span class="line">&#96;source&#96; string,</span><br><span class="line">&#96;os&#96; string,</span><br><span class="line">&#96;area&#96; string,</span><br><span class="line">&#96;model&#96; string,</span><br><span class="line">&#96;brand&#96; string,</span><br><span class="line">&#96;sdk_version&#96; string,</span><br><span class="line">&#96;gmail&#96; string,</span><br><span class="line">&#96;height_width&#96; string,</span><br><span class="line">&#96;app_time&#96; string,</span><br><span class="line">&#96;network&#96; string,</span><br><span class="line">&#96;lng&#96; string,</span><br><span class="line">&#96;lat&#96; string,</span><br><span class="line">&#96;action&#96; string,</span><br><span class="line">&#96;loading_time&#96; string,</span><br><span class="line">&#96;loading_way&#96; string,</span><br><span class="line">&#96;extend1&#96; string,</span><br><span class="line">&#96;extend2&#96; string,</span><br><span class="line">&#96;type&#96; string,</span><br><span class="line">&#96;type1&#96; string,</span><br><span class="line">&#96;server_time&#96; string</span><br><span class="line">  ) COMMENT &#39;商品列表表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;loading_log&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">APP3&#x3D;ods</span><br><span class="line">table_name&#x3D;loading_log</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line">hive_origin_table_name&#x3D;$APP3.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">mid_id,</span><br><span class="line">user_id,</span><br><span class="line">version_code,</span><br><span class="line">version_name,</span><br><span class="line">lang,</span><br><span class="line">source,</span><br><span class="line">os,</span><br><span class="line">area,</span><br><span class="line">model,</span><br><span class="line">brand,</span><br><span class="line">sdk_version,</span><br><span class="line">gmail,</span><br><span class="line">height_width,</span><br><span class="line">app_time,</span><br><span class="line">network,</span><br><span class="line">lng,</span><br><span class="line">lat,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.action&#39;) action,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.loading_time&#39;) loading_time,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.loading_way&#39;) loading_way,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.extend1&#39;) extend1,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.extend2&#39;) extend2,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.type&#39;) type,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.type1&#39;) type1,</span><br><span class="line">server_time</span><br><span class="line">from dwd.mall__event_log</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39; and event_name&#x3D;&#39;loading&#39;;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="502f9d47"></a></p><h4 id="9-1-5-广告表"><a href="#9-1-5-广告表" class="headerlink" title="9.1.5 广告表"></a>9.1.5 广告表</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__ad_log</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__ad_log&#96;(</span><br><span class="line">&#96;mid_id&#96; string,</span><br><span class="line">&#96;user_id&#96; string,</span><br><span class="line">&#96;version_code&#96; string,</span><br><span class="line">&#96;version_name&#96; string,</span><br><span class="line">&#96;lang&#96; string,</span><br><span class="line">&#96;source&#96; string,</span><br><span class="line">&#96;os&#96; string,</span><br><span class="line">&#96;area&#96; string,</span><br><span class="line">&#96;model&#96; string,</span><br><span class="line">&#96;brand&#96; string,</span><br><span class="line">&#96;sdk_version&#96; string,</span><br><span class="line">&#96;gmail&#96; string,</span><br><span class="line">&#96;height_width&#96; string,</span><br><span class="line">&#96;app_time&#96; string,</span><br><span class="line">&#96;network&#96; string,</span><br><span class="line">&#96;lng&#96; string,</span><br><span class="line">&#96;lat&#96; string,</span><br><span class="line">&#96;entry&#96; string,</span><br><span class="line">&#96;action&#96; string,</span><br><span class="line">&#96;contentType&#96; string,</span><br><span class="line">&#96;displayMills&#96; string,</span><br><span class="line">&#96;itemId&#96; string,</span><br><span class="line">&#96;activityId&#96; string,</span><br><span class="line">&#96;server_time&#96; string</span><br><span class="line">  ) COMMENT &#39;广告表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;ad_log&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">APP3&#x3D;ods</span><br><span class="line">table_name&#x3D;ad_log</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line">hive_origin_table_name&#x3D;$APP3.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">mid_id,</span><br><span class="line">user_id,</span><br><span class="line">version_code,</span><br><span class="line">version_name,</span><br><span class="line">lang,</span><br><span class="line">source,</span><br><span class="line">os,</span><br><span class="line">area,</span><br><span class="line">model,</span><br><span class="line">brand,</span><br><span class="line">sdk_version,</span><br><span class="line">gmail,</span><br><span class="line">height_width,</span><br><span class="line">app_time,</span><br><span class="line">network,</span><br><span class="line">lng,</span><br><span class="line">lat,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.entry&#39;) entry,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.action&#39;) action,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.contentType&#39;) contentType,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.displayMills&#39;) displayMills,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.itemId&#39;) itemId,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.activityId&#39;) activityId,</span><br><span class="line">server_time</span><br><span class="line">from dwd.mall__event_log</span><br><span class="line">where dt&#x3D;&#39;db_date&#39; and event_name&#x3D;&#39;ad&#39;;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="a25a0ee7"></a></p><h4 id="9-1-6-消息通知表"><a href="#9-1-6-消息通知表" class="headerlink" title="9.1.6 消息通知表"></a>9.1.6 消息通知表</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__notification_log</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__notification_log&#96;(</span><br><span class="line">&#96;mid_id&#96; string,</span><br><span class="line">&#96;user_id&#96; string,</span><br><span class="line">&#96;version_code&#96; string,</span><br><span class="line">&#96;version_name&#96; string,</span><br><span class="line">&#96;lang&#96; string,</span><br><span class="line">&#96;source&#96; string,</span><br><span class="line">&#96;os&#96; string,</span><br><span class="line">&#96;area&#96; string,</span><br><span class="line">&#96;model&#96; string,</span><br><span class="line">&#96;brand&#96; string,</span><br><span class="line">&#96;sdk_version&#96; string,</span><br><span class="line">&#96;gmail&#96; string,</span><br><span class="line">&#96;height_width&#96; string,</span><br><span class="line">&#96;app_time&#96; string,</span><br><span class="line">&#96;network&#96; string,</span><br><span class="line">&#96;lng&#96; string,</span><br><span class="line">&#96;lat&#96; string,</span><br><span class="line">&#96;action&#96; string,</span><br><span class="line">&#96;noti_type&#96; string,</span><br><span class="line">&#96;ap_time&#96; string,</span><br><span class="line">&#96;content&#96; string,</span><br><span class="line">&#96;server_time&#96; string</span><br><span class="line">  ) COMMENT &#39;消息通知表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;notification_log&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">APP3&#x3D;ods</span><br><span class="line">table_name&#x3D;notification_log</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line">hive_origin_table_name&#x3D;$APP3.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">mid_id,</span><br><span class="line">user_id,</span><br><span class="line">version_code,</span><br><span class="line">version_name,</span><br><span class="line">lang,</span><br><span class="line">source,</span><br><span class="line">os,</span><br><span class="line">area,</span><br><span class="line">model,</span><br><span class="line">brand,</span><br><span class="line">sdk_version,</span><br><span class="line">gmail,</span><br><span class="line">height_width,</span><br><span class="line">app_time,</span><br><span class="line">network,</span><br><span class="line">lng,</span><br><span class="line">lat,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.action&#39;) action,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.noti_type&#39;) noti_type,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.ap_time&#39;) ap_time,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.content&#39;) content,</span><br><span class="line">server_time</span><br><span class="line">from dwd.mall__event_log</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39; and event_name&#x3D;&#39;notification&#39;;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="e14d4ccf"></a></p><h4 id="9-1-7-用户后台活跃表"><a href="#9-1-7-用户后台活跃表" class="headerlink" title="9.1.7 用户后台活跃表"></a>9.1.7 用户后台活跃表</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__active_background_log</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__active_background_log&#96;(</span><br><span class="line">&#96;mid_id&#96; string,</span><br><span class="line">&#96;user_id&#96; string,</span><br><span class="line">&#96;version_code&#96; string,</span><br><span class="line">&#96;version_name&#96; string,</span><br><span class="line">&#96;lang&#96; string,</span><br><span class="line">&#96;source&#96; string,</span><br><span class="line">&#96;os&#96; string,</span><br><span class="line">&#96;area&#96; string,</span><br><span class="line">&#96;model&#96; string,</span><br><span class="line">&#96;brand&#96; string,</span><br><span class="line">&#96;sdk_version&#96; string,</span><br><span class="line">&#96;gmail&#96; string,</span><br><span class="line">&#96;height_width&#96; string,</span><br><span class="line">&#96;app_time&#96; string,</span><br><span class="line">&#96;network&#96; string,</span><br><span class="line">&#96;lng&#96; string,</span><br><span class="line">&#96;lat&#96; string,</span><br><span class="line">&#96;active_source&#96; string,</span><br><span class="line">&#96;server_time&#96; string</span><br><span class="line">  ) COMMENT &#39;用户后台活跃表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;active_background_log&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">APP3&#x3D;ods</span><br><span class="line">table_name&#x3D;active_background_log</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line">hive_origin_table_name&#x3D;$APP3.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">mid_id,</span><br><span class="line">user_id,</span><br><span class="line">version_code,</span><br><span class="line">version_name,</span><br><span class="line">lang,</span><br><span class="line">source,</span><br><span class="line">os,</span><br><span class="line">area,</span><br><span class="line">model,</span><br><span class="line">brand,</span><br><span class="line">sdk_version,</span><br><span class="line">gmail,</span><br><span class="line">height_width,</span><br><span class="line">app_time,</span><br><span class="line">network,</span><br><span class="line">lng,</span><br><span class="line">lat,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.active_source&#39;) active_source,</span><br><span class="line">server_time</span><br><span class="line">from dwd.mall__event_log</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39; and event_name&#x3D;&#39;active_background&#39;;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="9f615d68"></a></p><h4 id="9-1-8-评论表"><a href="#9-1-8-评论表" class="headerlink" title="9.1.8 评论表"></a>9.1.8 评论表</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__comment_log</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__comment_log&#96;(</span><br><span class="line">&#96;mid_id&#96; string,</span><br><span class="line">&#96;user_id&#96; string,</span><br><span class="line">&#96;version_code&#96; string,</span><br><span class="line">&#96;version_name&#96; string,</span><br><span class="line">&#96;lang&#96; string,</span><br><span class="line">&#96;source&#96; string,</span><br><span class="line">&#96;os&#96; string,</span><br><span class="line">&#96;area&#96; string,</span><br><span class="line">&#96;model&#96; string,</span><br><span class="line">&#96;brand&#96; string,</span><br><span class="line">&#96;sdk_version&#96; string,</span><br><span class="line">&#96;gmail&#96; string,</span><br><span class="line">&#96;height_width&#96; string,</span><br><span class="line">&#96;app_time&#96; string,</span><br><span class="line">&#96;network&#96; string,</span><br><span class="line">&#96;lng&#96; string,</span><br><span class="line">&#96;lat&#96; string,</span><br><span class="line">&#96;comment_id&#96; int,</span><br><span class="line">&#96;userid&#96; int,</span><br><span class="line">&#96;p_comment_id&#96; int,</span><br><span class="line">&#96;content&#96; string,</span><br><span class="line">&#96;addtime&#96; string,</span><br><span class="line">&#96;other_id&#96; int,</span><br><span class="line">&#96;praise_count&#96; int,</span><br><span class="line">&#96;reply_count&#96; int,</span><br><span class="line">&#96;server_time&#96; string</span><br><span class="line">  ) COMMENT &#39;评论表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;comment_log&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">APP3&#x3D;ods</span><br><span class="line">table_name&#x3D;comment_log</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line">hive_origin_table_name&#x3D;$APP3.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">mid_id,</span><br><span class="line">user_id,</span><br><span class="line">version_code,</span><br><span class="line">version_name,</span><br><span class="line">lang,</span><br><span class="line">source,</span><br><span class="line">os,</span><br><span class="line">area,</span><br><span class="line">model,</span><br><span class="line">brand,</span><br><span class="line">sdk_version,</span><br><span class="line">gmail,</span><br><span class="line">height_width,</span><br><span class="line">app_time,</span><br><span class="line">network,</span><br><span class="line">lng,</span><br><span class="line">lat,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.comment_id&#39;) comment_id,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.userid&#39;) userid,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.p_comment_id&#39;) p_comment_id,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.content&#39;) content,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.addtime&#39;) addtime,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.other_id&#39;) other_id,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.praise_count&#39;) praise_count,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.reply_count&#39;) reply_count,</span><br><span class="line">server_time</span><br><span class="line">from dwd.mall__event_log</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39; and event_name&#x3D;&#39;comment&#39;;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="6448bc13"></a></p><h4 id="9-1-9-收藏表"><a href="#9-1-9-收藏表" class="headerlink" title="9.1.9 收藏表"></a>9.1.9 收藏表</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__favorites_log</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__favorites_log&#96;(</span><br><span class="line">&#96;mid_id&#96; string,</span><br><span class="line">&#96;user_id&#96; string,</span><br><span class="line">&#96;version_code&#96; string,</span><br><span class="line">&#96;version_name&#96; string,</span><br><span class="line">&#96;lang&#96; string,</span><br><span class="line">&#96;source&#96; string,</span><br><span class="line">&#96;os&#96; string,</span><br><span class="line">&#96;area&#96; string,</span><br><span class="line">&#96;model&#96; string,</span><br><span class="line">&#96;brand&#96; string,</span><br><span class="line">&#96;sdk_version&#96; string,</span><br><span class="line">&#96;gmail&#96; string,</span><br><span class="line">&#96;height_width&#96; string,</span><br><span class="line">&#96;app_time&#96; string,</span><br><span class="line">&#96;network&#96; string,</span><br><span class="line">&#96;lng&#96; string,</span><br><span class="line">&#96;lat&#96; string,</span><br><span class="line">&#96;id&#96; int,</span><br><span class="line">&#96;course_id&#96; int,</span><br><span class="line">&#96;userid&#96; int,</span><br><span class="line">&#96;add_time&#96; string,</span><br><span class="line">&#96;server_time&#96; string</span><br><span class="line">  ) COMMENT &#39;收藏表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;favorites_log&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">APP3&#x3D;ods</span><br><span class="line">table_name&#x3D;favorites_log</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line">hive_origin_table_name&#x3D;$APP3.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">mid_id,</span><br><span class="line">user_id,</span><br><span class="line">version_code,</span><br><span class="line">version_name,</span><br><span class="line">lang,</span><br><span class="line">source,</span><br><span class="line">os,</span><br><span class="line">area,</span><br><span class="line">model,</span><br><span class="line">brand,</span><br><span class="line">sdk_version,</span><br><span class="line">gmail,</span><br><span class="line">height_width,</span><br><span class="line">app_time,</span><br><span class="line">network,</span><br><span class="line">lng,</span><br><span class="line">lat,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.id&#39;) id,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.course_id&#39;) course_id,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.userid&#39;) userid,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.add_time&#39;) add_time,</span><br><span class="line">server_time</span><br><span class="line">from dwd.mall__event_log</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39; and event_name&#x3D;&#39;favorites&#39;;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="9790b43b"></a></p><h4 id="9-1-10-点赞表"><a href="#9-1-10-点赞表" class="headerlink" title="9.1.10 点赞表"></a>9.1.10 点赞表</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__praise_log</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__praise_log&#96;(</span><br><span class="line">&#96;mid_id&#96; string,</span><br><span class="line">&#96;user_id&#96; string,</span><br><span class="line">&#96;version_code&#96; string,</span><br><span class="line">&#96;version_name&#96; string,</span><br><span class="line">&#96;lang&#96; string,</span><br><span class="line">&#96;source&#96; string,</span><br><span class="line">&#96;os&#96; string,</span><br><span class="line">&#96;area&#96; string,</span><br><span class="line">&#96;model&#96; string,</span><br><span class="line">&#96;brand&#96; string,</span><br><span class="line">&#96;sdk_version&#96; string,</span><br><span class="line">&#96;gmail&#96; string,</span><br><span class="line">&#96;height_width&#96; string,</span><br><span class="line">&#96;app_time&#96; string,</span><br><span class="line">&#96;network&#96; string,</span><br><span class="line">&#96;lng&#96; string,</span><br><span class="line">&#96;lat&#96; string,</span><br><span class="line">&#96;id&#96; string,</span><br><span class="line">&#96;userid&#96; string,</span><br><span class="line">&#96;target_id&#96; string,</span><br><span class="line">&#96;type&#96; string,</span><br><span class="line">&#96;add_time&#96; string,</span><br><span class="line">&#96;server_time&#96; string</span><br><span class="line">  ) COMMENT &#39;点赞表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;praise_log&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">APP3&#x3D;ods</span><br><span class="line">table_name&#x3D;praise_log</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line">hive_origin_table_name&#x3D;$APP3.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">mid_id,</span><br><span class="line">user_id,</span><br><span class="line">version_code,</span><br><span class="line">version_name,</span><br><span class="line">lang,</span><br><span class="line">source,</span><br><span class="line">os,</span><br><span class="line">area,</span><br><span class="line">model,</span><br><span class="line">brand,</span><br><span class="line">sdk_version,</span><br><span class="line">gmail,</span><br><span class="line">height_width,</span><br><span class="line">app_time,</span><br><span class="line">network,</span><br><span class="line">lng,</span><br><span class="line">lat,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.id&#39;) id,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.userid&#39;) userid,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.target_id&#39;) target_id,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.type&#39;) type,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.add_time&#39;) add_time,</span><br><span class="line">server_time</span><br><span class="line">from dwd.mall__event_log</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39; and event_name&#x3D;&#39;praise&#39;;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="ffc7fca0"></a></p><h4 id="9-1-11-错误日志表"><a href="#9-1-11-错误日志表" class="headerlink" title="9.1.11 错误日志表"></a>9.1.11 错误日志表</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__error_log</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__error_log&#96;(</span><br><span class="line">&#96;mid_id&#96; string,</span><br><span class="line">&#96;user_id&#96; string,</span><br><span class="line">&#96;version_code&#96; string,</span><br><span class="line">&#96;version_name&#96; string,</span><br><span class="line">&#96;lang&#96; string,</span><br><span class="line">&#96;source&#96; string,</span><br><span class="line">&#96;os&#96; string,</span><br><span class="line">&#96;area&#96; string,</span><br><span class="line">&#96;model&#96; string,</span><br><span class="line">&#96;brand&#96; string,</span><br><span class="line">&#96;sdk_version&#96; string,</span><br><span class="line">&#96;gmail&#96; string,</span><br><span class="line">&#96;height_width&#96; string,</span><br><span class="line">&#96;app_time&#96; string,</span><br><span class="line">&#96;network&#96; string,</span><br><span class="line">&#96;lng&#96; string,</span><br><span class="line">&#96;lat&#96; string,</span><br><span class="line">&#96;errorBrief&#96; string,</span><br><span class="line">&#96;errorDetail&#96; string,</span><br><span class="line">&#96;server_time&#96; string</span><br><span class="line">  ) COMMENT &#39;错误日志表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;error_log&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">APP3&#x3D;ods</span><br><span class="line">table_name&#x3D;error_log</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line">hive_origin_table_name&#x3D;$APP3.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">mid_id,</span><br><span class="line">user_id,</span><br><span class="line">version_code,</span><br><span class="line">version_name,</span><br><span class="line">lang,</span><br><span class="line">source,</span><br><span class="line">os,</span><br><span class="line">area,</span><br><span class="line">model,</span><br><span class="line">brand,</span><br><span class="line">sdk_version,</span><br><span class="line">gmail,</span><br><span class="line">height_width,</span><br><span class="line">app_time,</span><br><span class="line">network,</span><br><span class="line">lng,</span><br><span class="line">lat,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.errorBrief&#39;) errorBrief,</span><br><span class="line">get_json_object(event_json,&#39;$.kv.errorDetail&#39;) errorDetail,</span><br><span class="line">server_time</span><br><span class="line">from dwd.mall__event_log</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39; and event_name&#x3D;&#39;error&#39;;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="blogTitle36"></a></p><h3 id="9-2-dwd层构建-业务库"><a href="#9-2-dwd层构建-业务库" class="headerlink" title="9.2 dwd层构建(业务库)"></a>9.2 dwd层构建(业务库)</h3><blockquote><p>此层在构建之初，增量表需要动态分区来划分时间，将数据放入指定分区</p></blockquote></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445674-85cdb9f6-3bc5-45af-a42c-260b856251c4.png#align=left&display=inline&height=727&margin=%5Bobject%20Object%5D&originHeight=727&originWidth=1200&size=0&status=done&style=none&width=1200" alt></p><table><thead><tr><th>事实/维度</th><th>时间</th><th>用户</th><th>地区</th><th>商品</th><th>优惠卷</th><th>活动</th><th>编码</th><th>度量</th></tr></thead><tbody><tr><td>订单</td><td>√</td><td>√</td><td>√</td><td></td><td></td><td>√</td><td></td><td>件数/金额</td></tr><tr><td>订单详情</td><td>√</td><td></td><td>√</td><td>√</td><td></td><td></td><td></td><td>件数/金额</td></tr><tr><td>支付</td><td>√</td><td></td><td>√</td><td></td><td></td><td></td><td></td><td>次数/金额</td></tr><tr><td>加入购物车</td><td>√</td><td>√</td><td></td><td>√</td><td></td><td></td><td></td><td>件数/金额</td></tr><tr><td>收藏</td><td>√</td><td>√</td><td></td><td>√</td><td></td><td></td><td></td><td>个数</td></tr><tr><td>评价</td><td>√</td><td>√</td><td></td><td>√</td><td></td><td></td><td></td><td>个数</td></tr><tr><td>退款</td><td>√</td><td>√</td><td></td><td>√</td><td></td><td></td><td></td><td>件数/金额</td></tr><tr><td>优惠卷领用</td><td>√</td><td>√</td><td></td><td></td><td>√</td><td></td><td></td><td>个数</td></tr></tbody></table><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445446714-5b66a38b-d703-4552-a3b2-78e2bb1093b0.png#align=left&display=inline&height=633&margin=%5Bobject%20Object%5D&originHeight=633&originWidth=1129&size=0&status=done&style=none&width=1129" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445779-c15f3dba-9e4f-4a43-aa6a-da30699cb8ae.png#align=left&display=inline&height=554&margin=%5Bobject%20Object%5D&originHeight=554&originWidth=1243&size=0&status=done&style=none&width=1243" alt><br><a name="04dcb13e"></a></p><h4 id="9-2-1-商品维度表-全量"><a href="#9-2-1-商品维度表-全量" class="headerlink" title="9.2.1 商品维度表(全量)"></a>9.2.1 商品维度表(全量)</h4><ul><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__dim_sku_info</span><br><span class="line">    </span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__dim_sku_info&#96;(</span><br><span class="line">&#96;id&#96; string COMMENT &#39;商品 id&#39;,</span><br><span class="line">&#96;spu_id&#96; string COMMENT &#39;spuid&#39;,</span><br><span class="line">&#96;price&#96; double COMMENT &#39;商品价格&#39;,</span><br><span class="line">&#96;sku_name&#96; string COMMENT &#39;商品名称&#39;,</span><br><span class="line">&#96;sku_desc&#96; string COMMENT &#39;商品描述&#39;,</span><br><span class="line">&#96;weight&#96; double COMMENT &#39;重量&#39;,</span><br><span class="line">&#96;tm_id&#96; string COMMENT &#39;品牌 id&#39;,</span><br><span class="line">&#96;tm_name&#96; string COMMENT &#39;品牌名称&#39;,</span><br><span class="line">&#96;category3_id&#96; string COMMENT &#39;三级分类 id&#39;,</span><br><span class="line">&#96;category2_id&#96; string COMMENT &#39;二级分类 id&#39;,</span><br><span class="line">&#96;category1_id&#96; string COMMENT &#39;一级分类 id&#39;,</span><br><span class="line">&#96;category3_name&#96; string COMMENT &#39;三级分类名称&#39;,</span><br><span class="line">&#96;category2_name&#96; string COMMENT &#39;二级分类名称&#39;,</span><br><span class="line">&#96;category1_name&#96; string COMMENT &#39;一级分类名称&#39;,</span><br><span class="line">&#96;spu_name&#96; string COMMENT &#39;spu 名称&#39;,</span><br><span class="line">&#96;create_time&#96; string COMMENT &#39;创建时间&#39;</span><br><span class="line">  ) COMMENT &#39;商品维度表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;dim_sku_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">table_name&#x3D;dim_sku_info</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">sku.id,</span><br><span class="line">sku.spu_id,</span><br><span class="line">sku.price,</span><br><span class="line">sku.sku_name,</span><br><span class="line">sku.sku_desc,</span><br><span class="line">sku.weight,</span><br><span class="line">sku.tm_id,</span><br><span class="line">ob.tm_name,</span><br><span class="line">sku.category3_id,</span><br><span class="line">c2.id category2_id,</span><br><span class="line">c1.id category1_id,</span><br><span class="line">c3.name category3_name,</span><br><span class="line">c2.name category2_name,</span><br><span class="line">c1.name category1_name,</span><br><span class="line">spu.spu_name,</span><br><span class="line">from_unixtime(cast(sku.create_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) create_time</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select * from ods.mall__sku_info where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)sku</span><br><span class="line">join</span><br><span class="line">(</span><br><span class="line">select * from ods.mall__base_trademark where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)ob on sku.tm_id&#x3D;ob.tm_id</span><br><span class="line">join</span><br><span class="line">(</span><br><span class="line">select * from ods.mall__spu_info where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)spu on spu.id &#x3D; sku.spu_id</span><br><span class="line">join</span><br><span class="line">(</span><br><span class="line">select * from ods.mall__base_category3 where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)c3 on sku.category3_id&#x3D;c3.id</span><br><span class="line">join</span><br><span class="line">(</span><br><span class="line">select * from ods.mall__base_category2 where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)c2 on c3.category2_id&#x3D;c2.id</span><br><span class="line">join</span><br><span class="line">(</span><br><span class="line">select * from ods.mall__base_category1 where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)c1 on c2.category1_id&#x3D;c1.id;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="f6fa4154"></a></p><h4 id="9-2-2-优惠券信息维度表-全量"><a href="#9-2-2-优惠券信息维度表-全量" class="headerlink" title="9.2.2 优惠券信息维度表(全量)"></a>9.2.2 优惠券信息维度表(全量)</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__dim_coupon_info</span><br><span class="line">    </span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__dim_coupon_info&#96;(</span><br><span class="line">&#96;id&#96; string COMMENT &#39;购物券编号&#39;,</span><br><span class="line">&#96;coupon_name&#96; string COMMENT &#39;购物券名称&#39;,</span><br><span class="line">&#96;coupon_type&#96; string COMMENT &#39;购物券类型 1 现金券 2 折扣券 3 满减券 4 满件打折券&#39;,</span><br><span class="line">&#96;condition_amount&#96; string COMMENT &#39;满额数&#39;,</span><br><span class="line">&#96;condition_num&#96; string COMMENT &#39;满件数&#39;,</span><br><span class="line">&#96;activity_id&#96; string COMMENT &#39;活动编号&#39;,</span><br><span class="line">&#96;benefit_amount&#96; string COMMENT &#39;减金额&#39;,</span><br><span class="line">&#96;benefit_discount&#96; string COMMENT &#39;折扣&#39;,</span><br><span class="line">&#96;create_time&#96; string COMMENT &#39;创建时间&#39;,</span><br><span class="line">&#96;range_type&#96; string COMMENT &#39;范围类型 1、商品 2、品类 3、品牌&#39;,</span><br><span class="line">&#96;spu_id&#96; string COMMENT &#39;商品 id&#39;,</span><br><span class="line">&#96;tm_id&#96; string COMMENT &#39;品牌 id&#39;,</span><br><span class="line">&#96;category3_id&#96; string COMMENT &#39;品类 id&#39;,</span><br><span class="line">&#96;limit_num&#96; string COMMENT &#39;最多领用次数&#39;,</span><br><span class="line">&#96;operate_time&#96; string COMMENT &#39;修改时间&#39;,</span><br><span class="line">&#96;expire_time&#96; string COMMENT &#39;过期时间&#39;</span><br><span class="line">  ) COMMENT &#39;优惠券信息维度表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;dim_coupon_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">table_name&#x3D;dim_coupon_info</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">id,</span><br><span class="line">coupon_name,</span><br><span class="line">coupon_type,</span><br><span class="line">condition_amount,</span><br><span class="line">condition_num,</span><br><span class="line">activity_id,</span><br><span class="line">benefit_amount,</span><br><span class="line">benefit_discount,</span><br><span class="line">from_unixtime(cast(create_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) create_time,</span><br><span class="line">range_type,</span><br><span class="line">spu_id,</span><br><span class="line">tm_id,</span><br><span class="line">category3_id,</span><br><span class="line">limit_num,</span><br><span class="line">from_unixtime(cast(operate_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) operate_time,</span><br><span class="line">from_unixtime(cast(expire_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) expire_time</span><br><span class="line">from ods.mall__coupon_info</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="e5a0afd7"></a></p><h4 id="9-2-3-活动维度表-全量"><a href="#9-2-3-活动维度表-全量" class="headerlink" title="9.2.3 活动维度表(全量)"></a>9.2.3 活动维度表(全量)</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__dim_activity_info</span><br><span class="line">    </span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__dim_activity_info&#96;(</span><br><span class="line">&#96;id&#96; string COMMENT &#39;编号&#39;,</span><br><span class="line">&#96;activity_name&#96; string COMMENT &#39;活动名称&#39;,</span><br><span class="line">&#96;activity_type&#96; string COMMENT &#39;活动类型&#39;,</span><br><span class="line">&#96;condition_amount&#96; string COMMENT &#39;满减金额&#39;,</span><br><span class="line">&#96;condition_num&#96; string COMMENT &#39;满减件数&#39;,</span><br><span class="line">&#96;benefit_amount&#96; string COMMENT &#39;优惠金额&#39;,</span><br><span class="line">&#96;benefit_discount&#96; string COMMENT &#39;优惠折扣&#39;,</span><br><span class="line">&#96;benefit_level&#96; string COMMENT &#39;优惠级别&#39;,</span><br><span class="line">&#96;start_time&#96; string COMMENT &#39;开始时间&#39;,</span><br><span class="line">&#96;end_time&#96; string COMMENT &#39;结束时间&#39;,</span><br><span class="line">&#96;create_time&#96; string COMMENT &#39;创建时间&#39;</span><br><span class="line">  ) COMMENT &#39;活动维度表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;dim_activity_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">table_name&#x3D;dim_activity_info</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">info.id,</span><br><span class="line">info.activity_name,</span><br><span class="line">info.activity_type,</span><br><span class="line">rule.condition_amount,</span><br><span class="line">rule.condition_num,</span><br><span class="line">rule.benefit_amount,</span><br><span class="line">rule.benefit_discount,</span><br><span class="line">rule.benefit_level,</span><br><span class="line">from_unixtime(cast(info.start_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) start_time,</span><br><span class="line">from_unixtime(cast(info.end_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) end_time,</span><br><span class="line">from_unixtime(cast(info.create_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) create_time</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select * from ods.mall__activity_info where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)info</span><br><span class="line">left join</span><br><span class="line">(</span><br><span class="line">select * from ods.mall__activity_rule where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)rule on info.id &#x3D; rule.activity_id;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="40a2f40c"></a></p><h4 id="9-2-4-地区维度表-特殊"><a href="#9-2-4-地区维度表-特殊" class="headerlink" title="9.2.4 地区维度表(特殊)"></a>9.2.4 地区维度表(特殊)</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__dim_base_province</span><br><span class="line">    </span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__dim_base_province&#96;(</span><br><span class="line">&#96;id&#96; string COMMENT &#39;id&#39;,</span><br><span class="line">&#96;province_name&#96; string COMMENT &#39;省市名称&#39;,</span><br><span class="line">&#96;area_code&#96; string COMMENT &#39;地区编码&#39;,</span><br><span class="line">&#96;iso_code&#96; string COMMENT &#39;ISO 编码&#39;,</span><br><span class="line">&#96;region_id&#96; string COMMENT &#39;地区 id&#39;,</span><br><span class="line">&#96;region_name&#96; string COMMENT &#39;地区名称&#39;</span><br><span class="line">  ) COMMENT &#39;地区维度表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;dim_base_province&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">table_name&#x3D;dim_base_province</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">bp.id,</span><br><span class="line">bp.name,</span><br><span class="line">bp.area_code,</span><br><span class="line">bp.iso_code,</span><br><span class="line">bp.region_id,</span><br><span class="line">br.region_name</span><br><span class="line">from ods.mall__base_province bp</span><br><span class="line">join ods.mall__base_region br</span><br><span class="line">on bp.region_id&#x3D;br.id;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="6dc38b01"></a></p><h4 id="9-2-5-时间维度表-特殊"><a href="#9-2-5-时间维度表-特殊" class="headerlink" title="9.2.5 时间维度表(特殊)"></a>9.2.5 时间维度表(特殊)</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__dim_date_info</span><br><span class="line">    </span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__dim_date_info&#96;(</span><br><span class="line">&#96;date_id&#96; string COMMENT &#39;日&#39;,</span><br><span class="line">&#96;week_id&#96; int COMMENT &#39;周&#39;,</span><br><span class="line">&#96;week_day&#96; int COMMENT &#39;周的第几天&#39;,</span><br><span class="line">&#96;day&#96; int COMMENT &#39;每月的第几天&#39;,</span><br><span class="line">&#96;month&#96; int COMMENT &#39;第几月&#39;,</span><br><span class="line">&#96;quarter&#96; int COMMENT &#39;第几季度&#39;,</span><br><span class="line">&#96;year&#96; int COMMENT &#39;年&#39;,</span><br><span class="line">&#96;is_workday&#96; int COMMENT &#39;是否是周末&#39;,</span><br><span class="line">&#96;holiday_id&#96; int COMMENT &#39;是否是节假日&#39;</span><br><span class="line">  ) COMMENT &#39;时间维度表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;dim_date_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">table_name&#x3D;dim_date_info</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">date_id,</span><br><span class="line">week_id,</span><br><span class="line">week_day,</span><br><span class="line">day,</span><br><span class="line">month,</span><br><span class="line">quarter,</span><br><span class="line">year,</span><br><span class="line">is_workday,</span><br><span class="line">holiday_id</span><br><span class="line">from ods.mall__date_info</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="2d4b2961"></a></p><h4 id="9-2-6-用户维度表-新增及变化-缓慢变化维-拉链表"><a href="#9-2-6-用户维度表-新增及变化-缓慢变化维-拉链表" class="headerlink" title="9.2.6 用户维度表(新增及变化-缓慢变化维-拉链表)"></a>9.2.6 用户维度表(新增及变化-缓慢变化维-拉链表)</h4><p><a name="467596bc"></a></p><h5 id="9-2-6-1-拉链表介绍"><a href="#9-2-6-1-拉链表介绍" class="headerlink" title="9.2.6.1 拉链表介绍"></a>9.2.6.1 拉链表介绍</h5><blockquote><p>拉链表，记录每条信息的生命周期，一旦一条记录的生命周期结束，就重新开始一条新的记录，并把当前日期放入生效开始日期。<br>如果当前信息至今有效，在生效结束日期中填入一个极大值（如:9999-99-99）,下表为张三的手机号变化例子</p></blockquote></li></ul><table><thead><tr><th>用户ID</th><th>姓名</th><th>手机号</th><th>开始日期</th><th>结束日期</th></tr></thead><tbody><tr><td>1</td><td>张三</td><td>134XXXX5050</td><td>2019-01-01</td><td>2019-01-02</td></tr><tr><td>1</td><td>张三</td><td>139XXXX3232</td><td>2019-01-03</td><td>2020-01-01</td></tr><tr><td>1</td><td>张三</td><td>137XXXX7676</td><td>2020-01-02</td><td>9999-99-99</td></tr></tbody></table><ul><li><p>适合场景：数据会发生变化，但是大部分不变（即：缓慢变化维）</p><blockquote><p>比如：用户信息发生变化，但是每天变化比例不高，按照每日全量，则效率低</p></blockquote></li><li><p>如何使用拉链表：通过–&gt;生效开始日期&lt;=某个日期 且 生效结束日期&gt;=某个日期，能够得到某个时间点的数据全量切片。</p></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445711-5342c8ec-2d69-476f-bb7d-80084793cdc7.png#align=left&display=inline&height=699&margin=%5Bobject%20Object%5D&originHeight=699&originWidth=1309&size=0&status=done&style=none&width=1309" alt></p><ul><li>拉链表形成过程</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445446108-d1824bc2-adf7-4c28-bc32-71e8ba274913.png#align=left&display=inline&height=806&margin=%5Bobject%20Object%5D&originHeight=806&originWidth=1435&size=0&status=done&style=none&width=1435" alt></p><ul><li>制作流程<blockquote><p>用户当日全部数据和MySQL中每天变化的数据拼接在一起，形成一个&lt;新的临时拉链表。<br>用临时拉链表覆盖旧的拉链表数据。<br>从而解决Hive中数据不能更新的问题</p></blockquote></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445740-8f05faaa-a871-4d74-9b27-f4fa1da7e452.png#align=left&display=inline&height=771&margin=%5Bobject%20Object%5D&originHeight=771&originWidth=1437&size=0&status=done&style=none&width=1437" alt><br><a name="ded0213a"></a></p><h5 id="9-2-6-2-用户维度表"><a href="#9-2-6-2-用户维度表" class="headerlink" title="9.2.6.2 用户维度表"></a>9.2.6.2 用户维度表</h5><blockquote><p>用户表中的数据每日既有可能新增，也有可能修改，属于缓慢变化维度，此处采用拉链表存储用户维度数据。</p></blockquote><ul><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__dim_user_info_his</span><br><span class="line">    </span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__dim_user_info_his&#96;(</span><br><span class="line">&#96;id&#96; string COMMENT &#39;用户 id&#39;,</span><br><span class="line">&#96;name&#96; string COMMENT &#39;姓名&#39;,</span><br><span class="line">&#96;birthday&#96; string COMMENT &#39;生日&#39;,</span><br><span class="line">&#96;gender&#96; string COMMENT &#39;性别&#39;,</span><br><span class="line">&#96;email&#96; string COMMENT &#39;邮箱&#39;,</span><br><span class="line">&#96;user_level&#96; string COMMENT &#39;用户等级&#39;,</span><br><span class="line">&#96;create_time&#96; string COMMENT &#39;创建时间&#39;,</span><br><span class="line">&#96;operate_time&#96; string COMMENT &#39;操作时间&#39;,</span><br><span class="line">&#96;start_date&#96; string COMMENT &#39;有效开始日期&#39;,</span><br><span class="line">&#96;end_date&#96; string COMMENT &#39;有效结束日期&#39;</span><br><span class="line">  ) COMMENT &#39;用户拉链表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;dim_user_info_his&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>临时表建表(结构与主表相同)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__dim_user_info_his_tmp</span><br><span class="line">    </span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__dim_user_info_his_tmp&#96;(</span><br><span class="line">&#96;id&#96; string COMMENT &#39;用户 id&#39;,</span><br><span class="line">&#96;name&#96; string COMMENT &#39;姓名&#39;,</span><br><span class="line">&#96;birthday&#96; string COMMENT &#39;生日&#39;,</span><br><span class="line">&#96;gender&#96; string COMMENT &#39;性别&#39;,</span><br><span class="line">&#96;email&#96; string COMMENT &#39;邮箱&#39;,</span><br><span class="line">&#96;user_level&#96; string COMMENT &#39;用户等级&#39;,</span><br><span class="line">&#96;create_time&#96; string COMMENT &#39;创建时间&#39;,</span><br><span class="line">&#96;operate_time&#96; string COMMENT &#39;操作时间&#39;,</span><br><span class="line">&#96;start_date&#96; string COMMENT &#39;有效开始日期&#39;,</span><br><span class="line">&#96;end_date&#96; string COMMENT &#39;有效结束日期&#39;</span><br><span class="line">  ) COMMENT &#39;用户拉链表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;dim_user_info_his_tmp&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>首先（主表）数据初始化，只做一次</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">table_name&#x3D;dim_user_info_his</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">select</span><br><span class="line">id,</span><br><span class="line">name,</span><br><span class="line">from_unixtime(cast(birthday&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) birthday,</span><br><span class="line">gender,</span><br><span class="line">email,</span><br><span class="line">user_level,</span><br><span class="line">from_unixtime(cast(create_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) create_time,</span><br><span class="line">from_unixtime(cast(operate_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) operate_time,</span><br><span class="line">&#39;$db_date&#39;,</span><br><span class="line">&#39;9999-99-99&#39;</span><br><span class="line">from ods.mall__user_info oi</span><br><span class="line">where oi.dt&#x3D;&#39;$db_date&#39;;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure></li><li><p>临时表数据计算导入(在主表数据之后执行)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">table_name&#x3D;dim_user_info_his_tmp</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">select</span><br><span class="line">* </span><br><span class="line">from</span><br><span class="line">(      --查询当前时间的所有信息</span><br><span class="line">select</span><br><span class="line">cast(id as string) id,</span><br><span class="line">name,</span><br><span class="line">from_unixtime(cast(birthday&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) birthday,</span><br><span class="line">gender,</span><br><span class="line">email,</span><br><span class="line">user_level,</span><br><span class="line">from_unixtime(cast(create_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) create_time,</span><br><span class="line">from_unixtime(cast(operate_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) operate_time,</span><br><span class="line">&#39;$db_date&#39; start_date,</span><br><span class="line">&#39;9999-99-99&#39; end_date</span><br><span class="line">from ods.mall__user_info where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">union all</span><br><span class="line"> --查询当前变化了的数据，修改日期</span><br><span class="line">select</span><br><span class="line">uh.id,</span><br><span class="line">uh.name,</span><br><span class="line">from_unixtime(cast(uh.birthday&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) birthday,</span><br><span class="line">uh.gender,</span><br><span class="line">uh.email,</span><br><span class="line">uh.user_level,</span><br><span class="line">from_unixtime(cast(uh.create_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) create_time,</span><br><span class="line">from_unixtime(cast(uh.operate_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) operate_time,</span><br><span class="line">uh.start_date,</span><br><span class="line">if(ui.id is not null and uh.end_date&#x3D;&#39;9999-99-99&#39;, date_add(ui.dt,-1),uh.end_date) end_date</span><br><span class="line">from dwd.mall__dim_user_info_his uh left join</span><br><span class="line">(</span><br><span class="line">        --查询当前时间的所有信息</span><br><span class="line">select</span><br><span class="line">cast(id as string) id,</span><br><span class="line">name,</span><br><span class="line">from_unixtime(cast(birthday&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) birthday,</span><br><span class="line">gender,</span><br><span class="line">email,</span><br><span class="line">user_level,</span><br><span class="line">from_unixtime(cast(create_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) create_time,</span><br><span class="line">from_unixtime(cast(operate_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) operate_time,</span><br><span class="line">dt</span><br><span class="line">from ods.mall__user_info</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">) ui on uh.id&#x3D;ui.id</span><br><span class="line">)his</span><br><span class="line">order by his.id, start_date;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">table_name&#x3D;dim_user_info_his</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">select * from dwd.mall__dim_user_info_his_tmp;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="7bac56d4"></a></p><h4 id="9-2-7-订单详情事实表-事务型快照事实表-新增"><a href="#9-2-7-订单详情事实表-事务型快照事实表-新增" class="headerlink" title="9.2.7 订单详情事实表(事务型快照事实表-新增)"></a>9.2.7 订单详情事实表(事务型快照事实表-新增)</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__fact_order_detail</span><br><span class="line">    </span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__fact_order_detail&#96;(</span><br><span class="line">  &#96;id&#96; bigint COMMENT &#39;编号&#39;,</span><br><span class="line">  &#96;order_id&#96; bigint COMMENT &#39;订单编号&#39;,</span><br><span class="line">  &#96;user_id&#96; bigint COMMENT &#39;用户id&#39;,</span><br><span class="line">  &#96;sku_id&#96; bigint COMMENT &#39;sku_id&#39;,</span><br><span class="line">  &#96;sku_name&#96; string COMMENT &#39;sku名称&#39;,</span><br><span class="line">  &#96;order_price&#96; decimal(10,2) COMMENT &#39;购买价格(下单时sku价格）&#39;,</span><br><span class="line">  &#96;sku_num&#96; string COMMENT &#39;购买个数&#39;,</span><br><span class="line">  &#96;create_time&#96; bigint COMMENT &#39;创建时间&#39;,</span><br><span class="line">  &#96;province_id&#96; string COMMENT &#39;省份ID&#39;,</span><br><span class="line">  &#96;total_amount&#96; decimal(20,2) COMMENT &#39;订单总金额&#39;</span><br><span class="line">  ) COMMENT &#39;订单明细表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;fact_order_detail&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">table_name&#x3D;fact_order_detail</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">od.id, </span><br><span class="line">od.order_id, </span><br><span class="line">od.user_id, </span><br><span class="line">od.sku_id, </span><br><span class="line">od.sku_name, </span><br><span class="line">od.order_price, </span><br><span class="line">od.sku_num, </span><br><span class="line">od.create_time, </span><br><span class="line">oi.province_id, </span><br><span class="line">od.order_price*od.sku_num </span><br><span class="line">from (select * from ods.mall__order_detail where dt&#x3D;&#39;$db_date&#39; ) od </span><br><span class="line">join (select * from ods.mall__order_info where dt&#x3D;&#39;$db_date&#39; ) oi </span><br><span class="line">on od.order_id&#x3D;oi.id;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="038064ea"></a></p><h4 id="9-2-7-支付事实表-事务型快照事实表-新增"><a href="#9-2-7-支付事实表-事务型快照事实表-新增" class="headerlink" title="9.2.7 支付事实表(事务型快照事实表-新增)"></a>9.2.7 支付事实表(事务型快照事实表-新增)</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__fact_payment_info</span><br><span class="line">    </span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__fact_payment_info&#96;(</span><br><span class="line">&#96;id&#96; string COMMENT &#39;&#39;,</span><br><span class="line">&#96;out_trade_no&#96; string COMMENT &#39;对外业务编号&#39;,</span><br><span class="line">&#96;order_id&#96; string COMMENT &#39;订单编号&#39;,</span><br><span class="line">&#96;user_id&#96; string COMMENT &#39;用户编号&#39;,</span><br><span class="line">&#96;alipay_trade_no&#96; string COMMENT &#39;支付宝交易流水编号&#39;,</span><br><span class="line">&#96;payment_amount&#96; decimal(16,2) COMMENT &#39;支付金额&#39;,</span><br><span class="line">&#96;subject&#96; string COMMENT &#39;交易内容&#39;,</span><br><span class="line">&#96;payment_type&#96; string COMMENT &#39;支付类型&#39;,</span><br><span class="line">&#96;payment_time&#96; string COMMENT &#39;支付时间&#39;,</span><br><span class="line">&#96;province_id&#96; string COMMENT &#39;省份 ID&#39;</span><br><span class="line">  ) COMMENT &#39;支付事实表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;fact_payment_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">table_name&#x3D;fact_payment_info</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">pi.id,</span><br><span class="line">pi.out_trade_no,</span><br><span class="line">pi.order_id,</span><br><span class="line">pi.user_id,</span><br><span class="line">pi.alipay_trade_no,</span><br><span class="line">pi.total_amount,</span><br><span class="line">pi.subject,</span><br><span class="line">pi.payment_type,</span><br><span class="line">from_unixtime(cast(pi.payment_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) payment_time,</span><br><span class="line">oi.province_id</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select * from ods.mall__payment_info where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)pi</span><br><span class="line">join</span><br><span class="line">(</span><br><span class="line">select id, province_id from ods.mall__order_info where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)oi</span><br><span class="line">on pi.order_id &#x3D; oi.id;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="ab3a3670"></a></p><h4 id="9-2-8-退款事实表-事务型快照事实表-新增"><a href="#9-2-8-退款事实表-事务型快照事实表-新增" class="headerlink" title="9.2.8 退款事实表(事务型快照事实表-新增)"></a>9.2.8 退款事实表(事务型快照事实表-新增)</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__fact_order_refund_info</span><br><span class="line">    </span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__fact_order_refund_info&#96;(</span><br><span class="line">&#96;id&#96; string COMMENT &#39;编号&#39;,</span><br><span class="line">&#96;user_id&#96; string COMMENT &#39;用户 ID&#39;,</span><br><span class="line">&#96;order_id&#96; string COMMENT &#39;订单 ID&#39;,</span><br><span class="line">&#96;sku_id&#96; string COMMENT &#39;商品 ID&#39;,</span><br><span class="line">&#96;refund_type&#96; string COMMENT &#39;退款类型&#39;,</span><br><span class="line">&#96;refund_num&#96; bigint COMMENT &#39;退款件数&#39;,</span><br><span class="line">&#96;refund_amount&#96; decimal(16,2) COMMENT &#39;退款金额&#39;,</span><br><span class="line">&#96;refund_reason_type&#96; string COMMENT &#39;退款原因类型&#39;,</span><br><span class="line">&#96;create_time&#96; string COMMENT &#39;退款时间&#39;</span><br><span class="line">  ) COMMENT &#39;退款事实表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;fact_order_refund_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">table_name&#x3D;fact_order_refund_info</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">id,</span><br><span class="line">user_id,</span><br><span class="line">order_id,</span><br><span class="line">sku_id,</span><br><span class="line">refund_type,</span><br><span class="line">refund_num,</span><br><span class="line">refund_amount,</span><br><span class="line">refund_reason_type,</span><br><span class="line">from_unixtime(cast(create_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) create_time</span><br><span class="line">from ods.mall__order_refund_info</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="6fc9b5b6"></a></p><h4 id="9-2-9-评价事实表-事务型快照事实表-新增"><a href="#9-2-9-评价事实表-事务型快照事实表-新增" class="headerlink" title="9.2.9 评价事实表(事务型快照事实表-新增)"></a>9.2.9 评价事实表(事务型快照事实表-新增)</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__fact_comment_info</span><br><span class="line">    </span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__fact_comment_info&#96;(</span><br><span class="line">&#96;id&#96; string COMMENT &#39;编号&#39;,</span><br><span class="line">&#96;user_id&#96; string COMMENT &#39;用户 ID&#39;,</span><br><span class="line">&#96;sku_id&#96; string COMMENT &#39;商品 sku&#39;,</span><br><span class="line">&#96;spu_id&#96; string COMMENT &#39;商品 spu&#39;,</span><br><span class="line">&#96;order_id&#96; string COMMENT &#39;订单 ID&#39;,</span><br><span class="line">&#96;appraise&#96; string COMMENT &#39;评价&#39;,</span><br><span class="line">&#96;create_time&#96; string COMMENT &#39;评价时间&#39;</span><br><span class="line">  ) COMMENT &#39;评价事实表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;fact_comment_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">table_name&#x3D;fact_comment_info</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">id,</span><br><span class="line">user_id,</span><br><span class="line">sku_id,</span><br><span class="line">spu_id,</span><br><span class="line">order_id,</span><br><span class="line">appraise,</span><br><span class="line">from_unixtime(cast(create_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) create_time</span><br><span class="line">from ods.mall__comment_info</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="823e5d60"></a></p><h4 id="9-2-10-加购事实表-周期型快照事实表-全量"><a href="#9-2-10-加购事实表-周期型快照事实表-全量" class="headerlink" title="9.2.10 加购事实表(周期型快照事实表-全量)"></a>9.2.10 加购事实表(周期型快照事实表-全量)</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__fact_cart_info</span><br><span class="line">    </span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__fact_cart_info&#96;(</span><br><span class="line">&#96;id&#96; string COMMENT &#39;编号&#39;,</span><br><span class="line">&#96;user_id&#96; string COMMENT &#39;用户 id&#39;,</span><br><span class="line">&#96;sku_id&#96; string COMMENT &#39;skuid&#39;,</span><br><span class="line">&#96;cart_price&#96; string COMMENT &#39;放入购物车时价格&#39;,</span><br><span class="line">&#96;sku_num&#96; string COMMENT &#39;数量&#39;,</span><br><span class="line">&#96;sku_name&#96; string COMMENT &#39;sku 名称 (冗余)&#39;,</span><br><span class="line">&#96;create_time&#96; string COMMENT &#39;创建时间&#39;,</span><br><span class="line">&#96;operate_time&#96; string COMMENT &#39;修改时间&#39;,</span><br><span class="line">&#96;is_ordered&#96; string COMMENT &#39;是否已经下单。1 为已下单;0 为未下单&#39;,</span><br><span class="line">&#96;order_time&#96; string COMMENT &#39;下单时间&#39;</span><br><span class="line">  ) COMMENT &#39;加购事实表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;fact_cart_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">table_name&#x3D;fact_cart_info</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">id,</span><br><span class="line">user_id,</span><br><span class="line">sku_id,</span><br><span class="line">cart_price,</span><br><span class="line">sku_num,</span><br><span class="line">sku_name,</span><br><span class="line">from_unixtime(cast(create_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) create_time,</span><br><span class="line">from_unixtime(cast(operate_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) operate_time,</span><br><span class="line">is_ordered,</span><br><span class="line">from_unixtime(cast(order_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) order_time</span><br><span class="line">from ods.mall__cart_info</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="2797a2b5"></a></p><h4 id="9-2-11-收藏事实表-周期型快照事实表-全量"><a href="#9-2-11-收藏事实表-周期型快照事实表-全量" class="headerlink" title="9.2.11 收藏事实表(周期型快照事实表-全量)"></a>9.2.11 收藏事实表(周期型快照事实表-全量)</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__fact_favor_info</span><br><span class="line">    </span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__fact_favor_info&#96;(</span><br><span class="line">&#96;id&#96; string COMMENT &#39;编号&#39;,</span><br><span class="line">&#96;user_id&#96; string COMMENT &#39;用户 id&#39;,</span><br><span class="line">&#96;sku_id&#96; string COMMENT &#39;skuid&#39;,</span><br><span class="line">&#96;spu_id&#96; string COMMENT &#39;spuid&#39;,</span><br><span class="line">&#96;is_cancel&#96; string COMMENT &#39;是否取消&#39;,</span><br><span class="line">&#96;create_time&#96; string COMMENT &#39;收藏时间&#39;,</span><br><span class="line">&#96;cancel_time&#96; string COMMENT &#39;取消时间&#39;</span><br><span class="line">  ) COMMENT &#39;收藏事实表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;fact_favor_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">table_name&#x3D;fact_favor_info</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">id,</span><br><span class="line">user_id,</span><br><span class="line">sku_id,</span><br><span class="line">spu_id,</span><br><span class="line">is_cancel,</span><br><span class="line">from_unixtime(cast(create_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) create_time,</span><br><span class="line">from_unixtime(cast(cancel_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;) cancel_time</span><br><span class="line">from ods.mall__favor_info</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="6f2874af"></a></p><h4 id="9-2-12-优惠券领用事实表-累积型快照事实表-新增及变化"><a href="#9-2-12-优惠券领用事实表-累积型快照事实表-新增及变化" class="headerlink" title="9.2.12 优惠券领用事实表(累积型快照事实表-新增及变化)"></a>9.2.12 优惠券领用事实表(累积型快照事实表-新增及变化)</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__fact_coupon_use</span><br><span class="line">    </span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__fact_coupon_use&#96;(</span><br><span class="line">&#96;&#96; string COMMENT &#39;编号&#39;,</span><br><span class="line">&#96;coupon_id&#96; string COMMENT &#39;优惠券 ID&#39;,</span><br><span class="line">&#96;user_id&#96; string COMMENT &#39;userid&#39;,</span><br><span class="line">&#96;order_id&#96; string COMMENT &#39;订单 id&#39;,</span><br><span class="line">&#96;coupon_status&#96; string COMMENT &#39;优惠券状态&#39;,</span><br><span class="line">&#96;get_time&#96; string COMMENT &#39;领取时间&#39;,</span><br><span class="line">&#96;using_time&#96; string COMMENT &#39;使用时间(下单)&#39;,</span><br><span class="line">&#96;used_time&#96; string COMMENT &#39;使用时间(支付)&#39;</span><br><span class="line">  ) COMMENT &#39;优惠券领用事实表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;fact_coupon_use&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure><blockquote><p>dt 是按照优惠卷领用时间 get_time 做为分区。<br>get_time 为领用时间，领用过后数据就需要存在，然后在下单和支付的时候叠加更新时间</p></blockquote></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445877-2b94e8bb-aec2-445a-bea1-1e80c6f64ace.png#align=left&display=inline&height=836&margin=%5Bobject%20Object%5D&originHeight=836&originWidth=1647&size=0&status=done&style=none&width=1647" alt></p><ul><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">table_name&#x3D;fact_coupon_use</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">set hive.exec.dynamic.partition.mode&#x3D;nonstrict;</span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">if(new.id is null,old.id,new.id) id,</span><br><span class="line">if(new.coupon_id is null,old.coupon_id,new.coupon_id) coupon_id,</span><br><span class="line">if(new.user_id is null,old.user_id,new.user_id) user_id,</span><br><span class="line">if(new.order_id is null,old.order_id,new.order_id) order_id,</span><br><span class="line">if(new.coupon_status is null,old.coupon_status,new.coupon_status) coupon_status,</span><br><span class="line">from_unixtime(cast(if(new.get_time is null,old.get_time,new.get_time)&#x2F;1000 as bigint),&#39;yyyy-MM-dd&#39;) get_time,</span><br><span class="line">from_unixtime(cast(if(new.using_time is null,old.using_time,new.using_time)&#x2F;1000 as bigint),&#39;yyyy-MM-dd&#39;) using_time,</span><br><span class="line">from_unixtime(cast(if(new.used_time is null,old.used_time,new.used_time)&#x2F;1000 as bigint),&#39;yyyy-MM-dd&#39;),</span><br><span class="line">from_unixtime(cast(if(new.get_time is null,old.get_time,new.get_time)&#x2F;1000 as bigint),&#39;yyyy-MM-dd&#39;) </span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">id,</span><br><span class="line">coupon_id,</span><br><span class="line">user_id,</span><br><span class="line">order_id,</span><br><span class="line">coupon_status,</span><br><span class="line">get_time,</span><br><span class="line">using_time,</span><br><span class="line">used_time</span><br><span class="line">from dwd.mall__fact_coupon_use</span><br><span class="line">where dt in</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">from_unixtime(cast(get_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd&#39;)</span><br><span class="line">from ods.mall__coupon_use</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)</span><br><span class="line">)old</span><br><span class="line">full outer join</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">id,</span><br><span class="line">coupon_id,</span><br><span class="line">user_id,</span><br><span class="line">order_id,</span><br><span class="line">coupon_status,</span><br><span class="line">get_time,</span><br><span class="line">using_time,</span><br><span class="line">used_time</span><br><span class="line">from ods.mall__coupon_use</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)new</span><br><span class="line">on old.id&#x3D;new.id;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="3f232bd5"></a></p><h4 id="9-2-13-订单事实表-累积型快照事实表-新增及变化"><a href="#9-2-13-订单事实表-累积型快照事实表-新增及变化" class="headerlink" title="9.2.13 订单事实表(累积型快照事实表-新增及变化)"></a>9.2.13 订单事实表(累积型快照事实表-新增及变化)</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwd.mall__fact_order_info</span><br><span class="line">    </span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwd.mall__fact_order_info&#96;(</span><br><span class="line">&#96;id&#96; string COMMENT &#39;订单编号&#39;,</span><br><span class="line">&#96;order_status&#96; string COMMENT &#39;订单状态&#39;,</span><br><span class="line">&#96;user_id&#96; string COMMENT &#39;用户 id&#39;,</span><br><span class="line">&#96;out_trade_no&#96; string COMMENT &#39;支付流水号&#39;,</span><br><span class="line">&#96;create_time&#96; string COMMENT &#39;创建时间(未支付状态)&#39;,</span><br><span class="line">&#96;payment_time&#96; string COMMENT &#39;支付时间(已支付状态)&#39;,</span><br><span class="line">&#96;cancel_time&#96; string COMMENT &#39;取消时间(已取消状态)&#39;,</span><br><span class="line">&#96;finish_time&#96; string COMMENT &#39;完成时间(已完成状态)&#39;,</span><br><span class="line">&#96;refund_time&#96; string COMMENT &#39;退款时间(退款中状态)&#39;,</span><br><span class="line">&#96;refund_finish_time&#96; string COMMENT &#39;退款完成时间(退款完成状态)&#39;,</span><br><span class="line">&#96;province_id&#96; string COMMENT &#39;省份 ID&#39;,</span><br><span class="line">&#96;activity_id&#96; string COMMENT &#39;活动 ID&#39;,</span><br><span class="line">&#96;original_total_amount&#96; string COMMENT &#39;原价金额&#39;,</span><br><span class="line">&#96;benefit_reduce_amount&#96; string COMMENT &#39;优惠金额&#39;,</span><br><span class="line">&#96;feight_fee&#96; string COMMENT &#39;运费&#39;,</span><br><span class="line">&#96;final_total_amount&#96; decimal(10,2) COMMENT &#39;订单金额&#39;</span><br><span class="line">  ) COMMENT &#39;订单事实表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwd&#x2F;mall&#x2F;fact_order_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445836-498738cf-a65f-4127-af18-9a1661eda52d.png#align=left&display=inline&height=522&margin=%5Bobject%20Object%5D&originHeight=522&originWidth=987&size=0&status=done&style=none&width=987" alt></p></li><li><p>数据导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwd</span><br><span class="line">table_name&#x3D;fact_order_info</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">if(new.id is null,old.id,new.id),</span><br><span class="line">if(new.order_status is null,old.order_status,new.order_status),</span><br><span class="line">if(new.user_id is null,old.user_id,new.user_id),</span><br><span class="line">if(new.out_trade_no is null,old.out_trade_no,new.out_trade_no),</span><br><span class="line">if(new.tms[&#39;1001&#39;] is null,from_unixtime(cast(old.create_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;),new.tms[&#39;1001&#39;]),--1001 对应未支付状态</span><br><span class="line">if(new.tms[&#39;1002&#39;] is null,from_unixtime(cast(old.payment_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;),new.tms[&#39;1002&#39;]),</span><br><span class="line">if(new.tms[&#39;1003&#39;] is null,from_unixtime(cast(old.cancel_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;),new.tms[&#39;1003&#39;]),</span><br><span class="line">if(new.tms[&#39;1004&#39;] is null,from_unixtime(cast(old.finish_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;),new.tms[&#39;1004&#39;]),</span><br><span class="line">if(new.tms[&#39;1005&#39;] is null,from_unixtime(cast(old.refund_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;),new.tms[&#39;1005&#39;]),</span><br><span class="line">if(new.tms[&#39;1006&#39;] is null,from_unixtime(cast(old.refund_finish_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd HH:mm:ss&#39;),new.tms[&#39;1006&#39;]),</span><br><span class="line">if(new.province_id is null,old.province_id,new.province_id),</span><br><span class="line">if(new.activity_id is null,old.activity_id,new.activity_id),</span><br><span class="line">if(new.original_total_amount is null,old.original_total_amount,new.original_total_amount),</span><br><span class="line">if(new.benefit_reduce_amount is null,old.benefit_reduce_amount,new.benefit_reduce_amount),</span><br><span class="line">if(new.feight_fee is null,old.feight_fee,new.feight_fee),</span><br><span class="line">if(new.final_total_amount is null,old.final_total_amount,new.final_total_amount)</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">id,</span><br><span class="line">order_status,</span><br><span class="line">user_id,</span><br><span class="line">out_trade_no,</span><br><span class="line">create_time,</span><br><span class="line">payment_time,</span><br><span class="line">cancel_time,</span><br><span class="line">finish_time,</span><br><span class="line">refund_time,</span><br><span class="line">refund_finish_time,</span><br><span class="line">province_id,</span><br><span class="line">activity_id,</span><br><span class="line">original_total_amount,</span><br><span class="line">benefit_reduce_amount,</span><br><span class="line">feight_fee,</span><br><span class="line">final_total_amount</span><br><span class="line">from dwd.mall__fact_order_info</span><br><span class="line">where dt in </span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">from_unixtime(cast(create_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd&#39;)</span><br><span class="line">from ods.mall__order_info</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)</span><br><span class="line">)old</span><br><span class="line">full outer join</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">info.id,</span><br><span class="line">info.order_status,</span><br><span class="line">info.user_id,</span><br><span class="line">info.out_trade_no,</span><br><span class="line">info.province_id,</span><br><span class="line">act.activity_id,</span><br><span class="line">log.tms,</span><br><span class="line">info.original_total_amount,</span><br><span class="line">info.benefit_reduce_amount,</span><br><span class="line">info.feight_fee,</span><br><span class="line">info.final_total_amount</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">order_id,</span><br><span class="line">str_to_map(concat_ws(&#39;,&#39;,collect_set(concat(order_status,&#39;&#x3D;&#39;,from_unixtime(cast(operate_time&#x2F;1000 as bigint),&#39;yyyy-MM-dd&#39;)))),&#39;,&#39;,&#39;&#x3D;&#39;)</span><br><span class="line">tms</span><br><span class="line">from ods.mall__order_status_log</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">group by order_id</span><br><span class="line">)log</span><br><span class="line">join</span><br><span class="line">(</span><br><span class="line">select * from ods.mall__order_info where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)info</span><br><span class="line">on log.order_id&#x3D;info.id</span><br><span class="line">left join</span><br><span class="line">(</span><br><span class="line">select * from ods.mall__activity_order where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)act</span><br><span class="line">on log.order_id&#x3D;act.order_id</span><br><span class="line">)new</span><br><span class="line">on old.id&#x3D;new.id;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="blogTitle37"></a></p><h2 id="10-DWS层构建"><a href="#10-DWS层构建" class="headerlink" title="10 DWS层构建"></a>10 DWS层构建</h2><blockquote><p>不在进行压缩处理，因为压缩对于硬盘是好的，但是对于CPU计算是差的，对于DWS层的表，会被经常使用，那么讲究的是计算效率，此层主要处理每日主题行为</p></blockquote></li></ul><p><a name="blogTitle38"></a></p><h3 id="10-1-每日设备行为-用户行为"><a href="#10-1-每日设备行为-用户行为" class="headerlink" title="10.1 每日设备行为(用户行为)"></a>10.1 每日设备行为(用户行为)</h3><ul><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dws.mall__uv_detail_daycount</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dws.mall__uv_detail_daycount&#96;(</span><br><span class="line">&#96;mid_id&#96; string COMMENT &#39;设备唯一标识&#39;,</span><br><span class="line">&#96;user_id&#96; string COMMENT &#39;用户标识&#39;,</span><br><span class="line">&#96;version_code&#96; string COMMENT &#39;程序版本号&#39;,</span><br><span class="line">&#96;version_name&#96; string COMMENT &#39;程序版本名&#39;,</span><br><span class="line">&#96;lang&#96; string COMMENT &#39;系统语言&#39;,</span><br><span class="line">&#96;source&#96; string COMMENT &#39;渠道号&#39;,</span><br><span class="line">&#96;os&#96; string COMMENT &#39;安卓系统版本&#39;,</span><br><span class="line">&#96;area&#96; string COMMENT &#39;区域&#39;,</span><br><span class="line">&#96;model&#96; string COMMENT &#39;手机型号&#39;,</span><br><span class="line">&#96;brand&#96; string COMMENT &#39;手机品牌&#39;,</span><br><span class="line">&#96;sdk_version&#96; string COMMENT &#39;sdkVersion&#39;,</span><br><span class="line">&#96;gmail&#96; string COMMENT &#39;gmail&#39;,</span><br><span class="line">&#96;height_width&#96; string COMMENT &#39;屏幕宽高&#39;,</span><br><span class="line">&#96;app_time&#96; string COMMENT &#39;客户端日志产生时的时间&#39;,</span><br><span class="line">&#96;network&#96; string COMMENT &#39;网络模式&#39;,</span><br><span class="line">&#96;lng&#96; string COMMENT &#39;经度&#39;,</span><br><span class="line">&#96;lat&#96; string COMMENT &#39;纬度&#39;,</span><br><span class="line">&#96;login_count&#96; bigint COMMENT &#39;活跃次数&#39;</span><br><span class="line">  ) COMMENT &#39;每日设备行为表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dws&#x2F;mall&#x2F;uv_detail_daycount&#x2F;&#39;</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dws</span><br><span class="line">table_name&#x3D;uv_detail_daycount</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">PARTITION (dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">mid_id,</span><br><span class="line">concat_ws(&#39;|&#39;, collect_set(user_id)) user_id,</span><br><span class="line">concat_ws(&#39;|&#39;, collect_set(version_code)) version_code,</span><br><span class="line">concat_ws(&#39;|&#39;, collect_set(version_name)) version_name,</span><br><span class="line">concat_ws(&#39;|&#39;, collect_set(lang))lang,</span><br><span class="line">concat_ws(&#39;|&#39;, collect_set(source)) source,</span><br><span class="line">concat_ws(&#39;|&#39;, collect_set(os)) os,</span><br><span class="line">concat_ws(&#39;|&#39;, collect_set(area)) area,</span><br><span class="line">concat_ws(&#39;|&#39;, collect_set(model)) model,</span><br><span class="line">concat_ws(&#39;|&#39;, collect_set(brand)) brand,</span><br><span class="line">concat_ws(&#39;|&#39;, collect_set(sdk_version)) sdk_version,</span><br><span class="line">concat_ws(&#39;|&#39;, collect_set(gmail)) gmail,</span><br><span class="line">concat_ws(&#39;|&#39;, collect_set(height_width)) height_width,</span><br><span class="line">concat_ws(&#39;|&#39;, collect_set(app_time)) app_time,</span><br><span class="line">concat_ws(&#39;|&#39;, collect_set(network)) network,</span><br><span class="line">concat_ws(&#39;|&#39;, collect_set(lng)) lng,</span><br><span class="line">concat_ws(&#39;|&#39;, collect_set(lat)) lat,</span><br><span class="line">count(*) login_count</span><br><span class="line">from dwd.mall__start_log</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">group by mid_id;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="blogTitle39"></a></p><h3 id="10-2-每日会员行为-业务"><a href="#10-2-每日会员行为-业务" class="headerlink" title="10.2 每日会员行为(业务)"></a>10.2 每日会员行为(业务)</h3></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dws.mall__user_action_daycount</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dws.mall__user_action_daycount&#96;(</span><br><span class="line">user_id string comment &#39;用户 id&#39;,</span><br><span class="line">login_count bigint comment &#39;登录次数&#39;,</span><br><span class="line">cart_count bigint comment &#39;加入购物车次数&#39;,</span><br><span class="line">cart_amount double comment &#39;加入购物车金额&#39;,</span><br><span class="line">order_count bigint comment &#39;下单次数&#39;,</span><br><span class="line">order_amount decimal(16,2) comment &#39;下单金额&#39;,</span><br><span class="line">payment_count bigint comment &#39;支付次数&#39;,</span><br><span class="line">payment_amount decimal(16,2) comment &#39;支付金额&#39;</span><br><span class="line">  ) COMMENT &#39;每日会员行为表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dws&#x2F;mall&#x2F;user_action_daycount&#x2F;&#39;</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dws</span><br><span class="line">table_name&#x3D;user_action_daycount</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">with</span><br><span class="line">tmp_login as</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">user_id,</span><br><span class="line">count(*) login_count</span><br><span class="line">from dwd.mall__start_log</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">and user_id is not null</span><br><span class="line">group by user_id</span><br><span class="line">),</span><br><span class="line">tmp_cart as</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">user_id,</span><br><span class="line">count(*) cart_count,</span><br><span class="line">sum(cart_price*sku_num) cart_amount</span><br><span class="line">from dwd.mall__fact_cart_info</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">and user_id is not null</span><br><span class="line">and date_format(create_time,&#39;yyyy-MM-dd&#39;)&#x3D;&#39;$db_date&#39;</span><br><span class="line">group by user_id</span><br><span class="line">),</span><br><span class="line">tmp_order as</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">user_id,</span><br><span class="line">count(*) order_count,</span><br><span class="line">sum(final_total_amount) order_amount</span><br><span class="line">from dwd.mall__fact_order_info</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">group by user_id</span><br><span class="line">) ,</span><br><span class="line">tmp_payment as</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">user_id,</span><br><span class="line">count(*) payment_count,</span><br><span class="line">sum(payment_amount) payment_amount</span><br><span class="line">from dwd.mall__fact_payment_info</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">group by user_id</span><br><span class="line">)</span><br><span class="line">insert overwrite table $hive_table_name partition(dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">user_actions.user_id,</span><br><span class="line">sum(user_actions.login_count),</span><br><span class="line">sum(user_actions.cart_count),</span><br><span class="line">sum(user_actions.cart_amount),</span><br><span class="line">sum(user_actions.order_count),</span><br><span class="line">sum(user_actions.order_amount),</span><br><span class="line">sum(user_actions.payment_count),</span><br><span class="line">sum(user_actions.payment_amount)</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">user_id,</span><br><span class="line">login_count,</span><br><span class="line">0 cart_count,</span><br><span class="line">0 cart_amount,</span><br><span class="line">0 order_count,</span><br><span class="line">0 order_amount,</span><br><span class="line">0 payment_count,</span><br><span class="line">0 payment_amount</span><br><span class="line">from</span><br><span class="line">tmp_login</span><br><span class="line">union all</span><br><span class="line">select</span><br><span class="line">user_id,</span><br><span class="line">0 login_count,</span><br><span class="line">cart_count,</span><br><span class="line">cart_amount,</span><br><span class="line">0 order_count,</span><br><span class="line">0 order_amount,</span><br><span class="line">0 payment_count,</span><br><span class="line">0 payment_amount</span><br><span class="line">from</span><br><span class="line">tmp_cart</span><br><span class="line">union all</span><br><span class="line">select</span><br><span class="line">user_id,</span><br><span class="line">0 login_count,</span><br><span class="line">0 cart_count,</span><br><span class="line">0 cart_amount,</span><br><span class="line">order_count,</span><br><span class="line">order_amount,</span><br><span class="line">0 payment_count,</span><br><span class="line">0 payment_amount</span><br><span class="line">from tmp_order</span><br><span class="line">union all</span><br><span class="line">select</span><br><span class="line">user_id,</span><br><span class="line">0 login_count,</span><br><span class="line">0 cart_count,</span><br><span class="line">0 cart_amount,</span><br><span class="line">0 order_count,</span><br><span class="line">0 order_amount,</span><br><span class="line">payment_count,</span><br><span class="line">payment_amount</span><br><span class="line">from tmp_payment</span><br><span class="line">) user_actions</span><br><span class="line">group by user_id;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="blogTitle40"></a></p><h3 id="10-3-每日商品行为-业务"><a href="#10-3-每日商品行为-业务" class="headerlink" title="10.3 每日商品行为(业务)"></a>10.3 每日商品行为(业务)</h3></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dws.mall__sku_action_daycount</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dws.mall__sku_action_daycount&#96;(</span><br><span class="line">sku_id string comment &#39;sku_id&#39;,</span><br><span class="line">order_count bigint comment &#39;被下单次数&#39;,</span><br><span class="line">order_num bigint comment &#39;被下单件数&#39;,</span><br><span class="line">order_amount decimal(16,2) comment &#39;被下单金额&#39;,</span><br><span class="line">payment_count bigint comment &#39;被支付次数&#39;,</span><br><span class="line">payment_num bigint comment &#39;被支付件数&#39;,</span><br><span class="line">payment_amount decimal(16,2) comment &#39;被支付金额&#39;,</span><br><span class="line">refund_count bigint comment &#39;被退款次数&#39;,</span><br><span class="line">refund_num bigint comment &#39;被退款件数&#39;,</span><br><span class="line">refund_amount decimal(16,2) comment &#39;被退款金额&#39;,</span><br><span class="line">cart_count bigint comment &#39;被加入购物车次数&#39;,</span><br><span class="line">cart_num bigint comment &#39;被加入购物车件数&#39;,</span><br><span class="line">favor_count bigint comment &#39;被收藏次数&#39;,</span><br><span class="line">appraise_good_count bigint comment &#39;好评数&#39;,</span><br><span class="line">appraise_mid_count bigint comment &#39;中评数&#39;,</span><br><span class="line">appraise_bad_count bigint comment &#39;差评数&#39;,</span><br><span class="line">appraise_default_count bigint comment &#39;默认评价数&#39;</span><br><span class="line">  ) COMMENT &#39;每日商品行为表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dws&#x2F;mall&#x2F;sku_action_daycount&#x2F;&#39;</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dws</span><br><span class="line">table_name&#x3D;sku_action_daycount</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">with</span><br><span class="line">tmp_order as</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">cast(sku_id as string) sku_id,</span><br><span class="line">count(*) order_count,</span><br><span class="line">sum(sku_num) order_num,</span><br><span class="line">sum(total_amount) order_amount</span><br><span class="line">from dwd.mall__fact_order_detail</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">group by sku_id</span><br><span class="line">),</span><br><span class="line">tmp_payment as</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">cast(sku_id as string) sku_id,</span><br><span class="line">count(*) payment_count,</span><br><span class="line">sum(sku_num) payment_num,</span><br><span class="line">sum(total_amount) payment_amount</span><br><span class="line">from dwd.mall__fact_order_detail</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">and order_id in</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">id</span><br><span class="line">from dwd.mall__fact_order_info</span><br><span class="line">where (dt&#x3D;&#39;$db_date&#39; or dt&#x3D;date_add(&#39;$db_date&#39;,-1))</span><br><span class="line">and date_format(payment_time,&#39;yyyy-MM-dd&#39;)&#x3D;&#39;$db_date&#39;</span><br><span class="line">)</span><br><span class="line">group by sku_id</span><br><span class="line">),</span><br><span class="line">tmp_refund as</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">cast(sku_id as string) sku_id,</span><br><span class="line">count(*) refund_count,</span><br><span class="line">sum(refund_num) refund_num,</span><br><span class="line">sum(refund_amount) refund_amount</span><br><span class="line">from dwd.mall__fact_order_refund_info</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">group by sku_id</span><br><span class="line">),</span><br><span class="line">tmp_cart as</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">cast(sku_id as string) sku_id,</span><br><span class="line">count(*) cart_count,</span><br><span class="line">sum(sku_num) cart_num</span><br><span class="line">from dwd.mall__fact_cart_info</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">and date_format(create_time,&#39;yyyy-MM-dd&#39;)&#x3D;&#39;$db_date&#39;</span><br><span class="line">group by sku_id</span><br><span class="line">),</span><br><span class="line">tmp_favor as</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">cast(sku_id as string) sku_id,</span><br><span class="line">count(*) favor_count</span><br><span class="line">from dwd.mall__fact_favor_info</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">and date_format(create_time,&#39;yyyy-MM-dd&#39;)&#x3D;&#39;$db_date&#39;</span><br><span class="line">group by sku_id</span><br><span class="line">),</span><br><span class="line">tmp_appraise as</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">cast(sku_id as string) sku_id,</span><br><span class="line">sum(if(appraise&#x3D;&#39;1201&#39;,1,0)) appraise_good_count,</span><br><span class="line">sum(if(appraise&#x3D;&#39;1202&#39;,1,0)) appraise_mid_count,</span><br><span class="line">sum(if(appraise&#x3D;&#39;1203&#39;,1,0)) appraise_bad_count,</span><br><span class="line">sum(if(appraise&#x3D;&#39;1204&#39;,1,0)) appraise_default_count</span><br><span class="line">from dwd.mall__fact_comment_info</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">group by sku_id</span><br><span class="line">)</span><br><span class="line">insert overwrite table $hive_table_name partition(dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">sku_id,</span><br><span class="line">sum(order_count),</span><br><span class="line">sum(order_num),</span><br><span class="line">sum(order_amount),</span><br><span class="line">sum(payment_count),</span><br><span class="line">sum(payment_num),</span><br><span class="line">sum(payment_amount),</span><br><span class="line">sum(refund_count),</span><br><span class="line">sum(refund_num),</span><br><span class="line">sum(refund_amount),</span><br><span class="line">sum(cart_count),</span><br><span class="line">sum(cart_num),</span><br><span class="line">sum(favor_count),</span><br><span class="line">sum(appraise_good_count),</span><br><span class="line">sum(appraise_mid_count),</span><br><span class="line">sum(appraise_bad_count),</span><br><span class="line">sum(appraise_default_count)</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">sku_id,</span><br><span class="line">order_count,</span><br><span class="line">order_num,</span><br><span class="line">order_amount,</span><br><span class="line">0 payment_count,</span><br><span class="line">0 payment_num,</span><br><span class="line">0 payment_amount,</span><br><span class="line">0 refund_count,</span><br><span class="line">0 refund_num,</span><br><span class="line">0 refund_amount,</span><br><span class="line">0 cart_count,</span><br><span class="line">0 cart_num,</span><br><span class="line">0 favor_count,</span><br><span class="line">0 appraise_good_count,</span><br><span class="line">0 appraise_mid_count,</span><br><span class="line">0 appraise_bad_count,</span><br><span class="line">0 appraise_default_count</span><br><span class="line">from tmp_order</span><br><span class="line">union all</span><br><span class="line">select</span><br><span class="line">sku_id,</span><br><span class="line">0 order_count,</span><br><span class="line">0 order_num,</span><br><span class="line">0 order_amount,</span><br><span class="line">payment_count,</span><br><span class="line">payment_num,</span><br><span class="line">payment_amount,</span><br><span class="line">0 refund_count,</span><br><span class="line">0 refund_num,</span><br><span class="line">0 refund_amount,</span><br><span class="line">0 cart_count,</span><br><span class="line">0 cart_num,</span><br><span class="line">0 favor_count,</span><br><span class="line">0 appraise_good_count,</span><br><span class="line">0 appraise_mid_count,</span><br><span class="line">0 appraise_bad_count,</span><br><span class="line">0 appraise_default_count</span><br><span class="line">from tmp_payment</span><br><span class="line">union all</span><br><span class="line">select</span><br><span class="line">sku_id,</span><br><span class="line">0 order_count,</span><br><span class="line">0 order_num,</span><br><span class="line">0 order_amount,</span><br><span class="line">0 payment_count,</span><br><span class="line">0 payment_num,</span><br><span class="line">0 payment_amount,</span><br><span class="line">refund_count,</span><br><span class="line">refund_num,</span><br><span class="line">refund_amount,</span><br><span class="line">0 cart_count,</span><br><span class="line">0 cart_num,</span><br><span class="line">0 favor_count,</span><br><span class="line">0 appraise_good_count,</span><br><span class="line">0 appraise_mid_count,</span><br><span class="line">0 appraise_bad_count,</span><br><span class="line">0 appraise_default_count</span><br><span class="line">from tmp_refund</span><br><span class="line">union all</span><br><span class="line">select</span><br><span class="line">sku_id,</span><br><span class="line">0 order_count,</span><br><span class="line">0 order_num,</span><br><span class="line">0 order_amount,</span><br><span class="line">0 payment_count,</span><br><span class="line">0 payment_num,</span><br><span class="line">0 payment_amount,</span><br><span class="line">0 refund_count,</span><br><span class="line">0 refund_num,</span><br><span class="line">0 refund_amount,</span><br><span class="line">cart_count,</span><br><span class="line">cart_num,</span><br><span class="line">0 favor_count,</span><br><span class="line">0 appraise_good_count,</span><br><span class="line">0 appraise_mid_count,</span><br><span class="line">0 appraise_bad_count,</span><br><span class="line">0 appraise_default_count</span><br><span class="line">from tmp_cart</span><br><span class="line">union all</span><br><span class="line">select</span><br><span class="line">sku_id,</span><br><span class="line">0 order_count,</span><br><span class="line">0 order_num,</span><br><span class="line">0 order_amount,</span><br><span class="line">0 payment_count,</span><br><span class="line">0 payment_num,</span><br><span class="line">0 payment_amount,</span><br><span class="line">0 refund_count,</span><br><span class="line">0 refund_num,</span><br><span class="line">0 refund_amount,</span><br><span class="line">0 cart_count,</span><br><span class="line">0 cart_num,</span><br><span class="line">favor_count,</span><br><span class="line">0 appraise_good_count,</span><br><span class="line">0 appraise_mid_count,</span><br><span class="line">0 appraise_bad_count,</span><br><span class="line">0 appraise_default_count</span><br><span class="line">from tmp_favor</span><br><span class="line">union all</span><br><span class="line">select</span><br><span class="line">sku_id,</span><br><span class="line">0 order_count,</span><br><span class="line">0 order_num,</span><br><span class="line">0 order_amount,</span><br><span class="line">0 payment_count,</span><br><span class="line">0 payment_num,</span><br><span class="line">0 payment_amount,</span><br><span class="line">0 refund_count,</span><br><span class="line">0 refund_num,</span><br><span class="line">0 refund_amount,</span><br><span class="line">0 cart_count,</span><br><span class="line">0 cart_num,</span><br><span class="line">0 favor_count,</span><br><span class="line">appraise_good_count,</span><br><span class="line">appraise_mid_count,</span><br><span class="line">appraise_bad_count,</span><br><span class="line">appraise_default_count</span><br><span class="line">from tmp_appraise</span><br><span class="line">)tmp</span><br><span class="line">group by sku_id;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="blogTitle41"></a></p><h3 id="10-4-每日优惠券统计-业务"><a href="#10-4-每日优惠券统计-业务" class="headerlink" title="10.4 每日优惠券统计(业务)"></a>10.4 每日优惠券统计(业务)</h3></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dws.mall__coupon_use_daycount</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dws.mall__coupon_use_daycount&#96;(</span><br><span class="line">&#96;coupon_id&#96; string COMMENT &#39;优惠券 ID&#39;,</span><br><span class="line">&#96;coupon_name&#96; string COMMENT &#39;购物券名称&#39;,</span><br><span class="line">&#96;coupon_type&#96; string COMMENT &#39;购物券类型 1 现金券 2 折扣券 3 满减券 4 满件打折券&#39;,</span><br><span class="line">&#96;condition_amount&#96; string COMMENT &#39;满额数&#39;,</span><br><span class="line">&#96;condition_num&#96; string COMMENT &#39;满件数&#39;,</span><br><span class="line">&#96;activity_id&#96; string COMMENT &#39;活动编号&#39;,</span><br><span class="line">&#96;benefit_amount&#96; string COMMENT &#39;减金额&#39;,</span><br><span class="line">&#96;benefit_discount&#96; string COMMENT &#39;折扣&#39;,</span><br><span class="line">&#96;create_time&#96; string COMMENT &#39;创建时间&#39;,</span><br><span class="line">&#96;range_type&#96; string COMMENT &#39;范围类型 1、商品 2、品类 3、品牌&#39;,</span><br><span class="line">&#96;spu_id&#96; string COMMENT &#39;商品 id&#39;,</span><br><span class="line">&#96;tm_id&#96; string COMMENT &#39;品牌 id&#39;,</span><br><span class="line">&#96;category3_id&#96; string COMMENT &#39;品类 id&#39;,</span><br><span class="line">&#96;limit_num&#96; string COMMENT &#39;最多领用次数&#39;,</span><br><span class="line">&#96;get_count&#96; bigint COMMENT &#39;领用次数&#39;,</span><br><span class="line">&#96;using_count&#96; bigint COMMENT &#39;使用(下单)次数&#39;,</span><br><span class="line">&#96;used_count&#96; bigint COMMENT &#39;使用(支付)次数&#39;</span><br><span class="line">  ) COMMENT &#39;每日优惠券统计表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dws&#x2F;mall&#x2F;coupon_use_daycount&#x2F;&#39;</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dws</span><br><span class="line">table_name&#x3D;coupon_use_daycount</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name partition(dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">cu.coupon_id,</span><br><span class="line">ci.coupon_name,</span><br><span class="line">ci.coupon_type,</span><br><span class="line">ci.condition_amount,</span><br><span class="line">ci.condition_num,</span><br><span class="line">ci.activity_id,</span><br><span class="line">ci.benefit_amount,</span><br><span class="line">ci.benefit_discount,</span><br><span class="line">ci.create_time,</span><br><span class="line">ci.range_type,</span><br><span class="line">ci.spu_id,</span><br><span class="line">ci.tm_id,</span><br><span class="line">ci.category3_id,</span><br><span class="line">ci.limit_num,</span><br><span class="line">cu.get_count,</span><br><span class="line">cu.using_count,</span><br><span class="line">cu.used_count</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">coupon_id,</span><br><span class="line">sum(if(date_format(get_time,&#39;yyyy-MM-dd&#39;)&#x3D;&#39;$db_date&#39;,1,0))</span><br><span class="line">get_count,</span><br><span class="line">sum(if(date_format(using_time,&#39;yyyy-MM-dd&#39;)&#x3D;&#39;$db_date&#39;,1,0))</span><br><span class="line">using_count,</span><br><span class="line">sum(if(date_format(used_time,&#39;yyyy-MM-dd&#39;)&#x3D;&#39;$db_date&#39;,1,0))</span><br><span class="line">used_count</span><br><span class="line">from dwd.mall__fact_coupon_use</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">group by coupon_id</span><br><span class="line">)cu</span><br><span class="line">left join</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">*</span><br><span class="line">from dwd.mall__dim_coupon_info</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)ci on cu.coupon_id&#x3D;ci.id;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="blogTitle42"></a></p><h3 id="10-5-每日活动统计-业务"><a href="#10-5-每日活动统计-业务" class="headerlink" title="10.5 每日活动统计(业务)"></a>10.5 每日活动统计(业务)</h3></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dws.mall__activity_info_daycount</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dws.mall__activity_info_daycount&#96;(</span><br><span class="line">&#96;id&#96; string COMMENT &#39;编号&#39;,</span><br><span class="line">&#96;activity_name&#96; string COMMENT &#39;活动名称&#39;,</span><br><span class="line">&#96;activity_type&#96; string COMMENT &#39;活动类型&#39;,</span><br><span class="line">&#96;start_time&#96; string COMMENT &#39;开始时间&#39;,</span><br><span class="line">&#96;end_time&#96; string COMMENT &#39;结束时间&#39;,</span><br><span class="line">&#96;create_time&#96; string COMMENT &#39;创建时间&#39;,</span><br><span class="line">&#96;order_count&#96; bigint COMMENT &#39;下单次数&#39;,</span><br><span class="line">&#96;payment_count&#96; bigint COMMENT &#39;支付次数&#39;</span><br><span class="line">  ) COMMENT &#39;每日活动统计表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dws&#x2F;mall&#x2F;activity_info_daycount&#x2F;&#39;</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dws</span><br><span class="line">table_name&#x3D;activity_info_daycount</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name partition(dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">oi.activity_id,</span><br><span class="line">ai.activity_name,</span><br><span class="line">ai.activity_type,</span><br><span class="line">ai.start_time,</span><br><span class="line">ai.end_time,</span><br><span class="line">ai.create_time,</span><br><span class="line">oi.order_count,</span><br><span class="line">oi.payment_count</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">activity_id,</span><br><span class="line">sum(if(date_format(create_time,&#39;yyyy-MM-dd&#39;)&#x3D;&#39;$db_date&#39;,1,0))</span><br><span class="line">order_count,</span><br><span class="line">sum(if(date_format(payment_time,&#39;yyyy-MM-dd&#39;)&#x3D;&#39;$db_date&#39;,1,0))</span><br><span class="line">payment_count</span><br><span class="line">from dwd.mall__fact_order_info</span><br><span class="line">where (dt&#x3D;&#39;$db_date&#39; or dt&#x3D;date_add(&#39;$db_date&#39;,-1))</span><br><span class="line">and activity_id is not null</span><br><span class="line">group by activity_id</span><br><span class="line">)oi</span><br><span class="line">join</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">*</span><br><span class="line">from dwd.mall__dim_activity_info</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)ai</span><br><span class="line">on oi.activity_id&#x3D;ai.id;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="blogTitle43"></a></p><h3 id="10-6-每日购买行为-业务"><a href="#10-6-每日购买行为-业务" class="headerlink" title="10.6 每日购买行为(业务)"></a>10.6 每日购买行为(业务)</h3></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dws.mall__sale_detail_daycount</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dws.mall__sale_detail_daycount&#96;(</span><br><span class="line">user_id string comment &#39;用户 id&#39;,</span><br><span class="line">sku_id string comment &#39;商品 id&#39;,</span><br><span class="line">user_gender string comment &#39;用户性别&#39;,</span><br><span class="line">user_age string comment &#39;用户年龄&#39;,</span><br><span class="line">user_level string comment &#39;用户等级&#39;,</span><br><span class="line">order_price decimal(10,2) comment &#39;商品价格&#39;,</span><br><span class="line">sku_name string comment &#39;商品名称&#39;,</span><br><span class="line">sku_tm_id string comment &#39;品牌 id&#39;,</span><br><span class="line">sku_category3_id string comment &#39;商品三级品类 id&#39;,</span><br><span class="line">sku_category2_id string comment &#39;商品二级品类 id&#39;,</span><br><span class="line">sku_category1_id string comment &#39;商品一级品类 id&#39;,</span><br><span class="line">sku_category3_name string comment &#39;商品三级品类名称&#39;,</span><br><span class="line">sku_category2_name string comment &#39;商品二级品类名称&#39;,</span><br><span class="line">sku_category1_name string comment &#39;商品一级品类名称&#39;,</span><br><span class="line">spu_id string comment &#39;商品 spu&#39;,</span><br><span class="line">sku_num int comment &#39;购买个数&#39;,</span><br><span class="line">order_count bigint comment &#39;当日下单单数&#39;,</span><br><span class="line">order_amount decimal(16,2) comment &#39;当日下单金额&#39;</span><br><span class="line">  ) COMMENT &#39;每日购买行为表&#39;</span><br><span class="line">PARTITIONED BY (</span><br><span class="line">  &#96;dt&#96; String COMMENT &#39;partition&#39;</span><br><span class="line">)</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dws&#x2F;mall&#x2F;sale_detail_daycount&#x2F;&#39;</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dws</span><br><span class="line">table_name&#x3D;sale_detail_daycount</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name partition(dt&#x3D;&#39;$db_date&#39;)</span><br><span class="line">select</span><br><span class="line">op.user_id,</span><br><span class="line">op.sku_id,</span><br><span class="line">ui.gender,</span><br><span class="line">months_between(&#39;$db_date&#39;, ui.birthday)&#x2F;12 age,</span><br><span class="line">ui.user_level,</span><br><span class="line">si.price,</span><br><span class="line">si.sku_name,</span><br><span class="line">si.tm_id,</span><br><span class="line">si.category3_id,</span><br><span class="line">si.category2_id,</span><br><span class="line">si.category1_id,</span><br><span class="line">si.category3_name,</span><br><span class="line">si.category2_name,</span><br><span class="line">si.category1_name,</span><br><span class="line">si.spu_id,</span><br><span class="line">op.sku_num,</span><br><span class="line">op.order_count,</span><br><span class="line">op.order_amount</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">user_id,</span><br><span class="line">sku_id,</span><br><span class="line">sum(sku_num) sku_num,</span><br><span class="line">count(*) order_count,</span><br><span class="line">sum(total_amount) order_amount</span><br><span class="line">from dwd.mall__fact_order_detail</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">group by user_id, sku_id</span><br><span class="line">)op</span><br><span class="line">join</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">*</span><br><span class="line">from dwd.mall__dim_user_info_his</span><br><span class="line">where end_date&#x3D;&#39;9999-99-99&#39;</span><br><span class="line">)ui on op.user_id &#x3D; ui.id</span><br><span class="line">join</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">*</span><br><span class="line">from dwd.mall__dim_sku_info</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)si on op.sku_id &#x3D; si.id;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="blogTitle44"></a></p><h2 id="11-DWT层构建"><a href="#11-DWT层构建" class="headerlink" title="11 DWT层构建"></a>11 DWT层构建</h2><blockquote><p>此层主要针对dws层每日数据进行汇总，不建立分区，不压缩，每日进行数据覆盖</p></blockquote></li></ul><p><a name="blogTitle45"></a></p><h3 id="11-1-设备主题宽表"><a href="#11-1-设备主题宽表" class="headerlink" title="11.1 设备主题宽表"></a>11.1 设备主题宽表</h3><ul><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwt.mall__uv_topic</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwt.mall__uv_topic&#96;(</span><br><span class="line">&#96;mid_id&#96; string COMMENT &#39;设备唯一标识&#39;,</span><br><span class="line">&#96;user_id&#96; string COMMENT &#39;用户标识&#39;,</span><br><span class="line">&#96;version_code&#96; string COMMENT &#39;程序版本号&#39;,</span><br><span class="line">&#96;version_name&#96; string COMMENT &#39;程序版本名&#39;,</span><br><span class="line">&#96;lang&#96; string COMMENT &#39;系统语言&#39;,</span><br><span class="line">&#96;source&#96; string COMMENT &#39;渠道号&#39;,</span><br><span class="line">&#96;os&#96; string COMMENT &#39;安卓系统版本&#39;,</span><br><span class="line">&#96;area&#96; string COMMENT &#39;区域&#39;,</span><br><span class="line">&#96;model&#96; string COMMENT &#39;手机型号&#39;,</span><br><span class="line">&#96;brand&#96; string COMMENT &#39;手机品牌&#39;,</span><br><span class="line">&#96;sdk_version&#96; string COMMENT &#39;sdkVersion&#39;,</span><br><span class="line">&#96;gmail&#96; string COMMENT &#39;gmail&#39;,</span><br><span class="line">&#96;height_width&#96; string COMMENT &#39;屏幕宽高&#39;,</span><br><span class="line">&#96;app_time&#96; string COMMENT &#39;客户端日志产生时的时间&#39;,</span><br><span class="line">&#96;network&#96; string  COMMENT &#39;网络模式&#39;,</span><br><span class="line">&#96;lng&#96; string COMMENT &#39;经度&#39;,</span><br><span class="line">&#96;lat&#96; string COMMENT &#39;纬度&#39;,</span><br><span class="line">&#96;login_date_first&#96; string comment &#39;首次活跃时间&#39;,</span><br><span class="line">&#96;login_date_last&#96; string comment &#39;末次活跃时间&#39;,</span><br><span class="line">&#96;login_day_count&#96; bigint comment &#39;当日活跃次数&#39;,</span><br><span class="line">&#96;login_count&#96; bigint comment &#39;累积活跃天数&#39;</span><br><span class="line">  ) COMMENT &#39;设备主题宽表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwt&#x2F;mall&#x2F;uv_topic&#x2F;&#39;</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwt</span><br><span class="line">table_name&#x3D;uv_topic</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">select</span><br><span class="line">nvl(new.mid_id,old.mid_id),</span><br><span class="line">nvl(new.user_id,old.user_id),</span><br><span class="line">nvl(new.version_code,old.version_code),</span><br><span class="line">nvl(new.version_name,old.version_name),</span><br><span class="line">nvl(new.lang,old.lang),</span><br><span class="line">nvl(new.source,old.source),</span><br><span class="line">nvl(new.os,old.os),</span><br><span class="line">nvl(new.area,old.area),</span><br><span class="line">nvl(new.model,old.model),</span><br><span class="line">nvl(new.brand,old.brand),</span><br><span class="line">nvl(new.sdk_version,old.sdk_version),</span><br><span class="line">nvl(new.gmail,old.gmail),</span><br><span class="line">nvl(new.height_width,old.height_width),</span><br><span class="line">nvl(new.app_time,old.app_time),</span><br><span class="line">nvl(new.network,old.network),</span><br><span class="line">nvl(new.lng,old.lng),</span><br><span class="line">nvl(new.lat,old.lat),</span><br><span class="line">if(old.mid_id is null,&#39;2020-03-10&#39;,old.login_date_first),</span><br><span class="line">if(new.mid_id is not null,&#39;2020-03-10&#39;,old.login_date_last),</span><br><span class="line">if(new.mid_id is not null, new.login_count,0),</span><br><span class="line">nvl(old.login_count,0)+if(new.login_count&gt;0,1,0)</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">*</span><br><span class="line">from dwt.mall__uv_topic</span><br><span class="line">)old</span><br><span class="line">full outer join</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">*</span><br><span class="line">from dws.mall__uv_detail_daycount</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)new</span><br><span class="line">on old.mid_id&#x3D;new.mid_id;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="blogTitle46"></a></p><h3 id="11-2-会员主题宽表"><a href="#11-2-会员主题宽表" class="headerlink" title="11.2 会员主题宽表"></a>11.2 会员主题宽表</h3></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwt.mall__user_topic</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwt.mall__user_topic&#96;(</span><br><span class="line">user_id string comment &#39;用户 id&#39;,</span><br><span class="line">login_date_first string comment &#39;首次登录时间&#39;,</span><br><span class="line">login_date_last string comment &#39;末次登录时间&#39;,</span><br><span class="line">login_count bigint comment &#39;累积登录天数&#39;,</span><br><span class="line">login_last_30d_count bigint comment &#39;最近 30 日登录天数&#39;,</span><br><span class="line">order_date_first string comment &#39;首次下单时间&#39;,</span><br><span class="line">order_date_last string comment &#39;末次下单时间&#39;,</span><br><span class="line">order_count bigint comment &#39;累积下单次数&#39;,</span><br><span class="line">order_amount decimal(16,2) comment &#39;累积下单金额&#39;,</span><br><span class="line">order_last_30d_count bigint comment &#39;最近 30 日下单次数&#39;,</span><br><span class="line">order_last_30d_amount bigint comment &#39;最近 30 日下单金额&#39;,</span><br><span class="line">payment_date_first string comment &#39;首次支付时间&#39;,</span><br><span class="line">payment_date_last string comment &#39;末次支付时间&#39;,</span><br><span class="line">payment_count decimal(16,2) comment &#39;累积支付次数&#39;,</span><br><span class="line">payment_amount decimal(16,2) comment &#39;累积支付金额&#39;,</span><br><span class="line">payment_last_30d_count decimal(16,2) comment &#39;最近 30 日支付次数&#39;,</span><br><span class="line">payment_last_30d_amount decimal(16,2) comment &#39;最近 30 日支付金额&#39;</span><br><span class="line">  ) COMMENT &#39;会员主题宽表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwt&#x2F;mall&#x2F;user_topic&#x2F;&#39;</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwt</span><br><span class="line">table_name&#x3D;user_topic</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">select</span><br><span class="line">nvl(new.user_id,old.user_id),</span><br><span class="line">if(old.login_date_first is null and</span><br><span class="line">new.login_count&gt;0,&#39;$db_date&#39;,old.login_date_first),</span><br><span class="line">if(new.login_count&gt;0,&#39;$db_date&#39;,old.login_date_last),</span><br><span class="line">nvl(old.login_count,0)+if(new.login_count&gt;0,1,0),</span><br><span class="line">nvl(new.login_last_30d_count,0),</span><br><span class="line">if(old.order_date_first is null and</span><br><span class="line">new.order_count&gt;0,&#39;$db_date&#39;,old.order_date_first),</span><br><span class="line">if(new.order_count&gt;0,&#39;$db_date&#39;,old.order_date_last),</span><br><span class="line">nvl(old.order_count,0)+nvl(new.order_count,0),</span><br><span class="line">nvl(old.order_amount,0)+nvl(new.order_amount,0),</span><br><span class="line">nvl(new.order_last_30d_count,0),</span><br><span class="line">nvl(new.order_last_30d_amount,0),</span><br><span class="line">if(old.payment_date_first is null and</span><br><span class="line">new.payment_count&gt;0,&#39;$db_date&#39;,old.payment_date_first),</span><br><span class="line">if(new.payment_count&gt;0,&#39;$db_date&#39;,old.payment_date_last),</span><br><span class="line">nvl(old.payment_count,0)+nvl(new.payment_count,0),</span><br><span class="line">nvl(old.payment_amount,0)+nvl(new.payment_amount,0),</span><br><span class="line">nvl(new.payment_last_30d_count,0),</span><br><span class="line">nvl(new.payment_last_30d_amount,0)</span><br><span class="line">from</span><br><span class="line">dwt.mall__user_topic old</span><br><span class="line">full outer join</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">user_id,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;,login_count,0)) login_count,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;,order_count,0)) order_count,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;,order_amount,0)) order_amount,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;,payment_count,0)) payment_count,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;,payment_amount,0)) payment_amount,</span><br><span class="line">sum(if(login_count&gt;0,1,0)) login_last_30d_count,</span><br><span class="line">sum(order_count) order_last_30d_count,</span><br><span class="line">sum(order_amount) order_last_30d_amount,</span><br><span class="line">sum(payment_count) payment_last_30d_count,</span><br><span class="line">sum(payment_amount) payment_last_30d_amount</span><br><span class="line">from dws.mall__user_action_daycount</span><br><span class="line">where dt&gt;&#x3D;date_add( &#39;$db_date&#39;,-30)</span><br><span class="line">group by user_id</span><br><span class="line">)new</span><br><span class="line">on old.user_id&#x3D;new.user_id;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="blogTitle47"></a></p><h3 id="11-3-商品主题宽表"><a href="#11-3-商品主题宽表" class="headerlink" title="11.3 商品主题宽表"></a>11.3 商品主题宽表</h3></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwt.mall__sku_topic</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwt.mall__sku_topic&#96;(</span><br><span class="line">sku_id string comment &#39;sku_id&#39;,</span><br><span class="line">spu_id string comment &#39;spu_id&#39;,</span><br><span class="line">order_last_30d_count bigint comment &#39;最近 30 日被下单次数&#39;,</span><br><span class="line">order_last_30d_num bigint comment &#39;最近 30 日被下单件数&#39;,</span><br><span class="line">order_last_30d_amount decimal(16,2) comment &#39;最近 30 日被下单金额&#39;,</span><br><span class="line">order_count bigint comment &#39;累积被下单次数&#39;,</span><br><span class="line">order_num bigint comment &#39;累积被下单件数&#39;,</span><br><span class="line">order_amount decimal(16,2) comment &#39;累积被下单金额&#39;,</span><br><span class="line">payment_last_30d_count bigint comment &#39;最近 30 日被支付次数&#39;,</span><br><span class="line">payment_last_30d_num bigint comment &#39;最近 30 日被支付件数&#39;,</span><br><span class="line">payment_last_30d_amount decimal(16,2) comment &#39;最近 30 日被支付金额&#39;,</span><br><span class="line">payment_count bigint comment &#39;累积被支付次数&#39;,</span><br><span class="line">payment_num bigint comment &#39;累积被支付件数&#39;,</span><br><span class="line">payment_amount decimal(16,2) comment &#39;累积被支付金额&#39;,</span><br><span class="line">refund_last_30d_count bigint comment &#39;最近三十日退款次数&#39;,</span><br><span class="line">refund_last_30d_num bigint comment &#39;最近三十日退款件数&#39;,</span><br><span class="line">refund_last_30d_amount decimal(10,2) comment &#39;最近三十日退款金额&#39;,</span><br><span class="line">refund_count bigint comment &#39;累积退款次数&#39;,</span><br><span class="line">refund_num bigint comment &#39;累积退款件数&#39;,</span><br><span class="line">refund_amount decimal(10,2) comment &#39;累积退款金额&#39;,</span><br><span class="line">cart_last_30d_count bigint comment &#39;最近 30 日被加入购物车次数&#39;,</span><br><span class="line">cart_last_30d_num bigint comment &#39;最近 30 日被加入购物车件数&#39;,</span><br><span class="line">cart_count bigint comment &#39;累积被加入购物车次数&#39;,</span><br><span class="line">cart_num bigint comment &#39;累积被加入购物车件数&#39;,</span><br><span class="line">favor_last_30d_count bigint comment &#39;最近 30 日被收藏次数&#39;,</span><br><span class="line">favor_count bigint comment &#39;累积被收藏次数&#39;,</span><br><span class="line">appraise_last_30d_good_count bigint comment &#39;最近 30 日好评数&#39;,</span><br><span class="line">appraise_last_30d_mid_count bigint comment &#39;最近 30 日中评数&#39;,</span><br><span class="line">appraise_last_30d_bad_count bigint comment &#39;最近 30 日差评数&#39;,</span><br><span class="line">appraise_last_30d_default_count bigint comment &#39;最近 30 日默认评价数&#39;,</span><br><span class="line">appraise_good_count bigint comment &#39;累积好评数&#39;,</span><br><span class="line">appraise_mid_count bigint comment &#39;累积中评数&#39;,</span><br><span class="line">appraise_bad_count bigint comment &#39;累积差评数&#39;,</span><br><span class="line">appraise_default_count bigint comment &#39;累积默认评价数&#39;</span><br><span class="line">  ) COMMENT &#39;商品主题宽表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwt&#x2F;mall&#x2F;sku_topic&#x2F;&#39;</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwt</span><br><span class="line">table_name&#x3D;sku_topic</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">select</span><br><span class="line">nvl(new.sku_id,old.sku_id), sku_info.spu_id,</span><br><span class="line">nvl(new.order_count30,0),</span><br><span class="line">nvl(new.order_num30,0),</span><br><span class="line">nvl(new.order_amount30,0),</span><br><span class="line">nvl(old.order_count,0) + nvl(new.order_count,0),</span><br><span class="line">nvl(old.order_num,0) + nvl(new.order_num,0),</span><br><span class="line">nvl(old.order_amount,0) + nvl(new.order_amount,0),</span><br><span class="line">nvl(new.payment_count30,0),</span><br><span class="line">nvl(new.payment_num30,0),</span><br><span class="line">nvl(new.payment_amount30,0),</span><br><span class="line">nvl(old.payment_count,0) + nvl(new.payment_count,0),</span><br><span class="line">nvl(old.payment_num,0) + nvl(new.payment_count,0),</span><br><span class="line">nvl(old.payment_amount,0) + nvl(new.payment_count,0),</span><br><span class="line">nvl(new.refund_count30,0),</span><br><span class="line">nvl(new.refund_num30,0),</span><br><span class="line">nvl(new.refund_amount30,0),</span><br><span class="line">nvl(old.refund_count,0) + nvl(new.refund_count,0),</span><br><span class="line">nvl(old.refund_num,0) + nvl(new.refund_num,0),</span><br><span class="line">nvl(old.refund_amount,0) + nvl(new.refund_amount,0),</span><br><span class="line">nvl(new.cart_count30,0),</span><br><span class="line">nvl(new.cart_num30,0),</span><br><span class="line">nvl(old.cart_count,0) + nvl(new.cart_count,0),</span><br><span class="line">nvl(old.cart_num,0) + nvl(new.cart_num,0),</span><br><span class="line">nvl(new.favor_count30,0),</span><br><span class="line">nvl(old.favor_count,0) + nvl(new.favor_count,0),</span><br><span class="line">nvl(new.appraise_good_count30,0),</span><br><span class="line">nvl(new.appraise_mid_count30,0),</span><br><span class="line">nvl(new.appraise_bad_count30,0),</span><br><span class="line">nvl(new.appraise_default_count30,0) ,</span><br><span class="line">nvl(old.appraise_good_count,0) + nvl(new.appraise_good_count,0),</span><br><span class="line">nvl(old.appraise_mid_count,0) + nvl(new.appraise_mid_count,0),</span><br><span class="line">nvl(old.appraise_bad_count,0) + nvl(new.appraise_bad_count,0),</span><br><span class="line">nvl(old.appraise_default_count,0) + nvl(new.appraise_default_count,0)</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">sku_id,</span><br><span class="line">spu_id,</span><br><span class="line">order_last_30d_count,</span><br><span class="line">order_last_30d_num,</span><br><span class="line">order_last_30d_amount,</span><br><span class="line">order_count,</span><br><span class="line">order_num,</span><br><span class="line">order_amount ,</span><br><span class="line">payment_last_30d_count,</span><br><span class="line">payment_last_30d_num,</span><br><span class="line">payment_last_30d_amount,</span><br><span class="line">payment_count,</span><br><span class="line">payment_num,</span><br><span class="line">payment_amount,</span><br><span class="line">refund_last_30d_count,</span><br><span class="line">refund_last_30d_num,</span><br><span class="line">refund_last_30d_amount,</span><br><span class="line">refund_count,</span><br><span class="line">refund_num,</span><br><span class="line">refund_amount,</span><br><span class="line">cart_last_30d_count,</span><br><span class="line">cart_last_30d_num,</span><br><span class="line">cart_count,</span><br><span class="line">cart_num,</span><br><span class="line">favor_last_30d_count,</span><br><span class="line">favor_count,</span><br><span class="line">appraise_last_30d_good_count,</span><br><span class="line">appraise_last_30d_mid_count,</span><br><span class="line">appraise_last_30d_bad_count,</span><br><span class="line">appraise_last_30d_default_count,</span><br><span class="line">appraise_good_count,</span><br><span class="line">appraise_mid_count,</span><br><span class="line">appraise_bad_count,</span><br><span class="line">appraise_default_count</span><br><span class="line">from dwt.mall__sku_topic</span><br><span class="line">)old</span><br><span class="line">full outer join</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">sku_id,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;, order_count,0 )) order_count,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;,order_num ,0 )) order_num,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;,order_amount,0 )) order_amount ,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;,payment_count,0 )) payment_count,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;,payment_num,0 )) payment_num,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;,payment_amount,0 )) payment_amount,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;,refund_count,0 )) refund_count,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;,refund_num,0 )) refund_num,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;,refund_amount,0 )) refund_amount,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;,cart_count,0 )) cart_count,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;,cart_num,0 )) cart_num,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;,favor_count,0 )) favor_count,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;,appraise_good_count,0 )) appraise_good_count,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;,appraise_mid_count,0 ) ) appraise_mid_count ,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;,appraise_bad_count,0 )) appraise_bad_count,</span><br><span class="line">sum(if(dt&#x3D;&#39;$db_date&#39;,appraise_default_count,0 )) appraise_default_count,</span><br><span class="line">sum(order_count) order_count30 ,</span><br><span class="line">sum(order_num) order_num30,</span><br><span class="line">sum(order_amount) order_amount30,</span><br><span class="line">sum(payment_count) payment_count30,</span><br><span class="line">sum(payment_num) payment_num30,</span><br><span class="line">sum(payment_amount) payment_amount30,</span><br><span class="line">sum(refund_count) refund_count30,</span><br><span class="line">sum(refund_num) refund_num30,</span><br><span class="line">sum(refund_amount) refund_amount30,</span><br><span class="line">sum(cart_count) cart_count30,</span><br><span class="line">sum(cart_num) cart_num30,</span><br><span class="line">sum(favor_count) favor_count30,</span><br><span class="line">sum(appraise_good_count) appraise_good_count30,</span><br><span class="line">sum(appraise_mid_count) appraise_mid_count30,</span><br><span class="line">sum(appraise_bad_count) appraise_bad_count30,</span><br><span class="line">sum(appraise_default_count) appraise_default_count30</span><br><span class="line">from dws.mall__sku_action_daycount</span><br><span class="line">where dt &gt;&#x3D; date_add (&#39;$db_date&#39;, -30)</span><br><span class="line">group by sku_id</span><br><span class="line">)new</span><br><span class="line">on new.sku_id &#x3D; old.sku_id</span><br><span class="line">left join</span><br><span class="line">(</span><br><span class="line">select * from dwd.mall__dim_sku_info where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">) sku_info</span><br><span class="line">on nvl(new.sku_id,old.sku_id)&#x3D; sku_info.id;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="blogTitle48"></a></p><h3 id="11-4-优惠卷主题宽表"><a href="#11-4-优惠卷主题宽表" class="headerlink" title="11.4 优惠卷主题宽表"></a>11.4 优惠卷主题宽表</h3></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwt.mall__coupon_topic</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwt.mall__coupon_topic&#96;(</span><br><span class="line">&#96;coupon_id&#96; string COMMENT &#39;优惠券 ID&#39;,</span><br><span class="line">&#96;get_day_count&#96; bigint COMMENT &#39;当日领用次数&#39;,</span><br><span class="line">&#96;using_day_count&#96; bigint COMMENT &#39;当日使用(下单)次数&#39;,</span><br><span class="line">&#96;used_day_count&#96; bigint COMMENT &#39;当日使用(支付)次数&#39;,</span><br><span class="line">&#96;get_count&#96; bigint COMMENT &#39;累积领用次数&#39;,</span><br><span class="line">&#96;using_count&#96; bigint COMMENT &#39;累积使用(下单)次数&#39;,</span><br><span class="line">&#96;used_count&#96; bigint COMMENT &#39;累积使用(支付)次数&#39;</span><br><span class="line">  ) COMMENT &#39;优惠券主题宽表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwt&#x2F;mall&#x2F;coupon_topic&#x2F;&#39;</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwt</span><br><span class="line">table_name&#x3D;coupon_topic</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">select</span><br><span class="line">nvl(new.coupon_id,old.coupon_id),</span><br><span class="line">nvl(new.get_count,0),</span><br><span class="line">nvl(new.using_count,0),</span><br><span class="line">nvl(new.used_count,0),</span><br><span class="line">nvl(old.get_count,0)+nvl(new.get_count,0),</span><br><span class="line">nvl(old.using_count,0)+nvl(new.using_count,0),</span><br><span class="line">nvl(old.used_count,0)+nvl(new.used_count,0)</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">*</span><br><span class="line">from dwt.mall__coupon_topic</span><br><span class="line">)old</span><br><span class="line">full outer join</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">coupon_id,</span><br><span class="line">get_count,</span><br><span class="line">using_count,</span><br><span class="line">used_count</span><br><span class="line">from dws.mall__coupon_use_daycount</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)new</span><br><span class="line">on old.coupon_id&#x3D;new.coupon_id;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="blogTitle49"></a></p><h3 id="11-5-活动主题宽表"><a href="#11-5-活动主题宽表" class="headerlink" title="11.5 活动主题宽表"></a>11.5 活动主题宽表</h3></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists dwt.mall__activity_topic</span><br><span class="line">CREATE EXTERNAL TABLE &#96;dwt.mall__activity_topic&#96;(</span><br><span class="line">&#96;id&#96; string COMMENT &#39;活动 id&#39;,</span><br><span class="line">&#96;activity_name&#96; string COMMENT &#39;活动名称&#39;,</span><br><span class="line">&#96;order_day_count&#96; bigint COMMENT &#39;当日日下单次数&#39;,</span><br><span class="line">&#96;payment_day_count&#96; bigint COMMENT &#39;当日支付次数&#39;,</span><br><span class="line">&#96;order_count&#96; bigint COMMENT &#39;累积下单次数&#39;,</span><br><span class="line">&#96;payment_count&#96; bigint COMMENT &#39;累积支付次数&#39;</span><br><span class="line">  ) COMMENT &#39;活动主题宽表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;dwt&#x2F;mall&#x2F;activity_topic&#x2F;&#39;</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;dwt</span><br><span class="line">table_name&#x3D;activity_topic</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert overwrite table $hive_table_name</span><br><span class="line">select</span><br><span class="line">nvl(new.id,old.id),</span><br><span class="line">nvl(new.activity_name,old.activity_name),</span><br><span class="line">nvl(new.order_count,0),</span><br><span class="line">nvl(new.payment_count,0),</span><br><span class="line">nvl(old.order_count,0)+nvl(new.order_count,0),</span><br><span class="line">nvl(old.payment_count,0)+nvl(new.payment_count,0)</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">*</span><br><span class="line">from dwt.mall__activity_topic</span><br><span class="line">)old</span><br><span class="line">full outer join</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">id,</span><br><span class="line">activity_name,</span><br><span class="line">order_count,</span><br><span class="line">payment_count</span><br><span class="line">from dws.mall__activity_info_daycount</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)new</span><br><span class="line">on old.id&#x3D;new.id;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="blogTitle50"></a></p><h2 id="12-ADS层构建"><a href="#12-ADS层构建" class="headerlink" title="12 ADS层构建"></a>12 ADS层构建</h2><blockquote><p>此层为最终数据需求层，考虑数据导出和数据数量决定是否需要压缩，不需要分区，每天刷写</p></blockquote></li></ul><p><a name="blogTitle51"></a></p><h3 id="12-1-设备主题"><a href="#12-1-设备主题" class="headerlink" title="12.1 设备主题"></a>12.1 设备主题</h3><p><a name="39d05c99"></a></p><h4 id="12-1-1-活跃设备数（日、周、月）"><a href="#12-1-1-活跃设备数（日、周、月）" class="headerlink" title="12.1.1 活跃设备数（日、周、月）"></a>12.1.1 活跃设备数（日、周、月）</h4><blockquote><p>日活：当日活跃的设备数<br>周活：当周活跃的设备数<br>月活：当月活跃的设备数</p></blockquote><ul><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ads.mall__uv_count</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ads.mall__uv_count&#96;(</span><br><span class="line">&#96;dt&#96; string COMMENT &#39;统计日期&#39;,</span><br><span class="line">&#96;day_count&#96; bigint COMMENT &#39;当日用户数量&#39;,</span><br><span class="line">&#96;wk_count&#96; bigint COMMENT &#39;当周用户数量&#39;,</span><br><span class="line">&#96;mn_count&#96; bigint COMMENT &#39;当月用户数量&#39;,</span><br><span class="line">&#96;is_weekend&#96; string COMMENT &#39;Y,N 是否是周末,用于得到本周最终结果&#39;,</span><br><span class="line">&#96;is_monthend&#96; string COMMENT &#39;Y,N 是否是月末,用于得到本月最终结果&#39;</span><br><span class="line">  ) COMMENT &#39;活跃设备数表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ads&#x2F;mall&#x2F;uv_count&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;ads</span><br><span class="line">table_name&#x3D;uv_count</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert into table $hive_table_name</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39; dt,</span><br><span class="line">daycount.ct,</span><br><span class="line">wkcount.ct,</span><br><span class="line">mncount.ct,</span><br><span class="line">if(date_add(next_day(&#39;$db_date&#39;,&#39;MO&#39;),-1)&#x3D;&#39;$db_date&#39;,&#39;Y&#39;,&#39;N&#39;) ,</span><br><span class="line">if(last_day(&#39;$db_date&#39;)&#x3D;&#39;$db_date&#39;,&#39;Y&#39;,&#39;N&#39;)</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39; dt,</span><br><span class="line">count(*) ct</span><br><span class="line">from dwt.mall__uv_topic</span><br><span class="line">where login_date_last&#x3D;&#39;$db_date&#39;</span><br><span class="line">)daycount join</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39; dt,</span><br><span class="line">count (*) ct</span><br><span class="line">from dwt.mall__uv_topic</span><br><span class="line">where login_date_last&gt;&#x3D;date_add(next_day(&#39;$db_date&#39;,&#39;MO&#39;),-7)</span><br><span class="line">and login_date_last&lt;&#x3D; date_add(next_day(&#39;$db_date&#39;,&#39;MO&#39;),-1)</span><br><span class="line">) wkcount on daycount.dt&#x3D;wkcount.dt</span><br><span class="line">join</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39; dt,</span><br><span class="line">count (*) ct</span><br><span class="line">from dwt.mall__uv_topic</span><br><span class="line">where</span><br><span class="line">date_format(login_date_last,&#39;yyyy-MM&#39;)&#x3D;date_format(&#39;$db_date&#39;,&#39;yyyy-MM&#39;)</span><br><span class="line">)mncount on daycount.dt&#x3D;mncount.dt;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="28015fa8"></a></p><h4 id="12-1-2-每日新增设备"><a href="#12-1-2-每日新增设备" class="headerlink" title="12.1.2 每日新增设备"></a>12.1.2 每日新增设备</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ads.mall__new_mid_count</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ads.mall__new_mid_count&#96;(</span><br><span class="line">&#96;create_date&#96; string comment &#39;创建时间&#39; ,</span><br><span class="line">&#96;new_mid_count&#96; bigint comment &#39;新增设备数量&#39;</span><br><span class="line">  ) COMMENT &#39;每日新增设备表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ads&#x2F;mall&#x2F;new_mid_count&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;ads</span><br><span class="line">table_name&#x3D;new_mid_count</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert into table $hive_table_name</span><br><span class="line">select</span><br><span class="line">login_date_first,</span><br><span class="line">count(*)</span><br><span class="line">from dwt.mall__uv_topic</span><br><span class="line">where login_date_first&#x3D;&#39;$db_date&#39;</span><br><span class="line">group by login_date_first;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="cc741d26"></a></p><h4 id="12-1-3-沉默用户数"><a href="#12-1-3-沉默用户数" class="headerlink" title="12.1.3 沉默用户数"></a>12.1.3 沉默用户数</h4><blockquote><p>沉默用户：只在安装当天启动过，且启动时间是在 7 天前</p></blockquote></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ads.mall__silent_count</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ads.mall__silent_count&#96;(</span><br><span class="line">&#96;dt&#96; string COMMENT &#39;统计日期&#39;,</span><br><span class="line">&#96;silent_count&#96; bigint COMMENT &#39;沉默设备数&#39;</span><br><span class="line">  ) COMMENT &#39;沉默用户数表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ads&#x2F;mall&#x2F;silent_count&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;ads</span><br><span class="line">table_name&#x3D;silent_count</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert into table $hive_table_name</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39;,</span><br><span class="line">count(*)</span><br><span class="line">from dwt.mall__uv_topic</span><br><span class="line">where login_date_first&#x3D;login_date_last</span><br><span class="line">and login_date_last&lt;&#x3D;date_add(&#39;$db_date&#39;,-7);</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="1cb2adbb"></a></p><h4 id="12-1-4-本周回流用户数"><a href="#12-1-4-本周回流用户数" class="headerlink" title="12.1.4 本周回流用户数"></a>12.1.4 本周回流用户数</h4><blockquote><p>本周回流用户：上周未活跃，本周活跃的设备，且不是本周新增设备</p></blockquote></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ads.mall__back_count</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ads.mall__back_count&#96;(</span><br><span class="line">&#96;wk_dt&#96; string COMMENT &#39;统计日期所在周&#39;,</span><br><span class="line">&#96;wastage_count&#96; bigint COMMENT &#39;回流设备数&#39;</span><br><span class="line">  ) COMMENT &#39;本周回流用户数表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ads&#x2F;mall&#x2F;back_count&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;ads</span><br><span class="line">table_name&#x3D;back_count</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert into table $hive_table_name</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39;,</span><br><span class="line">count(*)</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">mid_id</span><br><span class="line">from dwt.mall__uv_topic</span><br><span class="line">where login_date_last&gt;&#x3D;date_add(next_day(&#39;$db_date&#39;,&#39;MO&#39;),-7)</span><br><span class="line">and login_date_last&lt;&#x3D; date_add(next_day(&#39;$db_date&#39;,&#39;MO&#39;),-1)</span><br><span class="line">and login_date_first&lt;date_add(next_day(&#39;$db_date&#39;,&#39;MO&#39;),-7)</span><br><span class="line">)current_wk</span><br><span class="line">left join</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">mid_id</span><br><span class="line">from dws.mall__uv_detail_daycount</span><br><span class="line">where dt&gt;&#x3D;date_add(next_day(&#39;$db_date&#39;,&#39;MO&#39;),-7*2)</span><br><span class="line">and dt&lt;&#x3D; date_add(next_day(&#39;$db_date&#39;,&#39;MO&#39;),-7-1)</span><br><span class="line">group by mid_id</span><br><span class="line">)last_wk</span><br><span class="line">on current_wk.mid_id&#x3D;last_wk.mid_id</span><br><span class="line">where last_wk.mid_id is null;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="30889b3f"></a></p><h4 id="12-1-5-流失用户数"><a href="#12-1-5-流失用户数" class="headerlink" title="12.1.5 流失用户数"></a>12.1.5 流失用户数</h4><blockquote><p>流失用户：最近 7 天未活跃的设备</p></blockquote></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ads.mall__wastage_count</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ads.mall__wastage_count&#96;(</span><br><span class="line">&#96;dt&#96; string COMMENT &#39;统计日期&#39;,</span><br><span class="line">&#96;wastage_count&#96; bigint COMMENT &#39;流失设备数&#39;</span><br><span class="line">  ) COMMENT &#39;流失用户数表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ads&#x2F;mall&#x2F;wastage_count&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;ads</span><br><span class="line">table_name&#x3D;wastage_count</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert into table $hive_table_name</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39;,</span><br><span class="line">count(*)</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">mid_id</span><br><span class="line">from dwt.mall__uv_topic</span><br><span class="line">where login_date_last&lt;&#x3D;date_add(&#39;$db_date&#39;,-7)</span><br><span class="line">group by mid_id</span><br><span class="line">)t1;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="f3ba6663"></a></p><h4 id="12-1-6-留存率"><a href="#12-1-6-留存率" class="headerlink" title="12.1.6 留存率"></a>12.1.6 留存率</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596445445739-01d3c47c-ce57-475d-9b12-238c669b7f15.png#align=left&display=inline&height=412&margin=%5Bobject%20Object%5D&originHeight=412&originWidth=963&size=0&status=done&style=none&width=963" alt></p></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ads.mall__user_retention_day_rate</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ads.mall__user_retention_day_rate&#96;(</span><br><span class="line">&#96;stat_date&#96; string comment &#39;统计日期&#39;,</span><br><span class="line">&#96;create_date&#96; string comment &#39;设备新增日期&#39;,</span><br><span class="line">&#96;retention_day&#96; int comment &#39;截止当前日期留存天数&#39;,</span><br><span class="line">&#96;retention_count&#96; bigint comment &#39;留存数量&#39;,</span><br><span class="line">&#96;new_mid_count&#96; bigint comment &#39;设备新增数量&#39;,</span><br><span class="line">&#96;retention_ratio&#96; decimal(10,2) comment &#39;留存率&#39;</span><br><span class="line">  ) COMMENT &#39;留存率表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ads&#x2F;mall&#x2F;user_retention_day_rate&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;ads</span><br><span class="line">table_name&#x3D;user_retention_day_rate</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert into table $hive_table_name</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39;,--统计日期</span><br><span class="line">date_add(&#39;$db_date&#39;,-1),--新增日期</span><br><span class="line">1,--留存天数</span><br><span class="line">sum(if(login_date_first&#x3D;date_add(&#39;$db_date&#39;,-1) and</span><br><span class="line">login_date_last&#x3D;&#39;$db_date&#39;,1,0)),--2020-03-09 的 1 日留存数</span><br><span class="line">sum(if(login_date_first&#x3D;date_add(&#39;$db_date&#39;,-1),1,0)),--2020-03-09 新增</span><br><span class="line">sum(if(login_date_first&#x3D;date_add(&#39;$db_date&#39;,-1) and</span><br><span class="line">login_date_last&#x3D;&#39;$db_date&#39;,1,0))&#x2F;sum(if(login_date_first&#x3D;date_add(&#39;$db_date&#39;,-1),1,0))*100</span><br><span class="line">from dwt.mall__uv_topic</span><br><span class="line">union all</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39;,--统计日期</span><br><span class="line">date_add(&#39;$db_date&#39;,-2),--新增日期</span><br><span class="line">2,--留存天数</span><br><span class="line">sum(if(login_date_first&#x3D;date_add(&#39;$db_date&#39;,-2) and</span><br><span class="line">login_date_last&#x3D;&#39;$db_date&#39;,1,0)),--2020-03-08 的 2 日留存数</span><br><span class="line">sum(if(login_date_first&#x3D;date_add(&#39;$db_date&#39;,-2),1,0)),--2020-03-08 新增</span><br><span class="line">sum(if(login_date_first&#x3D;date_add(&#39;$db_date&#39;,-2) and</span><br><span class="line">login_date_last&#x3D;&#39;$db_date&#39;,1,0))&#x2F;sum(if(login_date_first&#x3D;date_add(&#39;$db_date&#39;,-2),1,0))*100</span><br><span class="line">from dwt.mall__uv_topic</span><br><span class="line">union all</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39;,--统计日期</span><br><span class="line">date_add(&#39;$db_date&#39;,-3),--新增日期</span><br><span class="line">3,--留存天数</span><br><span class="line">sum(if(login_date_first&#x3D;date_add(&#39;$db_date&#39;,-3) and</span><br><span class="line">login_date_last&#x3D;&#39;$db_date&#39;,1,0)),--2020-03-07 的 3 日留存数</span><br><span class="line">sum(if(login_date_first&#x3D;date_add(&#39;$db_date&#39;,-3),1,0)),--2020-03-07 新增</span><br><span class="line">sum(if(login_date_first&#x3D;date_add(&#39;$db_date&#39;,-3) and</span><br><span class="line">login_date_last&#x3D;&#39;$db_date&#39;,1,0))&#x2F;sum(if(login_date_first&#x3D;date_add(&#39;$db_date&#39;,-3),1,0))*100</span><br><span class="line">from dwt.mall__uv_topic;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="06478dde"></a></p><h4 id="12-1-7-最近连续三周活跃用户数"><a href="#12-1-7-最近连续三周活跃用户数" class="headerlink" title="12.1.7 最近连续三周活跃用户数"></a>12.1.7 最近连续三周活跃用户数</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ads.mall__continuity_wk_count</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ads.mall__continuity_wk_count&#96;(</span><br><span class="line">&#96;dt&#96; string COMMENT &#39;统计日期,一般用结束周周日日期,如果每天计算一次,可用当天日期&#39;,</span><br><span class="line">&#96;wk_dt&#96; string COMMENT &#39;持续时间&#39;,</span><br><span class="line">&#96;continuity_count&#96; bigint COMMENT &#39;活跃次数&#39;</span><br><span class="line">  ) COMMENT &#39;最近连续三周活跃用户数表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ads&#x2F;mall&#x2F;continuity_wk_count&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;ads</span><br><span class="line">table_name&#x3D;continuity_wk_count</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert into table $hive_table_name</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39;,</span><br><span class="line">concat(date_add(next_day(&#39;$db_date&#39;,&#39;MO&#39;),-7*3),&#39;_&#39;,date_add(next_day(&#39;$db_date&#39;,&#39;MO&#39;),-1)),</span><br><span class="line">count(*)</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">mid_id</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">mid_id</span><br><span class="line">from dws.mall__uv_detail_daycount</span><br><span class="line">where dt&gt;&#x3D;date_add(next_day(&#39;$db_date&#39;,&#39;monday&#39;),-7)</span><br><span class="line">and dt&lt;&#x3D;date_add(next_day(&#39;$db_date&#39;,&#39;monday&#39;),-1)</span><br><span class="line">group by mid_id</span><br><span class="line">union all</span><br><span class="line">select</span><br><span class="line">mid_id</span><br><span class="line">from dws.mall__uv_detail_daycount</span><br><span class="line">where dt&gt;&#x3D;date_add(next_day(&#39;$db_date&#39;,&#39;monday&#39;),-7*2)</span><br><span class="line">and dt&lt;&#x3D;date_add(next_day(&#39;$db_date&#39;,&#39;monday&#39;),-7-1)</span><br><span class="line">group by mid_id</span><br><span class="line">union all</span><br><span class="line">select</span><br><span class="line">mid_id</span><br><span class="line">from dws.mall__uv_detail_daycount</span><br><span class="line">where dt&gt;&#x3D;date_add(next_day(&#39;$db_date&#39;,&#39;monday&#39;),-7*3)</span><br><span class="line">and dt&lt;&#x3D;date_add(next_day(&#39;$db_date&#39;,&#39;monday&#39;),-7*2-1)</span><br><span class="line">group by mid_id</span><br><span class="line">)t1</span><br><span class="line">group by mid_id</span><br><span class="line">having count(*)&#x3D;3</span><br><span class="line">)t2</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="34c5f2dd"></a></p><h4 id="12-1-8-最近七天内连续三天活跃用户数"><a href="#12-1-8-最近七天内连续三天活跃用户数" class="headerlink" title="12.1.8 最近七天内连续三天活跃用户数"></a>12.1.8 最近七天内连续三天活跃用户数</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ads.mall__continuity_uv_count</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ads.mall__continuity_uv_count&#96;(</span><br><span class="line">&#96;dt&#96; string COMMENT &#39;统计日期&#39;,</span><br><span class="line">&#96;wk_dt&#96; string COMMENT &#39;最近 7 天日期&#39;,</span><br><span class="line">&#96;continuity_count&#96; bigint</span><br><span class="line">  ) COMMENT &#39;最近七天内连续三天活跃用户数表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ads&#x2F;mall&#x2F;continuity_uv_count&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;ads</span><br><span class="line">table_name&#x3D;continuity_uv_count</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert into table $hive_table_name</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39;,</span><br><span class="line">concat(date_add(&#39;db_date&#39;,-6),&#39;_&#39;,&#39;db_date&#39;),</span><br><span class="line">count(*)</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select </span><br><span class="line">mid_id</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select </span><br><span class="line">mid_id</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">mid_id,</span><br><span class="line">date_sub(dt,rank) date_dif</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">mid_id,</span><br><span class="line">dt,</span><br><span class="line">rank() over(partition by mid_id order by dt) rank</span><br><span class="line">from dws.mall__uv_detail_daycount</span><br><span class="line">where dt&gt;&#x3D;date_add(&#39;db_date&#39;,-6) and</span><br><span class="line">dt&lt;&#x3D;&#39;db_date&#39;</span><br><span class="line">)t1</span><br><span class="line">)t2</span><br><span class="line">group by mid_id,date_dif</span><br><span class="line">having count(*)&gt;&#x3D;3</span><br><span class="line">)t3</span><br><span class="line">group by mid_id</span><br><span class="line">)t4;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="blogTitle52"></a></p><h3 id="12-2-会员主题"><a href="#12-2-会员主题" class="headerlink" title="12.2 会员主题"></a>12.2 会员主题</h3><p><a name="497e0770"></a></p><h4 id="12-2-1-会员主题信息"><a href="#12-2-1-会员主题信息" class="headerlink" title="12.2.1 会员主题信息"></a>12.2.1 会员主题信息</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ads.mall__user_topic</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ads.mall__user_topic&#96;(</span><br><span class="line">&#96;dt&#96; string COMMENT &#39;统计日期&#39;,</span><br><span class="line">&#96;day_users&#96; string COMMENT &#39;活跃会员数&#39;,</span><br><span class="line">&#96;day_new_users&#96; string COMMENT &#39;新增会员数&#39;,</span><br><span class="line">&#96;day_new_payment_users&#96; string COMMENT &#39;新增消费会员数&#39;,</span><br><span class="line">&#96;payment_users&#96; string COMMENT &#39;总付费会员数&#39;,</span><br><span class="line">&#96;users&#96; string COMMENT &#39;总会员数&#39;,</span><br><span class="line">&#96;day_users2users&#96; decimal(10,2) COMMENT &#39;会员活跃率&#39;,</span><br><span class="line">&#96;payment_users2users&#96; decimal(10,2) COMMENT &#39;会员付费率&#39;,</span><br><span class="line">&#96;day_new_users2users&#96; decimal(10,2) COMMENT &#39;会员新鲜度&#39;</span><br><span class="line">  ) COMMENT &#39;会员主题信息表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ads&#x2F;mall&#x2F;user_topic&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;ads</span><br><span class="line">table_name&#x3D;user_topic</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert into table $hive_table_name</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39;,</span><br><span class="line">sum(if(login_date_last&#x3D;&#39;$db_date&#39;,1,0)),</span><br><span class="line">sum(if(login_date_first&#x3D;&#39;$db_date&#39;,1,0)),</span><br><span class="line">sum(if(payment_date_first&#x3D;&#39;$db_date&#39;,1,0)),</span><br><span class="line">sum(if(payment_count&gt;0,1,0)),</span><br><span class="line">count(*),</span><br><span class="line">sum(if(login_date_last&#x3D;&#39;$db_date&#39;,1,0))&#x2F;count(*),</span><br><span class="line">sum(if(payment_count&gt;0,1,0))&#x2F;count(*),</span><br><span class="line">sum(if(login_date_first&#x3D;&#39;$db_date&#39;,1,0))&#x2F;sum(if(login_date_last&#x3D;&#39;$db_date&#39;,1,0))</span><br><span class="line">from dwt.mall__user_topic</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="c44b12bf"></a></p><h4 id="12-2-2-漏斗分析"><a href="#12-2-2-漏斗分析" class="headerlink" title="12.2.2 漏斗分析"></a>12.2.2 漏斗分析</h4><blockquote><p>统计“浏览-&gt;购物车-&gt;下单-&gt;支付”的转化率<br>思路：统计各个行为的人数，然后计算比值。</p></blockquote></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ads.mall__user_action_convert_day</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ads.mall__user_action_convert_day&#96;(</span><br><span class="line">&#96;dt&#96; string COMMENT &#39;统计日期&#39;,</span><br><span class="line">&#96;total_visitor_m_count&#96; bigint COMMENT &#39;总访问人数&#39;,</span><br><span class="line">&#96;cart_u_count&#96; bigint COMMENT &#39;加入购物车的人数&#39;,</span><br><span class="line">&#96;visitor2cart_convert_ratio&#96; decimal(10,2) COMMENT &#39;访问到加入购物车转化率&#39;,</span><br><span class="line">&#96;order_u_count&#96; bigint COMMENT &#39;下单人数&#39;,</span><br><span class="line">&#96;cart2order_convert_ratio&#96; decimal(10,2) COMMENT &#39;加入购物车到下单转化率&#39;,</span><br><span class="line">&#96;payment_u_count&#96; bigint COMMENT &#39;支付人数&#39;,</span><br><span class="line">&#96;order2payment_convert_ratio&#96; decimal(10,2) COMMENT &#39;下单到支付的转化率&#39;</span><br><span class="line">  ) COMMENT &#39;漏斗分析表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ads&#x2F;mall&#x2F;user_action_convert_day&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;ads</span><br><span class="line">table_name&#x3D;user_action_convert_day</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert into table $hive_table_name</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39;,</span><br><span class="line">uv.day_count,</span><br><span class="line">ua.cart_count,</span><br><span class="line">cast(ua.cart_count&#x2F;uv.day_count as decimal(10,2)) visitor2cart_convert_ratio,</span><br><span class="line">ua.order_count,</span><br><span class="line">cast(ua.order_count&#x2F;ua.cart_count as decimal(10,2)) visitor2order_convert_ratio,</span><br><span class="line">ua.payment_count,</span><br><span class="line">cast(ua.payment_count&#x2F;ua.order_count as decimal(10,2)) order2payment_convert_ratio</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">dt,</span><br><span class="line">sum(if(cart_count&gt;0,1,0)) cart_count,</span><br><span class="line">sum(if(order_count&gt;0,1,0)) order_count,</span><br><span class="line">sum(if(payment_count&gt;0,1,0)) payment_count</span><br><span class="line">from dws.mall__user_action_daycount</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">group by dt</span><br><span class="line">)ua join ads.mall__uv_count uv on uv.dt&#x3D;ua.dt;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="blogTitle53"></a></p><h3 id="12-3-商品主题"><a href="#12-3-商品主题" class="headerlink" title="12.3 商品主题"></a>12.3 商品主题</h3><p><a name="732a2a9a"></a></p><h4 id="12-3-1-商品个数信息"><a href="#12-3-1-商品个数信息" class="headerlink" title="12.3.1 商品个数信息"></a>12.3.1 商品个数信息</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ads.mall__product_info</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ads.mall__product_info&#96;(</span><br><span class="line">&#96;dt&#96; string COMMENT &#39;统计日期&#39;,</span><br><span class="line">&#96;sku_num&#96; string COMMENT &#39;sku 个数&#39;,</span><br><span class="line">&#96;spu_num&#96; string COMMENT &#39;spu 个数&#39;</span><br><span class="line">  ) COMMENT &#39;商品个数信息表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ads&#x2F;mall&#x2F;product_info&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;ads</span><br><span class="line">table_name&#x3D;product_info</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert into table $hive_table_name</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39; dt,</span><br><span class="line">sku_num,</span><br><span class="line">spu_num</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39; dt,</span><br><span class="line">count(*) sku_num</span><br><span class="line">from</span><br><span class="line">dwt.mall__sku_topic</span><br><span class="line">) tmp_sku_num</span><br><span class="line">join</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39; dt,</span><br><span class="line">count(*) spu_num</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">spu_id</span><br><span class="line">from</span><br><span class="line">dwt.mall__sku_topic</span><br><span class="line">group by</span><br><span class="line">spu_id</span><br><span class="line">) tmp_spu_id</span><br><span class="line">) tmp_spu_num</span><br><span class="line">on</span><br><span class="line">tmp_sku_num.dt&#x3D;tmp_spu_num.dt;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="be51cd91"></a></p><h4 id="12-3-2-商品销量排行"><a href="#12-3-2-商品销量排行" class="headerlink" title="12.3.2 商品销量排行"></a>12.3.2 商品销量排行</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ads.mall__product_sale_topN</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ads.mall__product_sale_topN&#96;(</span><br><span class="line">&#96;dt&#96; string COMMENT &#39;统计日期&#39;,</span><br><span class="line">&#96;sku_num&#96; string COMMENT &#39;sku 个数&#39;,</span><br><span class="line">&#96;spu_num&#96; string COMMENT &#39;spu 个数&#39;</span><br><span class="line">  ) COMMENT &#39;商品销量排名表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ads&#x2F;mall&#x2F;product_sale_topN&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;ads</span><br><span class="line">table_name&#x3D;product_sale_topN</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert into table $hive_table_name</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39; dt,</span><br><span class="line">sku_id,</span><br><span class="line">payment_amount</span><br><span class="line">from</span><br><span class="line">dws.mall__sku_action_daycount</span><br><span class="line">where</span><br><span class="line">dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">order by payment_amount desc</span><br><span class="line">limit 10;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="06076ff3"></a></p><h4 id="12-3-3-商品收藏排名"><a href="#12-3-3-商品收藏排名" class="headerlink" title="12.3.3 商品收藏排名"></a>12.3.3 商品收藏排名</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ads.mall__product_favor_topN</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ads.mall__product_favor_topN&#96;(</span><br><span class="line">&#96;dt&#96; string COMMENT &#39;统计日期&#39;,</span><br><span class="line">&#96;sku_id&#96; string COMMENT &#39;商品 ID&#39;,</span><br><span class="line">&#96;favor_count&#96; bigint COMMENT &#39;收藏量&#39;</span><br><span class="line">  ) COMMENT &#39;商品收藏排名表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ads&#x2F;mall&#x2F;product_favor_topN&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;ads</span><br><span class="line">table_name&#x3D;product_favor_topN</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert into table $hive_table_name</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39; dt,</span><br><span class="line">sku_id,</span><br><span class="line">favor_count</span><br><span class="line">from</span><br><span class="line">dws.mall__sku_action_daycount</span><br><span class="line">where</span><br><span class="line">dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">order by favor_count desc</span><br><span class="line">limit 10;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="3a119480"></a></p><h4 id="12-3-4-商品加入购物车排名"><a href="#12-3-4-商品加入购物车排名" class="headerlink" title="12.3.4 商品加入购物车排名"></a>12.3.4 商品加入购物车排名</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ads.mall__product_cart_topN</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ads.mall__product_cart_topN&#96;(</span><br><span class="line">&#96;dt&#96; string COMMENT &#39;统计日期&#39;,</span><br><span class="line">&#96;sku_id&#96; string COMMENT &#39;商品 ID&#39;,</span><br><span class="line">&#96;cart_num&#96; bigint COMMENT &#39;加入购物车数量&#39;</span><br><span class="line">  ) COMMENT &#39;商品加入购物车排名表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ads&#x2F;mall&#x2F;product_cart_topN&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;ads</span><br><span class="line">table_name&#x3D;product_cart_topN</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert into table $hive_table_name</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39; dt,</span><br><span class="line">sku_id,</span><br><span class="line">cart_num</span><br><span class="line">from</span><br><span class="line">dws.mall__sku_action_daycount</span><br><span class="line">where</span><br><span class="line">dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">order by cart_num desc</span><br><span class="line">limit 10;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="1f46c297"></a></p><h4 id="12-3-5-商品退款率排名（近30天）"><a href="#12-3-5-商品退款率排名（近30天）" class="headerlink" title="12.3.5 商品退款率排名（近30天）"></a>12.3.5 商品退款率排名（近30天）</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ads.mall__product_refund_topN</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ads.mall__product_refund_topN&#96;(</span><br><span class="line">&#96;dt&#96; string COMMENT &#39;统计日期&#39;,</span><br><span class="line">&#96;sku_id&#96; string COMMENT &#39;商品 ID&#39;,</span><br><span class="line">&#96;refund_ratio&#96; decimal(10,2) COMMENT &#39;退款率&#39;</span><br><span class="line">  ) COMMENT &#39;商品退款率排名(最近 30 天)表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ads&#x2F;mall&#x2F;product_refund_topN&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;ads</span><br><span class="line">table_name&#x3D;product_refund_topN</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert into table $hive_table_name</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39;,</span><br><span class="line">sku_id,</span><br><span class="line">refund_last_30d_count&#x2F;payment_last_30d_count*100 refund_ratio</span><br><span class="line">from dwt.mall__sku_topic</span><br><span class="line">order by refund_ratio desc</span><br><span class="line">limit 10;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="e3f57ae4"></a></p><h4 id="12-3-6-商品差评率"><a href="#12-3-6-商品差评率" class="headerlink" title="12.3.6 商品差评率"></a>12.3.6 商品差评率</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ads.mall__appraise_bad_topN</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ads.mall__appraise_bad_topN&#96;(</span><br><span class="line">&#96;dt&#96; string COMMENT &#39;统计日期&#39;,</span><br><span class="line">&#96;sku_id&#96; string COMMENT &#39;商品 ID&#39;,</span><br><span class="line">&#96;appraise_bad_ratio&#96; decimal(10,2) COMMENT &#39;差评率&#39;</span><br><span class="line">  ) COMMENT &#39;商品差评率表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ads&#x2F;mall&#x2F;appraise_bad_topN&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;ads</span><br><span class="line">table_name&#x3D;appraise_bad_topN</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert into table $hive_table_name</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39; dt,</span><br><span class="line">sku_id,</span><br><span class="line">appraise_bad_count&#x2F;(appraise_good_count+appraise_mid_count+appraise_bad_count+appraise_default_count) appraise_bad_ratio</span><br><span class="line">from</span><br><span class="line">dws.mall__sku_action_daycount</span><br><span class="line">where</span><br><span class="line">dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">order by appraise_bad_ratio desc</span><br><span class="line">limit 10;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="blogTitle54"></a></p><h3 id="12-4-营销主题"><a href="#12-4-营销主题" class="headerlink" title="12.4 营销主题"></a>12.4 营销主题</h3><p><a name="8caa923f"></a></p><h4 id="12-4-1-下单数目统计"><a href="#12-4-1-下单数目统计" class="headerlink" title="12.4.1 下单数目统计"></a>12.4.1 下单数目统计</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ads.mall__order_daycount</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ads.mall__order_daycount&#96;(</span><br><span class="line">dt string comment &#39;统计日期&#39;,</span><br><span class="line">order_count bigint comment &#39;单日下单笔数&#39;,</span><br><span class="line">order_amount bigint comment &#39;单日下单金额&#39;,</span><br><span class="line">order_users bigint comment &#39;单日下单用户数&#39;</span><br><span class="line">  ) COMMENT &#39;下单数目统计表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ads&#x2F;mall&#x2F;order_daycount&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;ads</span><br><span class="line">table_name&#x3D;order_daycount</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert into table $hive_table_name</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39;,</span><br><span class="line">sum(order_count),</span><br><span class="line">sum(order_amount),</span><br><span class="line">sum(if(order_count&gt;0,1,0))</span><br><span class="line">from dws.mall__user_action_daycount</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="4e99b63e"></a></p><h4 id="12-4-2-支付信息统计"><a href="#12-4-2-支付信息统计" class="headerlink" title="12.4.2 支付信息统计"></a>12.4.2 支付信息统计</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ads.mall__payment_daycount</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ads.mall__payment_daycount&#96;(</span><br><span class="line">dt string comment &#39;统计日期&#39;,</span><br><span class="line">order_count bigint comment &#39;单日支付笔数&#39;,</span><br><span class="line">order_amount bigint comment &#39;单日支付金额&#39;,</span><br><span class="line">payment_user_count bigint comment &#39;单日支付人数&#39;,</span><br><span class="line">payment_sku_count bigint comment &#39;单日支付商品数&#39;,</span><br><span class="line">payment_avg_time double comment &#39;下单到支付的平均时长，取分钟数&#39;</span><br><span class="line">  ) COMMENT &#39;支付信息统计表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ads&#x2F;mall&#x2F;payment_daycount&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;ads</span><br><span class="line">table_name&#x3D;payment_daycount</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert into table $hive_table_name</span><br><span class="line">select</span><br><span class="line">tmp_payment.dt,</span><br><span class="line">tmp_payment.payment_count,</span><br><span class="line">tmp_payment.payment_amount,</span><br><span class="line">tmp_payment.payment_user_count,</span><br><span class="line">tmp_skucount.payment_sku_count,</span><br><span class="line">tmp_time.payment_avg_time</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39; dt,</span><br><span class="line">sum(payment_count) payment_count,</span><br><span class="line">sum(payment_amount) payment_amount,</span><br><span class="line">sum(if(payment_count&gt;0,1,0)) payment_user_count</span><br><span class="line">from dws.mall__user_action_daycount</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)tmp_payment</span><br><span class="line">join</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39; dt,</span><br><span class="line">sum(if(payment_count&gt;0,1,0)) payment_sku_count</span><br><span class="line">from dws.mall__sku_action_daycount</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">)tmp_skucount on tmp_payment.dt&#x3D;tmp_skucount.dt</span><br><span class="line">join</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">&#39;$db_date&#39; dt,</span><br><span class="line">sum(unix_timestamp(payment_time)-unix_timestamp(create_time))&#x2F;count(*)&#x2F;60</span><br><span class="line">payment_avg_time</span><br><span class="line">from dwd.mall__fact_order_info</span><br><span class="line">where dt&#x3D;&#39;$db_date&#39;</span><br><span class="line">and payment_time is not null</span><br><span class="line">)tmp_time on tmp_payment.dt&#x3D;tmp_time.dt</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure><p><a name="c20ec38b"></a></p><h4 id="12-4-3-复购率"><a href="#12-4-3-复购率" class="headerlink" title="12.4.3 复购率"></a>12.4.3 复购率</h4></li><li><p>建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists ads.mall__sale_tm_category1_stat_mn</span><br><span class="line">CREATE EXTERNAL TABLE &#96;ads.mall__sale_tm_category1_stat_mn&#96;(</span><br><span class="line">tm_id string comment &#39;品牌 id&#39;,</span><br><span class="line">category1_id string comment &#39;1 级品类 id &#39;,</span><br><span class="line">category1_name string comment &#39;1 级品类名称 &#39;,</span><br><span class="line">buycount bigint comment &#39;购买人数&#39;,</span><br><span class="line">buy_twice_last bigint comment &#39;两次以上购买人数&#39;,</span><br><span class="line">buy_twice_last_ratio decimal(10,2) comment &#39;单次复购率&#39;,</span><br><span class="line">buy_3times_last bigint comment &#39;三次以上购买人数&#39;,</span><br><span class="line">buy_3times_last_ratio decimal(10,2) comment &#39;多次复购率&#39;,</span><br><span class="line">stat_mn string comment &#39;统计月份&#39;,</span><br><span class="line">stat_date string comment &#39;统计日期&#39;</span><br><span class="line">  ) COMMENT &#39;复购率表&#39;</span><br><span class="line">row format delimited fields terminated by &#39;\t&#39;</span><br><span class="line">stored as parquet</span><br><span class="line">location &#39;&#x2F;warehouse&#x2F;ads&#x2F;mall&#x2F;sale_tm_category1_stat_mn&#x2F;&#39;</span><br><span class="line">tblproperties (&quot;parquet.compression&quot;&#x3D;&quot;snappy&quot;)</span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">db_date&#x3D;$&#123;date&#125;</span><br><span class="line">hive&#x3D;&#x2F;opt&#x2F;cloudera&#x2F;parcels&#x2F;CDH-6.2.0-1.cdh6.2.0.p0.967373&#x2F;bin&#x2F;hive</span><br><span class="line">APP1&#x3D;mall</span><br><span class="line">APP2&#x3D;ads</span><br><span class="line">table_name&#x3D;sale_tm_category1_stat_mn</span><br><span class="line">hive_table_name&#x3D;$APP2.mall__$table_name</span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$&#123;date&#125;&quot; ] ;then</span><br><span class="line">        db_date&#x3D;$&#123;date&#125;</span><br><span class="line">else </span><br><span class="line">        db_date&#x3D;&#96;date -d &quot;-1 day&quot; +%F&#96;</span><br><span class="line">fi</span><br><span class="line">sql&#x3D;&quot; </span><br><span class="line">insert into table $hive_table_name</span><br><span class="line">select</span><br><span class="line">mn.sku_tm_id,</span><br><span class="line">mn.sku_category1_id,</span><br><span class="line">mn.sku_category1_name,</span><br><span class="line">sum(if(mn.order_count&gt;&#x3D;1,1,0)) buycount,</span><br><span class="line">sum(if(mn.order_count&gt;&#x3D;2,1,0)) buyTwiceLast,</span><br><span class="line">sum(if(mn.order_count&gt;&#x3D;2,1,0))&#x2F;sum( if(mn.order_count&gt;&#x3D;1,1,0)) buyTwiceLastRatio,</span><br><span class="line">sum(if(mn.order_count&gt;&#x3D;3,1,0)) buy3timeLast ,</span><br><span class="line">sum(if(mn.order_count&gt;&#x3D;3,1,0))&#x2F;sum( if(mn.order_count&gt;&#x3D;1,1,0)) buy3timeLastRatio,</span><br><span class="line">date_format(&#39;$db_date&#39; ,&#39;yyyy-MM&#39;) stat_mn,</span><br><span class="line">&#39;$db_date&#39; stat_date</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">select</span><br><span class="line">user_id,</span><br><span class="line">sd.sku_tm_id,</span><br><span class="line">sd.sku_category1_id,</span><br><span class="line">sd.sku_category1_name,</span><br><span class="line">sum(order_count) order_count</span><br><span class="line">from dws.mall__sale_detail_daycount sd</span><br><span class="line">where date_format(dt,&#39;yyyy-MM&#39;)&#x3D;date_format(&#39;$db_date&#39; ,&#39;yyyy-MM&#39;)</span><br><span class="line">group by user_id, sd.sku_tm_id, sd.sku_category1_id, sd.sku_category1_name</span><br><span class="line">) mn</span><br><span class="line">group by mn.sku_tm_id, mn.sku_category1_id, mn.sku_category1_name;</span><br><span class="line">&quot;</span><br><span class="line">$hive -e &quot;$sql&quot;</span><br></pre></td></tr></table></figure></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;以下这篇博客转载自&lt;a href=&quot;https://www.cnblogs.com/ttzzyy/p/13255841.html&quot; target
      
    
    </summary>
    
    
      <category term="大数据" scheme="cpeixin.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="数据仓库" scheme="cpeixin.cn/tags/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Linux直接下载Google Drive文件</title>
    <link href="cpeixin.cn/2020/05/28/Linux%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BDGoogle-Drive%E6%96%87%E4%BB%B6/"/>
    <id>cpeixin.cn/2020/05/28/Linux%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BDGoogle-Drive%E6%96%87%E4%BB%B6/</id>
    <published>2020-05-27T17:03:54.000Z</published>
    <updated>2020-05-28T15:08:18.891Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --><p>在Google Colab中训练完模型，保存在Google Drive中，整个项目大小有3、4GB大小，此时想将这整个项目放到服务器中进行部署测试。<br><br><br>首选方案是将整个项目上传到GitHub中，随后在服务器中直接wget，但是模型文件过大，GitHub单个文件的限制是100MB。<br><br><br>突然想到可不可以直接从Google Drive上进行下载模型文件到服务器😅<br><br><br><strong>下载小文件：</strong><br><br><br>选择要下载的文件右键<br><br><br>点击“共享”<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1590598566164-b176f9b4-62bf-41d6-82bf-36e8837816f6.png#align=left&display=inline&height=1066&margin=%5Bobject%20Object%5D&name=%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-05-28%20%E4%B8%8A%E5%8D%8812.51.36.png&originHeight=1066&originWidth=1712&size=193930&status=done&style=none&width=1712" alt="屏幕快照 2020-05-28 上午12.51.36.png"><br><br><br><br><br>点击“更改”，设置分享权限<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1590598584015-3b9be292-6dd3-4edc-86ef-de50b58be55b.png#align=left&display=inline&height=1088&margin=%5Bobject%20Object%5D&name=%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-05-28%20%E4%B8%8A%E5%8D%8812.52.08.png&originHeight=1088&originWidth=2036&size=141068&status=done&style=none&width=2036" alt="屏幕快照 2020-05-28 上午12.52.08.png"><br><br><br>这是复制图中选中部分的ID<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1590598604200-c2f98348-2daf-423b-9792-df03ad395236.png#align=left&display=inline&height=1078&margin=%5Bobject%20Object%5D&name=%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-05-28%20%E4%B8%8A%E5%8D%8812.53.24.png&originHeight=1078&originWidth=1858&size=172147&status=done&style=none&width=1858" alt="屏幕快照 2020-05-28 上午12.53.24.png"><br><br><br>拼接下载链接，进行下载<br><br><br>wget <a href="https://drive.google.com/uc?id=1sT6GvdtCG3AnV-62beWCP6LNdtFgmX-o" target="_blank" rel="external nofollow noopener noreferrer">https://drive.google.com/uc?id=</a>复制下来的共享id -O your_file_name</p><p><strong>下载大文件：</strong></p><p>上面的方法，适合下载一些小文件，大文件就不可以了。更换下面命令的id选项，并且准备好cookies.txt<br><br><br>关于cookies.txt，可以在Chrome浏览器中下载cookie.txt这个插件，点击下载，上传到服务器中/tmp目录下即可<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1590678181832-6ba38a09-0ea7-4d48-a6a3-5cd116d19e1d.png#align=left&display=inline&height=1472&margin=%5Bobject%20Object%5D&name=%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-05-28%20%E4%B8%8B%E5%8D%8810.59.19.png&originHeight=1472&originWidth=3094&size=893365&status=done&style=none&width=3094" alt="屏幕快照 2020-05-28 下午10.59.19.png"><br><br><br>关于文件id，和上面方法获取一致，接下来运行下面命令即可。<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --load-cookies /tmp/cookies.txt "https://docs.google.com/uc?export=download&amp;confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&amp;id=15q9WdqjpZKiVXUo7FOII7O2WLxZag' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')&amp;id=15q9WdqjpZKiVXUo7FOII7O2WLxZagARe" -O pytorch_model.bin</span><br></pre></td></tr></table></figure><br><br><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;在Google Colab中训练完模型，保存在Google Drive中，整个项目大小有3、4GB大小，此时想将这整个项目放到服务器中进行部署测
      
    
    </summary>
    
    
      <category term="Tools" scheme="cpeixin.cn/categories/Tools/"/>
    
    
  </entry>
  
  <entry>
    <title>Flink State 状态管理</title>
    <link href="cpeixin.cn/2020/04/29/Flink-State-%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/"/>
    <id>cpeixin.cn/2020/04/29/Flink-State-%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/</id>
    <published>2020-04-29T01:51:40.000Z</published>
    <updated>2020-07-07T01:53:46.284Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --><p>我们先回顾一下到底什么是 state，流式计算的数据往往是转瞬即逝， 当然，真实业务场景不可能说所有的数据都是进来之后就走掉，没有任何东西留下来，那么留下来的东西其实就是称之为 state，中文可以翻译成状态。<br>在下面这个图中，我们的所有的原始数据进入用户代码之后再输出到下游，如果中间涉及到 state 的读写，这些状态会存储在本地的 state backend（可以对标成嵌入式本地 kv 存储）当中。<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594057064519-9d422e4c-d12b-4194-9276-1352f2ef49fd.png#align=left&display=inline&height=445&margin=%5Bobject%20Object%5D&name=a6cd5ef2808d43da9fec1ae90a9bb8f3.png&originHeight=445&originWidth=899&size=74325&status=done&style=none&width=899" alt="a6cd5ef2808d43da9fec1ae90a9bb8f3.png"><br><a name="bylpp"></a></p><h3 id="一-状态管理的基本概念"><a href="#一-状态管理的基本概念" class="headerlink" title="一. 状态管理的基本概念"></a>一. 状态管理的基本概念</h3><p><a name="qtxng"></a></p><h4 id="1-什么是状态"><a href="#1-什么是状态" class="headerlink" title="1. 什么是状态"></a>1. 什么是状态</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594056123816-435b7d81-14db-4a9b-8ea6-5969055263f2.png#align=left&display=inline&height=593&margin=%5Bobject%20Object%5D&originHeight=593&originWidth=1061&size=0&status=done&style=none&width=1061" alt><br>首先举一个无状态计算的例子：消费延迟计算。假设现在有一个消息队列，消息队列中有一个生产者持续往消费队列写入消息，多个消费者分别从消息队列中读取消息。从图上可以看出，生产者已经写入 16 条消息，Offset 停留在 15 ；有 3 个消费者，有的消费快，而有的消费慢。消费快的已经消费了 13 条数据，消费者慢的才消费了 7、8 条数据。<br><br><br>如何实时统计每个消费者落后多少条数据，如图给出了输入输出的示例。可以了解到输入的时间点有一个时间戳，生产者将消息写到了某个时间点的位置，每个消费者同一时间点分别读到了什么位置。刚才也提到了生产者写入了 15 条，消费者分别读取了 10、7、12 条。那么问题来了，怎么将生产者、消费者的进度转换为右侧示意图信息呢？<br><br><br>consumer 0 落后了 5 条，consumer 1 落后了 8 条，consumer 2 落后了 3 条，根据 Flink 的原理，此处需进行 Map 操作。Map 首先把消息读取进来，然后分别相减，即可知道每个 consumer 分别落后了几条。Map 一直往下发，则会得出最终结果。<br><br><br>大家会发现，在这种模式的计算中，无论这条输入进来多少次，输出的结果都是一样的，因为单条输入中已经包含了所需的所有信息。消费落后等于生产者减去消费者。生产者的消费在单条数据中可以得到，消费者的数据也可以在单条数据中得到，所以相同输入可以得到相同输出，这就是一个无状态的计算。<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594056123791-00ed5d81-07fc-419d-bed8-3e8a6d731a1a.png#align=left&display=inline&height=592&margin=%5Bobject%20Object%5D&originHeight=592&originWidth=1060&size=0&status=done&style=none&width=1060" alt><br>相应的什么是有状态的计算？<br><br><br>以访问日志统计量的例子进行说明，比如当前拿到一个 Nginx 访问日志，一条日志表示一个请求，记录该请求从哪里来，访问的哪个地址，需要实时统计每个地址总共被访问了多少次，也即每个 API 被调用了多少次。可以看到下面简化的输入和输出，输入第一条是在某个时间点请求 GET 了 /api/a；第二条日志记录了某个时间点 Post /api/b ; 第三条是在某个时间点 GET 了一个 /api/a，总共有 3 个 Nginx 日志。从这 3 条 Nginx 日志可以看出，第一条进来输出 /api/a 被访问了一次，第二条进来输出 /api/b 被访问了一次，紧接着又进来一条访问 api/a，所以 api/a 被访问了 2 次。不同的是，两条 /api/a 的 Nginx 日志进来的数据是一样的，但输出的时候结果可能不同，第一次输出 count=1 ，第二次输出 count=2，说明相同输入可能得到不同输出。输出的结果取决于当前请求的 API 地址之前累计被访问过多少次。第一条过来累计是 0 次，count = 1，第二条过来 API 的访问已经有一次了，所以 /api/a 访问累计次数 count=2。单条数据其实仅包含当前这次访问的信息，而不包含所有的信息。要得到这个结果，还需要依赖 API 累计访问的量，即状态。<br><br><br>这个计算模式是将数据输入算子中，用来进行各种复杂的计算并输出数据。这个过程中算子会去访问之前存储在里面的状态。另外一方面，它还会把现在的数据对状态的影响实时更新，如果输入 200 条数据，最后输出就是 200 条结果。<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594056124024-fef7c859-c578-4251-b699-79678a8f6821.png#align=left&display=inline&height=592&margin=%5Bobject%20Object%5D&originHeight=592&originWidth=1056&size=0&status=done&style=none&width=1056" alt><br>什么场景会用到状态呢？下面列举了常见的 4 种：</p><ul><li><p>去重：比如上游的系统数据可能会有重复，落到下游系统时希望把重复的数据都去掉。去重需要先了解哪些数据来过，哪些数据还没有来，也就是把所有的主键都记录下来，当一条数据到来后，能够看到在主键当中是否存在。</p></li><li><p>窗口计算：比如统计每分钟 Nginx 日志 API 被访问了多少次。窗口是一分钟计算一次，在窗口触发前，如 08:00 ~ 08:01 这个窗口，前 59 秒的数据来了需要先放入内存，即需要把这个窗口之内的数据先保留下来，等到 8:01 时一分钟后，再将整个窗口内触发的数据输出。未触发的窗口数据也是一种状态。</p></li><li><p>机器学习 / 深度学习：如训练的模型以及当前模型的参数也是一种状态，机器学习可能每次都用有一个数据集，需要在数据集上进行学习，对模型进行一个反馈。</p></li><li><p>访问历史数据：比如与昨天的数据进行对比，需要访问一些历史数据。如果每次从外部去读，对资源的消耗可能比较大，所以也希望把这些历史数据也放入状态中做对比。<br><a name="GzjOf"></a></p><h4 id="2-为什么要管理状态"><a href="#2-为什么要管理状态" class="headerlink" title="2. 为什么要管理状态"></a>2. 为什么要管理状态</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594056124000-7c47840a-5a52-42cf-8c10-32c09505fbbd.png#align=left&display=inline&height=592&margin=%5Bobject%20Object%5D&originHeight=592&originWidth=1058&size=0&status=done&style=none&width=1058" alt><br>管理状态最直接的方式就是将数据都放到内存中，这也是很常见的做法。比如在做 WordCount 时，Word 作为输入，Count 作为输出。在计算的过程中把输入不断累加到 Count。<br><br><br>但对于流式作业有以下要求：</p></li><li><p>7*24 小时运行，高可靠；</p></li><li><p>数据不丢不重，恰好计算一次；</p></li><li><p>数据实时产出，不延迟；</p></li></ul><p><br>基于以上要求，内存的管理就会出现一些问题。由于内存的容量是有限制的。如果要做 24 小时的窗口计算，将 24 小时的数据都放到内存，可能会出现内存不足；另外，作业是 7*24，需要保障高可用，机器若出现故障或者宕机，需要考虑如何备份及从备份中去恢复，保证运行的作业不受影响；此外，考虑横向扩展，假如网站的访问量不高，统计每个 API 访问次数的程序可以用单线程去运行，但如果网站访问量突然增加，单节点无法处理全部访问数据，此时需要增加几个节点进行横向扩展，这时数据的状态如何平均分配到新增加的节点也问题之一。因此，将数据都放到内存中，并不是最合适的一种状态管理方式。<br><a name="p8Qc4"></a></p><h4 id="3-理想的状态管理"><a href="#3-理想的状态管理" class="headerlink" title="3. 理想的状态管理"></a>3. 理想的状态管理</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594056124032-35913185-c7e7-46ce-b404-737edfd54499.png#align=left&display=inline&height=594&margin=%5Bobject%20Object%5D&originHeight=594&originWidth=1060&size=0&status=done&style=none&width=1060" alt><br>最理想的状态管理需要满足易用、高效、可靠三点需求：</p><ul><li><p>易用，Flink 提供了丰富的数据结构、多样的状态组织形式以及简洁的扩展接口，让状态管理更加易用；</p></li><li><p>高效，实时作业一般需要更低的延迟，一旦出现故障，恢复速度也需要更快；当处理能力不够时，可以横向扩展，同时在处理备份时，不影响作业本身处理性能；</p></li><li><p>可靠，Flink 提供了状态持久化，包括不丢不重的语义以及具备自动的容错能力，比如 HA，当节点挂掉后会自动拉起，不需要人工介入。<br><a name="qjnIe"></a></p><h3 id="二-Flink-状态的类型与使用示例"><a href="#二-Flink-状态的类型与使用示例" class="headerlink" title="二.Flink 状态的类型与使用示例"></a>二.Flink 状态的类型与使用示例</h3><p><a name="Q5y64"></a></p><h4 id="1-Managed-State-amp-Raw-State"><a href="#1-Managed-State-amp-Raw-State" class="headerlink" title="1.Managed State &amp; Raw State"></a>1.Managed State &amp; Raw State</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594056123997-7096acee-f04c-4ee7-a407-ae3a6551229e.png#align=left&display=inline&height=595&margin=%5Bobject%20Object%5D&originHeight=595&originWidth=1060&size=0&status=done&style=none&width=1060" alt><br><strong>Managed State 是 Flink 自动管理的 State，而 Raw State 是原生态 State</strong>，两者的区别如下：</p></li><li><p>从状态管理方式的方式来说，Managed State 由 Flink Runtime 管理，自动存储，自动恢复，在内存管理上有优化；而 Raw State 需要用户自己管理，需要自己序列化，Flink 不知道 State 中存入的数据是什么结构，只有用户自己知道，需要最终序列化为可存储的数据结构。</p></li><li><p>从状态数据结构来说，Managed State 支持已知的数据结构，如 Value、List、Map 等。而 Raw State 只支持字节数组 ，所有状态都要转换为二进制字节数组才可以。</p></li><li><p>从推荐使用场景来说，Managed State 大多数情况下均可使用，而 Raw State 是当 Managed State 不够用时，比如需要自定义 Operator 时，推荐使用 Raw State。<br><a name="MRtIn"></a></p><h4 id="2-Keyed-State-amp-Operator-State"><a href="#2-Keyed-State-amp-Operator-State" class="headerlink" title="2.Keyed State &amp; Operator State"></a>2.Keyed State &amp; Operator State</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594056124012-aef1f515-3c6b-45f9-9813-f5714a7aa3ae.png#align=left&display=inline&height=593&margin=%5Bobject%20Object%5D&originHeight=593&originWidth=1057&size=0&status=done&style=none&width=1057" alt><br><strong>Managed State 分为两种，一种是 Keyed State；另外一种是 Operator State。</strong><br><br><br>在 Flink Stream 模型中，Datastream 经过 keyBy 的操作可以变为 KeyedStream 。每个 Key 对应一个 State，即一个 Operator 实例处理多个 Key，访问相应的多个 State，并由此就衍生了 Keyed State。<br><br><br>Keyed State 只能用在 KeyedStream 的算子中，即在整个程序中没有 keyBy 的过程就没有办法使用 KeyedStream。<br><br><br>相比较而言，Operator State 可以用于所有算子，相对于数据源有一个更好的匹配方式，常用于 Source，例如 FlinkKafkaConsumer。相比 Keyed State，一个 Operator 实例对应一个 State，随着并发的改变，Keyed State 中，State 随着 Key 在实例间迁移，比如原来有 1 个并发，对应的 API 请求过来，/api/a 和 /api/b 都存放在这个实例当中；如果请求量变大，需要扩容，就会把 /api/a 的状态和 /api/b 的状态分别放在不同的节点。由于 Operator State 没有 Key，并发改变时需要选择状态如何重新分配。其中内置了 2 种分配方式：一种是均匀分配，另外一种是将所有 State 合并为全量 State 再分发给每个实例。<br><br><br>在访问上，Keyed State 通过 RuntimeContext 访问，这需要 Operator 是一个 Rich Function。Operator State 需要自己实现 CheckpointedFunction 或 ListCheckpointed 接口。在数据结构上，Keyed State 支持的数据结构，比如 ValueState、ListState、ReducingState、AggregatingState 和 MapState；而 Operator State 支持的数据结构相对较少，如 ListState。<br></p></li></ul><p><a name="MfO5f"></a></p><h4 id="3-Keyed-State-amp-Operator-State-区别"><a href="#3-Keyed-State-amp-Operator-State-区别" class="headerlink" title="3.Keyed State &amp; Operator State 区别"></a>3.Keyed State &amp; Operator State 区别</h4><p>接下来我们会在四个维度来区分两种不同的 state：operator state 以及 keyed state。<br><strong>1. 是否存在当前处理的 key（current key）</strong>：operator state 是没有当前 key 的概念，而 keyed state 的数值总是与一个 current key 对应。<br><strong>2. 存储对象是否 on heap</strong>: 目前 operator state backend 仅有一种 on-heap 的实现；而 keyed state backend 有 on-heap 和 off-heap（RocksDB）的多种实现。<br><strong>3. 是否需要手动声明快照（snapshot）和恢复 (restore) 方法</strong>：operator state 需要手动实现 snapshot 和 restore 方法；而 keyed state 则由 backend 自行实现，对用户透明。<br><strong>4. 数据大小</strong>：一般而言，我们认为 operator state 的数据规模是比较小的；认为 keyed state 规模是相对比较大的。需要注意的是，这是一个经验判断，不是一个绝对的判断区分标准。<br><br><br></p><p><a name="7WN1V"></a></p><h4 id="4-Keyed-State-使用示例"><a href="#4-Keyed-State-使用示例" class="headerlink" title="4.Keyed State 使用示例"></a>4.Keyed State 使用示例</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594056124018-5cc36362-6b78-48a8-a53b-bde90d9bcdc4.png#align=left&display=inline&height=595&margin=%5Bobject%20Object%5D&originHeight=595&originWidth=1061&size=0&status=done&style=none&width=1061" alt><br>Keyed State 有很多种，如图为几种 Keyed State 之间的关系。首先 State 的子类中一级子类有 ValueState、MapState、AppendingState。AppendingState 又有一个子类 MergingState。MergingState 又分为 3 个子类分别是 ListState、ReducingState、AggregatingState。这个继承关系使它们的访问方式、数据结构也存在差异。<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594056124045-cfa6640b-3c01-462c-9d67-3a3d34f74f52.png#align=left&display=inline&height=591&margin=%5Bobject%20Object%5D&originHeight=591&originWidth=1057&size=0&status=done&style=none&width=1057" alt><br>几种 Keyed State 的差异具体体现在：</p><ul><li>ValueState 存储单个值，比如 Wordcount，用 Word 当 Key，State 就是它的 Count。这里面的单个值可能是数值或者字符串，作为单个值，访问接口可能有两种，get 和 set。在 State 上体现的是 update(T) / T value()。</li><li>MapState 的状态数据类型是 Map，在 State 上有 put、remove 等。需要注意的是在 MapState 中的 key 和 Keyed state 中的 key 不是同一个。</li><li>ListState 状态数据类型是 List，访问接口如 add、update 等。</li><li>ReducingState 和 AggregatingState 与 ListState 都是同一个父类，但状态数据类型上是单个值，原因在于其中的 add 方法不是把当前的元素追加到列表中，而是把当前元素直接更新进了 Reducing 的结果中。</li><li>AggregatingState 的区别是在访问接口，ReducingState 中 add（T）和 T get() 进去和出来的元素都是同一个类型，但在 AggregatingState 输入的 IN，输出的是 OUT。</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594056124020-c155b729-8696-4b0b-ba68-99fda30b9612.png#align=left&display=inline&height=594&margin=%5Bobject%20Object%5D&originHeight=594&originWidth=1059&size=0&status=done&style=none&width=1059" alt><br>下面以 ValueState 为例，来阐述一下具体如何使用，以状态机的案例来讲解 。<br><a href="https://github.com/apache/flink/blob/master/flink-examples/flink-examples-streaming/src/main/java/org/apache/flink/streaming/examples/statemachine/StateMachineExample.java" target="_blank" rel="external nofollow noopener noreferrer">源代码地址</a><br><br><br>感兴趣的同学可直接查看完整源代码，在此截取部分。如图为 Flink 作业的主方法与主函数中的内容，前面的输入、后面的输出以及一些个性化的配置项都已去掉，仅保留了主干。<br><br><br>首先 events 是一个 DataStream，通过 env.addSource 加载数据进来，接下来有一个 DataStream 叫 alerts，先 keyby 一个 sourceAddress，然后在 flatMap 一个 StateMachineMapper。StateMachineMapper 就是一个状态机，状态机指有不同的状态与状态间有不同的转换关系的结合，以买东西的过程简单举例。首先下订单，订单生成后状态为待付款，当再来一个事件状态付款成功，则事件的状态将会从待付款变为已付款，待发货。已付款，待发货的状态再来一个事件发货，订单状态将会变为配送中，配送中的状态再来一个事件签收，则该订单的状态就变为已签收。在整个过程中，随时都可以来一个事件，取消订单，无论哪个状态，一旦触发了取消订单事件最终就会将状态转移到已取消，至此状态就结束了。<br><br><br>Flink 写状态机是如何实现的？首先这是一个 RichFlatMapFunction，要用 Keyed State getRuntimeContext，getRuntimeContext 的过程中需要 RichFunction，所以需要在 open 方法中获取 currentState ，然后 getState，currentState 保存的是当前状态机上的状态。<br><br><br>如果刚下订单，那么 currentState 就是待付款状态，初始化后，currentState 就代表订单完成。订单来了后，就会走 flatMap 这个方法，在 flatMap 方法中，首先定义一个 State，从 currentState 取出，即 Value，Value 取值后先判断值是否为空，如果 sourceAddress state 是空，则说明没有被使用过，那么此状态应该为刚创建订单的初始状态，即待付款。然后赋值 state = State.Initial，注意此处的 State 是本地的变量，而不是 Flink 中管理的状态，将它的值从状态中取出。接下来在本地又会来一个变量，然后 transition，将事件对它的影响加上，刚才待付款的订单收到付款成功的事件，就会变成已付款，待发货，然后 nextState 即可算出。此外，还需要判断 State 是否合法，比如一个已签收的订单，又来一个状态叫取消订单，会发现已签收订单不能被取消，此时这个状态就会下发，订单状态为非法状态。<br><br><br>如果不是非法的状态，还要看该状态是否已经无法转换，比如这个状态变为已取消时，就不会在有其他的状态再发生了，此时就会从 state 中 clear。clear 是所有的 Flink 管理 keyed state 都有的公共方法，意味着将信息删除，如果既不是一个非法状态也不是一个结束状态，后面可能还会有更多的转换，此时需要将订单的当前状态 update ，这样就完成了 ValueState 的初始化、取值、更新以及清零，在整个过程中状态机的作用就是将非法的状态进行下发，方便下游进行处理。其他的状态也是类似的使用方式。<br><a name="YBpXO"></a></p><h3 id="三-容错机制与故障恢复"><a href="#三-容错机制与故障恢复" class="headerlink" title="三. 容错机制与故障恢复"></a>三. 容错机制与故障恢复</h3><p><a name="sBIcD"></a></p><h4 id="1-状态如何保存及恢复"><a href="#1-状态如何保存及恢复" class="headerlink" title="1. 状态如何保存及恢复"></a>1. 状态如何保存及恢复</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594056124002-fbb53fb6-e25b-4651-87c4-ea2a384b6e52.png#align=left&display=inline&height=595&margin=%5Bobject%20Object%5D&originHeight=595&originWidth=1062&size=0&status=done&style=none&width=1062" alt><br>Flink 状态保存主要依靠 Checkpoint 机制，Checkpoint 会定时制作分布式快照，对程序中的状态进行备份，这里就不在阐述分布式快照具体是如何实现的。分布式快照 Checkpoint 完成后，当作业发生故障了如何去恢复？<br><br><br>假如作业分布跑在 3 台机器上，其中一台挂了。这个时候需要把进程或者线程移到 active 的 2 台机器上，此时还需要将整个作业的所有 Task 都回滚到最后一次成功 Checkpoint 中的状态，然后从该点开始继续处理。<br><br><br>如果要从 Checkpoint 恢复，必要条件是数据源需要支持数据重新发送。Checkpoint 恢复后， Flink 提供两种一致性语义，一种是恰好一次，一种是至少一次。在做 Checkpoint 时，可根据 Barries 对齐来判断是恰好一次还是至少一次，如果对齐，则为恰好一次，否则没有对齐即为至少一次。如果作业是单线程处理，也就是说 Barries 是不需要对齐的；如果只有一个 Checkpoint 在做，不管什么时候从 Checkpoint 恢复，都会恢复到刚才的状态；如果有多个节点，假如一个数据的 Barries 到了，另一个 Barries 还没有来，内存中的状态如果已经存储。那么这 2 个流是不对齐的，恢复的时候其中一个流可能会有重复。<br><br><br>Checkpoint 通过代码的实现方法如下：</p><ul><li>首先从作业的运行环境 env.enableCheckpointing 传入 1000，意思是做 2 个 Checkpoint 的事件间隔为 1 秒。Checkpoint 做的越频繁，恢复时追数据就会相对减少，同时 Checkpoint 相应的也会有一些 IO 消耗。</li><li>接下来是设置 Checkpoint 的 model，即设置了 Exactly_Once 语义，并且需要 Barries 对齐，这样可以保证消息不会丢失也不会重复。</li><li>setMinPauseBetweenCheckpoints 是 2 个 Checkpoint 之间最少是要等 500ms，也就是刚做完一个 Checkpoint。比如某个 Checkpoint 做了 700ms，按照原则过 300ms 应该是做下一个 Checkpoint，因为设置了 1000ms 做一次 Checkpoint 的，但是中间的等待时间比较短，不足 500ms 了，需要多等 200ms，因此以这样的方式防止 Checkpoint 太过于频繁而导致业务处理的速度下降。</li><li>setCheckpointTimeout 表示做 Checkpoint 多久超时，如果 Checkpoint 在 1min 之内尚未完成，说明 Checkpoint 超时失败。<br>setMaxConcurrentCheckpoints 表示同时有多少个 Checkpoint 在做快照，这个可以根据具体需求去做设置。</li><li>enableExternalizedCheckpoints 表示下 Cancel 时是否需要保留当前的 Checkpoint，默认 Checkpoint 会在整个作业 Cancel 时被删除。Checkpoint 是作业级别的保存点。</li></ul><p><br>上面讲过，除了故障恢复之外，还需要可以手动去调整并发重新分配这些状态。手动调整并发，必须要重启作业并会提示 Checkpoint 已经不存在，那么作业如何恢复数据？<br><br><br>一方面 Flink 在 Cancel 时允许在外部介质保留 Checkpoint ；另一方面，Flink 还有另外一个机制是 SavePoint。<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594056126709-c2281720-3121-45c4-8f5c-f0d82fcdd9a0.png#align=left&display=inline&height=592&margin=%5Bobject%20Object%5D&originHeight=592&originWidth=1058&size=0&status=done&style=none&width=1058" alt><br>Savepoint 与 Checkpoint 类似，同样是把状态存储到外部介质。当作业失败时，可以从外部恢复。Savepoint 与 Checkpoint 有什么区别呢？</p><ul><li><p>从触发管理方式来讲，Checkpoint 由 Flink 自动触发并管理，而 Savepoint 由用户手动触发并人肉管理；</p></li><li><p>从用途来讲，Checkpoint 在 Task 发生异常时快速恢复，例如网络抖动或超时异常，而 Savepoint 有计划地进行备份，使作业能停止后再恢复，例如修改代码、调整并发；</p></li><li><p>最后从特点来讲，Checkpoint 比较轻量级，作业出现问题会自动从故障中恢复，在作业停止后默认清除；而 Savepoint 比较持久，以标准格式存储，允许代码或配置发生改变，恢复需要启动作业手动指定一个路径恢复。<br><a name="SRvWd"></a></p><h4 id="2-可选的状态存储方式"><a href="#2-可选的状态存储方式" class="headerlink" title="2. 可选的状态存储方式"></a>2. 可选的状态存储方式</h4><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594056126684-3aaf0d05-24ea-4444-b3ab-0fce128465c4.png#align=left&display=inline&height=594&margin=%5Bobject%20Object%5D&originHeight=594&originWidth=1060&size=0&status=done&style=none&width=1060" alt><br>Checkpoint 的存储，第一种是内存存储，即 MemoryStateBackend，构造方法是设置最大的 StateSize，选择是否做异步快照，这种存储状态本身存储在 TaskManager 节点也就是执行节点内存中的，因为内存有容量限制，所以单个 State maxStateSize 默认 5 M，且需要注意 maxStateSize &lt;= akka.framesize 默认 10 M。Checkpoint 存储在 JobManager 内存中，因此总大小不超过 JobManager 的内存。<strong>推荐使用的场景为：本地测试、几乎无状态的作业，比如 ETL、JobManager 不容易挂，或挂掉影响不大的情况。不推荐在生产场景使用。</strong><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594056126985-20e0d490-8a3b-4b15-b3d4-856d19b5e5d2.png#align=left&display=inline&height=592&margin=%5Bobject%20Object%5D&originHeight=592&originWidth=1059&size=0&status=done&style=none&width=1059" alt><br>另一种就是在文件系统上的 FsStateBackend ，构建方法是需要传一个文件路径和是否异步快照。State 依然在 TaskManager 内存中，但不会像 MemoryStateBackend 有 5 M 的设置上限，Checkpoint 存储在外部文件系统（本地或 HDFS），打破了总大小 Jobmanager 内存的限制。容量限制上，单 TaskManager 上 State 总量不超过它的内存，总大小不超过配置的文件系统容量。<strong>推荐使用的场景、常规使用状态的作业、例如分钟级窗口聚合或 join、需要开启 HA 的作业。</strong><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594056126760-b3f5d051-6ee0-4e74-bf97-a67f770cba8d.png#align=left&display=inline&height=593&margin=%5Bobject%20Object%5D&originHeight=593&originWidth=1060&size=0&status=done&style=none&width=1060" alt><br>还有一种存储为 RocksDBStateBackend ，RocksDB 是一个 key/value 的内存存储系统，和其他的 key/value 一样，先将状态放到内存中，如果内存快满时，则写入到磁盘中，但需要注意 RocksDB 不支持同步的 Checkpoint，构造方法中没有同步快照这个选项。不过 RocksDB 支持增量的 Checkpoint，也是目前唯一增量 Checkpoint 的 Backend，意味着每次用户不需要将所有状态都写进去，将增量的改变的状态写进去即可。它的 Checkpoint 存储在外部文件系统（本地或 HDFS），其容量限制只要单个 TaskManager 上 State 总量不超过它的内存 + 磁盘，单 Key 最大 2G，总大小不超过配置的文件系统容量即可。<strong>推荐使用的场景为：超大状态的作业，例如天级窗口聚合、需要开启 HA 的作业、最好是对状态读写性能要求不高的作业。</strong><br>**<br><a name="Os3oT"></a></p><h4 id="3-StateBackend-的分类"><a href="#3-StateBackend-的分类" class="headerlink" title="3. StateBackend 的分类"></a>3. StateBackend 的分类</h4><p>下面这张图对目前广泛使用的三类 state backend 做了区分，其中绿色表示所创建的operator/keyed state backend 是 on-heap 的，黄色则表示是 off-heap 的。<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594057497686-7867c701-5353-4e0e-837c-44ba5ecad74a.png#align=left&display=inline&height=433&margin=%5Bobject%20Object%5D&originHeight=433&originWidth=899&size=0&status=done&style=none&width=899" alt><br><br><br>一般而言，在生产中，我们会在 FsStateBackend 和 RocksDBStateBackend 间选择：</p></li><li><p><strong>FsStateBackend</strong>：性能更好；日常存储是在堆内存中，面临着 OOM 的风险，不支持增量 checkpoint。</p></li><li><p><strong>RocksDBStateBackend</strong>：无需担心 OOM 风险，是大部分时候的选择。<br><a name="DhXl8"></a></p><h4 id="4-RocksDB-StateBackend-概览和相关配置讨论"><a href="#4-RocksDB-StateBackend-概览和相关配置讨论" class="headerlink" title="4.RocksDB StateBackend 概览和相关配置讨论"></a>4.RocksDB StateBackend 概览和相关配置讨论</h4></li></ul><p><br>RocksDB 是 Facebook 开源的 LSM 的键值存储数据库，被广泛应用于大数据系统的单机组件中。Flink 的 keyed state 本质上来说就是一个键值对，所以与 RocksDB 的数据模型是吻合的。下图分别是 “window state” 和 “value state” 在 RocksDB 中的存储格式，所有存储的 key，value 均被序列化成 bytes 进行存储。<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594057497724-6e1a4f76-caf1-4825-bebc-a3953a52bbe2.png#align=left&display=inline&height=352&margin=%5Bobject%20Object%5D&originHeight=352&originWidth=899&size=0&status=done&style=none&width=899" alt><br><br><br>在 RocksDB 中，每个 state 独享一个 Column Family，而每个 Column family 使用各自独享的 write buffer 和 block cache，上图中的 window state 和 value state实际上分属不同的 column family。<br><br><br>下面介绍一些对 RocksDB 性能比较有影响的参数，并整理了一些相关的推荐配置，至于其他配置项，可以参阅社区相关文档。</p><table><thead><tr><th align="left">状态</th><th align="left">建议</th></tr></thead><tbody><tr><td align="left">state.backend.rocksdb.thread.num</td><td align="left">后台 flush 和 compaction 的线程数. 默认值 ‘1‘. 建议调大</td></tr><tr><td align="left">state.backend.rocksdb.writebuffer.count</td><td align="left">每个 column family 的 write buffer 数目，默认值 ‘2‘. 如果有需要可以适当调大</td></tr><tr><td align="left">state.backend.rocksdb.writebuffer.size</td><td align="left">每个 write buffer 的 size，默认值‘64MB‘. 对于写频繁的场景，建议调大</td></tr><tr><td align="left">state.backend.rocksdb.block.cache-size</td><td align="left">每个 column family 的 block cache大小，默认值‘8MB’，如果存在重复读的场景，建议调大</td></tr></tbody></table><p><a name="vzbHq"></a></p><h4 id="5-State-best-practice：一些使用-state-的心得"><a href="#5-State-best-practice：一些使用-state-的心得" class="headerlink" title="5.State best practice：一些使用 state 的心得"></a>5.State best practice：一些使用 state 的心得</h4><p><strong><br></strong>Operator state 使用建议<strong><br></strong>■ 慎重使用长 list<strong><br>下图展示的是目前 task 端 operator state 在执行完 checkpoint 返回给 job master 端的 StateMetaInfo 的代码片段。<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594057497758-3d0e807f-2d61-4a67-8832-a36b79df83e1.png#align=left&display=inline&height=360&margin=%5Bobject%20Object%5D&originHeight=360&originWidth=899&size=0&status=done&style=none&width=899" alt><br>由于 operator state 没有 key group 的概念，所以为了实现改并发恢复的功能，需要对 operator state 中的每一个序列化后的元素存储一个位置偏移 offset，也就是构成了上图红框中的 offset 数组。<br><br><br>那么如果你的 operator state 中的 list 长度达到一定规模时，这个 offset 数组就可能会有几十 MB 的规模，关键这个数组是会返回给 job master，当 operator 的并发数目很大时，很容易触发 job master 的内存超用问题。我们遇到过用户把 operator state 当做黑名单存储，结果这个黑名单规模很大，导致一旦开始执行 checkpoint，job master 就会因为收到 task 发来的“巨大”的 offset 数组，而内存不断增长直到超用无法正常响应。<br><br><br></strong>■ 正确使用 UnionListState**<br>union list state 目前被广泛使用在 kafka connector 中，不过可能用户日常开发中较少遇到，他的语义是从检查点恢复之后每个并发 task 内拿到的是原先所有operator 上的 state，如下图所示：<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594057497684-0428bc6e-1918-4fb8-8f60-a6e9250996f8.png#align=left&display=inline&height=327&margin=%5Bobject%20Object%5D&originHeight=327&originWidth=849&size=0&status=done&style=none&width=849" alt><br>kafka connector 使用该功能，为的是从检查点恢复时，可以拿到之前的全局信息，如果用户需要使用该功能，需要切记恢复的 task 只取其中的一部分进行处理和用于下一次 snapshot，否则有可能随着作业不断的重启而导致 state 规模不断增长。<br></p><p><a name="bTLj1"></a></p><h4 id="6-Keyed-state-使用建议"><a href="#6-Keyed-state-使用建议" class="headerlink" title="6. Keyed state 使用建议"></a>6. Keyed state 使用建议</h4><p><strong>■ 如何正确清空当前的 state</strong><br>state.clear() 实际上只能清理当前 key 对应的 value 值，如果想要清空整个 state，需要借助于 applyToAllKeys 方法，具体代码片段如下：<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594057497725-7614e5f7-ed39-4112-84d8-9a6689875966.png#align=left&display=inline&height=168&margin=%5Bobject%20Object%5D&originHeight=168&originWidth=899&size=0&status=done&style=none&width=899" alt><br>如果你的需求中只是对 state 有过期需求，借助于 state TTL 功能来清理会是一个性能更好的方案。<br><strong>■ RocksDB 中考虑 value 值很大的极限场景</strong><br>受限于 JNI bridge API 的限制，单个 value 只支持 2^31 bytes 大小，如果存在很极限的情况，可以考虑使用 MapState 来替代 ListState 或者 ValueState，因为RocksDB 的 map state 并不是将整个 map 作为 value 进行存储，而是将 map 中的一个条目作为键值对进行存储。<br><strong>■ 如何知道当前 RocksDB 的运行情况</strong><br>比较直观的方式是打开 RocksDB 的 native metrics ，在默认使用 Flink managed memory 方式的情况下，state.backend.rocksdb.metrics.block-cache-usage ，state.backend.rocksdb.metrics.mem-table-flush-pending，state.backend.rocksdb.metrics.num-running-compactions 以及 state.backend.rocksdb.metrics.num-running-flushes 是比较重要的相关 metrics。<br>下面这张图是 Flink-1.10 之后，打开相关 metrics 的示例图：<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594057497735-408964c0-efb8-4ad1-a162-ace3cc1ab7b5.png#align=left&display=inline&height=506&margin=%5Bobject%20Object%5D&originHeight=506&originWidth=899&size=0&status=done&style=none&width=899" alt><br><br><br>而下面这张是 Flink-1.10 之前或者关闭 state.backend.rocksdb.memory.managed 的效果：<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1594057497739-56972272-4605-48e1-b24c-59f9b57c7117.png#align=left&display=inline&height=504&margin=%5Bobject%20Object%5D&originHeight=504&originWidth=899&size=0&status=done&style=none&width=899" alt><br><strong>■ 容器内运行的 RocksDB 的内存超用问题</strong><br>在 Flink-1.10 之前，由于一个 state 独占若干 write buffer 和一块 block cache，所以我们会建议用户不要在一个 operator 内创建过多的 state，否则需要考虑到相应的额外内存使用量，否则容易造成在容器内运行时，相关进程被容器环境所杀。对于用户来说，需要考虑一个 slot 内有多少 RocksDB 实例在运行，一个 RocksDB 中有多少 state，整体的计算规则就很复杂，很难真得落地实施。<br>Flink-1.10 之后，由于引入了 RocksDB 的内存托管机制，在绝大部分情况下， RocksDB 的这一部分 native 内存是可控的，不过受限于 RocksDB 的相关 cache 实现限制（这里暂不展开，后续会有文章讨论），在某些场景下，无法做到完美控制，这时候建议打开上文提到的 native metrics，观察相关 block cache 内存使用是否存在超用情况，可以将相关内存添加到 taskmanager.memory.task.off-heap.size 中，使得 Flink 有更多的空间给 native 内存使用。<br><a name="u4FoX"></a></p><h4 id="7-一些使用-checkpoint-的使用建议"><a href="#7-一些使用-checkpoint-的使用建议" class="headerlink" title="7.一些使用 checkpoint 的使用建议"></a>7.一些使用 checkpoint 的使用建议</h4><p><strong>■ Checkpoint 间隔不要太短</strong><br>虽然理论上 Flink 支持很短的 checkpoint 间隔，但是在实际生产中，过短的间隔对于底层分布式文件系统而言，会带来很大的压力。另一方面，由于检查点的语义，所以实际上 Flink 作业处理 record 与执行 checkpoint 存在互斥锁，过于频繁的 checkpoint，可能会影响整体的性能。当然，这个建议的出发点是底层分布式文件系统的压力考虑。<br><strong>■ 合理设置超时时间</strong><br>默认的超时时间是 10min，如果 state 规模大，则需要合理配置。最坏情况是分布式地创建速度大于单点（job master 端）的删除速度，导致整体存储集群可用空间压力较大。建议当检查点频繁因为超时而失败时，增大超时时间。<br>**<br><a name="tGfXq"></a></p><h3 id="四-总结"><a href="#四-总结" class="headerlink" title="四. 总结"></a>四. 总结</h3><p><a name="kI5n4"></a></p><h4 id="1-为什么要使用状态？"><a href="#1-为什么要使用状态？" class="headerlink" title="1. 为什么要使用状态？"></a>1. 为什么要使用状态？</h4><p>前面提到有状态的作业要有有状态的逻辑，有状态的逻辑是因为数据之间存在关联，单条数据是没有办法把所有的信息给表现出来。所以需要通过状态来满足业务逻辑。<br><a name="8jglw"></a></p><h4 id="2-为什么要管理状态？"><a href="#2-为什么要管理状态？" class="headerlink" title="2. 为什么要管理状态？"></a>2. 为什么要管理状态？</h4><p>使用了状态，为什么要管理状态？因为实时作业需要 7*24 不间断的运行，需要应对不可靠的因素而带来的影响。<br><a name="CK5Ia"></a></p><h4 id="3-如何选择状态的类型和存储方式？"><a href="#3-如何选择状态的类型和存储方式？" class="headerlink" title="3. 如何选择状态的类型和存储方式？"></a>3. 如何选择状态的类型和存储方式？</h4><p>那如何选择状态的类型和存储方式？结合前面的内容，可以看到，首先是要分析清楚业务场景；比如想要做什么，状态到底大不大。比较各个方案的利弊，选择根据需求合适的状态类型和存储方式即可。<br><br><br>转载自：<a href="https://developer.aliyun.com/article/756955" target="_blank" rel="external nofollow noopener noreferrer">Flink State 最佳实践</a><br><a href="https://www.infoq.cn/article/VGKZA-S9fMBgABP71Pgh" target="_blank" rel="external nofollow noopener noreferrer">Apache Flink 零基础入门（六）：状态管理及容错机制</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;我们先回顾一下到底什么是 state，流式计算的数据往往是转瞬即逝， 当然，真实业务场景不可能说所有的数据都是进来之后就走掉，没有任何东西留下来
      
    
    </summary>
    
    
      <category term="大数据" scheme="cpeixin.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="flink" scheme="cpeixin.cn/tags/flink/"/>
    
  </entry>
  
  <entry>
    <title>def neverGrowUp()</title>
    <link href="cpeixin.cn/2020/04/06/def-neverGrowUp/"/>
    <id>cpeixin.cn/2020/04/06/def-neverGrowUp/</id>
    <published>2020-04-05T16:00:00.000Z</published>
    <updated>2020-04-05T15:10:24.541Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">neverGrowUp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">while</span> <span class="title">true</span>:</span></span><br><span class="line">开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心</span><br><span class="line">开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心</span><br><span class="line">开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心</span><br><span class="line">开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心</span><br><span class="line">开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心</span><br><span class="line">开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心</span><br><span class="line">开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心开心</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>抗疫英雄</title>
    <link href="cpeixin.cn/2020/04/04/%E6%8A%97%E7%96%AB%E8%8B%B1%E9%9B%84/"/>
    <id>cpeixin.cn/2020/04/04/%E6%8A%97%E7%96%AB%E8%8B%B1%E9%9B%84/</id>
    <published>2020-04-04T14:45:15.000Z</published>
    <updated>2020-04-05T14:46:33.308Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --><p>致敬缅怀每一位抗疫英雄<br><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/1072113/1586098032229-b4c6c795-bf87-4105-8f82-87a86e48a89a.jpeg#align=left&display=inline&height=1796&name=WechatIMG86.jpeg&originHeight=1796&originWidth=1072&size=175464&status=done&style=none&width=1072" alt="WechatIMG86.jpeg"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;致敬缅怀每一位抗疫英雄&lt;br&gt;&lt;img src=&quot;https://cdn.nlark.com/yuque/0/2020/jpeg/1072113
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>python Flask &amp; Ajax 数据传输</title>
    <link href="cpeixin.cn/2020/03/11/python-Flask-Ajax-%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93/"/>
    <id>cpeixin.cn/2020/03/11/python-Flask-Ajax-%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93/</id>
    <published>2020-03-11T14:43:01.000Z</published>
    <updated>2020-04-04T17:13:00.080Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --><p>帮朋友写个小工具，没想到还要搞定JS，大学毕业后就没有写过JS，真的是难为我了😂</p><p>忙活三个小时，终于把前端和后端打通了～～</p><p>前端demo：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 发送数据，表单方式 （注意：后端接收数据对应代码不同）--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"&#123;&#123; url_for('send_message') &#125;&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span> =<span class="string">"domain"</span> <span class="attr">rows</span>=<span class="string">"30"</span> <span class="attr">cols</span>=<span class="string">"100"</span> <span class="attr">placeholder</span>=<span class="string">"请输入需要查询的域名,如cq5999.com"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;input id="submit" type="submit" value="发送"&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">id</span>=<span class="string">"btn-bq"</span> <span class="attr">data-toggle</span>=<span class="string">"modal"</span> <span class="attr">data-target</span>=<span class="string">"#myModal"</span>&gt;</span>查询<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 发送数据，input方式 （注意：后端接收数据对应代码不同） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"send_content"</span>&gt;</span>向后台发送消息：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"send_content"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"send_content"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"send"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"发送"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"recv_content"</span>&gt;</span>从后台接收消息：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"recv_content"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"recv_content"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- input方式 对应的js代码，如用表单方式请注释掉 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 发送 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#send"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> message = $(<span class="string">"#send_content"</span>).val()</span></span><br><span class="line">        alert(message)</span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">            url:<span class="string">"/send_message"</span>,</span></span><br><span class="line"><span class="actionscript">            type:<span class="string">"POST"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line">                message:message</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            dataType: <span class="string">'json'</span>,</span></span><br><span class="line"><span class="actionscript">            success:<span class="function"><span class="keyword">function</span> <span class="params">(data)</span> </span>&#123;</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 接收 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#send"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $.getJSON(<span class="string">"/change_to_json"</span>,<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#recv_content"</span>).val(data.message) <span class="comment">//将后端数据显示在前端</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"传到前端的数据的类型："</span> + <span class="keyword">typeof</span> (data.message))</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#send_content"</span>).val(<span class="string">""</span>)<span class="comment">//发送的输入框清空</span></span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>后端demo:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request, jsonify</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"index_v6.html"</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/send_message', methods=['POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_message</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> message_get</span><br><span class="line">    message_get = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">    message_get = request.form[<span class="string">"domain"</span>].split(<span class="string">'\n'</span>)</span><br><span class="line">    <span class="comment"># message_get = request.form['message'] #input提交</span></span><br><span class="line">    print(<span class="string">"收到前端发过来的信息：%s"</span> % message_get)</span><br><span class="line">    print(<span class="string">"收到数据的类型为："</span> + str(type(message_get)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"收到消息"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/change_to_json', methods=['GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change_to_json</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">global</span> message_get</span><br><span class="line">    message_json = &#123;</span><br><span class="line">        <span class="string">"message"</span>: message_get</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jsonify(message_json)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>, port=<span class="number">80</span>,debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;帮朋友写个小工具，没想到还要搞定JS，大学毕业后就没有写过JS，真的是难为我了😂&lt;/p&gt;&lt;p&gt;忙活三个小时，终于把前端和后端打通了～～&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="python" scheme="cpeixin.cn/categories/python/"/>
    
    
      <category term="flask" scheme="cpeixin.cn/tags/flask/"/>
    
  </entry>
  
  <entry>
    <title>Python Flask接口设计-示例</title>
    <link href="cpeixin.cn/2020/03/10/Python-Flask%E6%8E%A5%E5%8F%A3%E8%AE%BE%E8%AE%A1-%E7%A4%BA%E4%BE%8B/"/>
    <id>cpeixin.cn/2020/03/10/Python-Flask%E6%8E%A5%E5%8F%A3%E8%AE%BE%E8%AE%A1-%E7%A4%BA%E4%BE%8B/</id>
    <published>2020-03-10T15:08:35.000Z</published>
    <updated>2020-04-04T17:12:52.356Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --><p><a name="LHF1q"></a></p><h3 id="Get-请求"><a href="#Get-请求" class="headerlink" title="Get 请求"></a>Get 请求</h3><p><strong><strong>开发一个只接受get方法的接口，接受参数为name和age，并返回相应内容。</strong></strong><br><strong><br>**</strong>方法 1:****</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> redirect</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> jsonify</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/test_1.0", methods=["GET"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">()</span>:</span></span><br><span class="line">  <span class="comment"># 默认返回内容</span></span><br><span class="line">  return_dict = &#123;<span class="string">'return_code'</span>: <span class="string">'200'</span>, <span class="string">'return_info'</span>: <span class="string">'处理成功'</span>, <span class="string">'result'</span>: <span class="literal">False</span>&#125;</span><br><span class="line">  <span class="comment"># 判断入参是否为空</span></span><br><span class="line">  <span class="keyword">if</span> request.args <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    return_dict[<span class="string">'return_code'</span>] = <span class="string">'5004'</span></span><br><span class="line">    return_dict[<span class="string">'return_info'</span>] = <span class="string">'请求参数为空'</span></span><br><span class="line">    <span class="keyword">return</span> json.dumps(return_dict, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">  <span class="comment"># 获取传入的params参数</span></span><br><span class="line">  get_data = request.args.to_dict()</span><br><span class="line">  name = get_data.get(<span class="string">'name'</span>)</span><br><span class="line">  age = get_data.get(<span class="string">'age'</span>)</span><br><span class="line">  <span class="comment"># 对参数进行操作</span></span><br><span class="line">  return_dict[<span class="string">'result'</span>] = tt(name, age)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> json.dumps(return_dict, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 功能函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tt</span><span class="params">(name, age)</span>:</span></span><br><span class="line">  result_str = <span class="string">"%s今年%s岁"</span> % (name, age)</span><br><span class="line">  <span class="keyword">return</span> result_str</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">  app.run(host=<span class="string">'0.0.0.0'</span>, port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure><p>此种方式对应的request请求方式：</p><ol><li>拼接请求链接, 直接请求：<a href="http://0.0.0.0/test_1.0?name=ccc&age=18" target="_blank" rel="external nofollow noopener noreferrer">http://0.0.0.0/test_1.0?name=ccc&amp;age=18</a></li><li>request 请求中带有参数，如下图</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1583826674613-bc99538a-988e-4386-b8e6-9eb9fce1862f.png#align=left&display=inline&height=610&name=%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-03-10%20%E4%B8%8B%E5%8D%883.47.43.png&originHeight=610&originWidth=1424&size=98593&status=done&style=none&width=1424" alt="屏幕快照 2020-03-10 下午3.47.43.png"></p><p>方法 2:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/api/banWordSingle/&lt;string:word&gt;', methods=['GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">banWordSingleStart</span><span class="params">(word)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> getWordStatus(word)</span><br></pre></td></tr></table></figure><p>此方法 与 方法 1 中的拼接链接相似，但是不用输入关键字</p><p>请求链接：<a href="http://0.0.0.0/test_1.0?name=ccc&age=18" target="_blank" rel="external nofollow noopener noreferrer">http://0.0.0.0</a>/api/banWordSingle/输入词</p><p><a name="vJdOc"></a></p><h3 id="Post-请求"><a href="#Post-请求" class="headerlink" title="Post 请求"></a>Post 请求</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> redirect</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> jsonify</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/test_1.0", methods=["POST"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">()</span>:</span></span><br><span class="line">  <span class="comment"># 默认返回内容</span></span><br><span class="line">  return_dict = &#123;<span class="string">'return_code'</span>: <span class="string">'200'</span>, <span class="string">'return_info'</span>: <span class="string">'处理成功'</span>, <span class="string">'result'</span>: <span class="literal">False</span>&#125;</span><br><span class="line">  <span class="comment"># 判断入参是否为空</span></span><br><span class="line">  <span class="keyword">if</span> request.args <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    return_dict[<span class="string">'return_code'</span>] = <span class="string">'5004'</span></span><br><span class="line">    return_dict[<span class="string">'return_info'</span>] = <span class="string">'请求参数为空'</span></span><br><span class="line">    <span class="keyword">return</span> json.dumps(return_dict, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">  <span class="comment"># 获取传入的params参数</span></span><br><span class="line">  get_data = request.args.to_dict()</span><br><span class="line">  name = get_data.get(<span class="string">'name'</span>)</span><br><span class="line">  age = get_data.get(<span class="string">'age'</span>)</span><br><span class="line">  <span class="comment"># 对参数进行操作</span></span><br><span class="line">  return_dict[<span class="string">'result'</span>] = tt(name, age)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> json.dumps(return_dict, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 功能函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tt</span><span class="params">(name, age)</span>:</span></span><br><span class="line">  result_str = <span class="string">"%s今年%s岁"</span> % (name, age)</span><br><span class="line">  <span class="keyword">return</span> result_str</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">  app.run(host=<span class="string">'0.0.0.0'</span>, port=<span class="number">8080</span>)</span><br></pre></td></tr></table></figure><p>请求方式：</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1583831085097-3a858ae4-259d-408d-a162-6a4ed8c5e291.png#align=left&display=inline&height=692&name=%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-03-10%20%E4%B8%8B%E5%8D%885.00.28.png&originHeight=692&originWidth=1438&size=99272&status=done&style=none&width=1438" alt="屏幕快照 2020-03-10 下午5.00.28.png"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;a name=&quot;LHF1q&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3 id=&quot;Get-请求&quot;&gt;&lt;a href=&quot;#Get-请求&quot; class=&quot;headerl
      
    
    </summary>
    
    
      <category term="python" scheme="cpeixin.cn/categories/python/"/>
    
    
      <category term="flask" scheme="cpeixin.cn/tags/flask/"/>
    
  </entry>
  
  <entry>
    <title>Flink 1.10版本发布</title>
    <link href="cpeixin.cn/2020/02/13/Flink-1-10%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%83/"/>
    <id>cpeixin.cn/2020/02/13/Flink-1-10%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%83/</id>
    <published>2020-02-12T17:22:22.000Z</published>
    <updated>2020-06-03T14:38:01.179Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --><p><br>Apache Flink社区很高兴能达到两位数并宣布发布Flink 1.10.0！由于迄今为止社区最大的努力，已实施了1.2k个问题，贡献了200多个贡献者，此版本引入了对Flink作业的整体性能和稳定性的重大改进，原生Kubernetes集成的预览以及Python支持的巨大进步（PyFlink）。(Spark对Python的支持也越来越好😂)<br><br><br>Flink 1.10还标志着<a href="https://flink.apache.org/news/2019/08/22/release-1.9.0.html#preview-of-the-new-blink-sql-query-processor" target="_blank" rel="external nofollow noopener noreferrer">Blink集成</a>的完成，强化了流数据SQL并通过可用于生产的Hive集成和TPC-DS覆盖将成熟的批处理引入Flink。这篇博客文章描述了所有主要的新功能和改进，需要注意的重要更改以及预期的发展。<br><br><br>现在可以在Flink网站的更新的“ <a href="https://flink.apache.org/downloads.html" target="_blank" rel="external nofollow noopener noreferrer">下载”页面</a>上找到二进制分发文件和源工件。有关更多详细信息，请查看完整的<a href="https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12315522&version=12345845" target="_blank" rel="external nofollow noopener noreferrer">发行变更日志</a>和<a href="https://ci.apache.org/projects/flink/flink-docs-release-1.10/" target="_blank" rel="external nofollow noopener noreferrer">更新的文档</a>。我们鼓励您下载发行版，并通过<a href="https://flink.apache.org/community.html#mailing-lists" target="_blank" rel="external nofollow noopener noreferrer">Flink邮件列表</a>或<a href="https://issues.apache.org/jira/projects/FLINK/summary" target="_blank" rel="external nofollow noopener noreferrer">JIRA</a>与社区分享您的反馈。</p><hr><p><a name="JxUa7"></a></p><h2 id="新功能和改进"><a href="#新功能和改进" class="headerlink" title="新功能和改进"></a>新功能和改进</h2><p><a name="improved-memory-management-and-configuration"></a></p><h3><a href="#" class="headerlink"></a></h3><p><a name="ze04S"></a></p><h3 id="改进的内存管理和配置"><a href="#改进的内存管理和配置" class="headerlink" title="改进的内存管理和配置"></a>改进的内存管理和配置</h3><p><br>目前Flink中的TaskExecutor内存配置存在一些缺点，这些缺点使得难以推理或优化资源利用率，例如：</p><ul><li>流处理和批处理执行中用于内存占用的不同配置模型；<br></li><li>流处理执行中堆外状态后端（即RocksDB）的复杂且依赖用户的配置。<br></li></ul><p><br>为了使内存选项对用户更明确和直观，Flink 1.10对TaskExecutor内存模型和配置逻辑（<a href="https://cwiki.apache.org/confluence/display/FLINK/FLIP-49%3A+Unified+Memory+Configuration+for+TaskExecutors" target="_blank" rel="external nofollow noopener noreferrer">FLIP-49</a>）进行了重大更改。这些更改使Flink更适合于各种部署环境（例如Kubernetes，Yarn，Mesos），从而使用户可以严格控制其内存消耗。<br><br><br><strong>托管内存扩展</strong><br><br><br>托管内存已经扩展扩展，当然还考虑了RocksDB StateBackend的内存使用情况。虽然批处理作业可以使用堆内（on-heap）或堆外（off-heap）内存，但具有这些功能的流作业RocksDBStateBackend只能使用堆内内存。因此，为了允许用户在流执行和批处理执行之间切换而不必修改群集配置，托管内存现在始终处于堆外状态。<br><br><br><strong>简化RocksDB配置</strong><br>**<br>曾经配置像RocksDB这样的off-heap (堆外)state backend涉及大量的手动调整，例如减小JVM堆大小或将Flink设置为使用堆外内存。现在可以通过Flink的现成配置来实现，并且调整RocksDBStateBackend内存预算就像调整内存大小一样简单。<br><br><br>另一个重要的改进是允许Flink绑定RocksDB本地内存使用情况（<a href="https://issues.apache.org/jira/browse/FLINK-7289" target="_blank" rel="external nofollow noopener noreferrer">FLINK-7289</a>），从而防止其超出总内存预算-这在Kubernetes等容器化环境中尤其重要。有关如何启用和调整此功能的详细信息，请参阅<a href="https://ci.apache.org/projects/flink/flink-docs-release-1.10/ops/state/large_state_tuning.html#tuning-rocksdb" target="_blank" rel="external nofollow noopener noreferrer">Tuning RocksDB</a>。<br>注意 FLIP-49更改了群集资源配置的过程，这可能需要调整群集以从以前的Flink版本进行升级。有关所引入更改和调整指南的全面概述，请参阅<a href="https://ci.apache.org/projects/flink/flink-docs-release-1.10/ops/memory/mem_setup.html" target="_blank" rel="external nofollow noopener noreferrer">此设置</a>。<br></p><p><a name="unified-logic-for-job-submission"></a></p><h3 id="提交作业的统一逻辑"><a href="#提交作业的统一逻辑" class="headerlink" title="提交作业的统一逻辑"></a>提交作业的统一逻辑</h3><p><br>在此版本之前，提交作业是执行环境的一部分职责，并且与不同的部署目标（例如，Yarn，Kubernetes，Mesos）紧密相关。这导致关注点分离不佳，并且随着时间的流逝，用户需要单独配置和管理的定制环境越来越多。<br><br><br>在Flink 1.10中，作业提交逻辑被抽象到通用Executor接口（<a href="https://cwiki.apache.org/confluence/display/FLINK/FLIP-73%3A+Introducing+Executors+for+job+submission" target="_blank" rel="external nofollow noopener noreferrer">FLIP-73</a>）中。另外ExecutorCLI（<a href="https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=133631524" target="_blank" rel="external nofollow noopener noreferrer">FLIP-81</a>）引入了一个统一的方式去指定配置参数对于任何 <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.10/ops/cli.html#deployment-targets" target="_blank" rel="external nofollow noopener noreferrer">执行对象</a>。为了完善这项工作，结果检索的过程也与作业提交分离，引入了JobClient（<a href="https://cwiki.apache.org/confluence/display/FLINK/FLIP-74%3A+Flink+JobClient+API" target="_blank" rel="external nofollow noopener noreferrer">FLINK-74</a>）来负责获取JobExecutionResult。<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1590943394674-2fd89b17-b61e-4180-986d-72062c95f4d4.png#align=left&display=inline&height=334&margin=%5Bobject%20Object%5D&originHeight=789&originWidth=1999&size=0&status=done&style=none&width=847" alt><br><br><br>特别是，这些更改通过为用户提供Flink的统一入口点，使在下游框架（例如Apache Beam或Zeppelin交互式笔记本）中以编程方式使用Flink变得更加容易。对于跨多个目标环境使用Flink的用户，向基于配置的执行过程的过渡还可以显着减少样板代码和可维护性开销。<br></p><p><a name="native-kubernetes-integration-beta"></a></p><h3 id="原生Kubernetes集成（测试版）"><a href="#原生Kubernetes集成（测试版）" class="headerlink" title="原生Kubernetes集成（测试版）"></a>原生Kubernetes集成（测试版）</h3><p><br>对于希望在容器化环境上开始使用Flink的用户，在Kubernetes之上部署和管理独立集群需要有关容器，算子和环境工具kubectl的一些知识。<br><br><br>在Flink 1.10中，我们推出了Active Kubernetes集成（<a href="https://jira.apache.org/jira/browse/FLINK-9953" target="_blank" rel="external nofollow noopener noreferrer">FLINK-9953</a>）的第一阶段，其中，“主动”指 Flink ResourceManager (K8sResMngr) 原生地与 Kubernetes 通信，像 Flink 在 Yarn 和 Mesos 上一样按需申请 pod。用户可以利用 namespace，在多租户环境中以较少的资源开销启动 Flink。这需要用户提前配置好 RBAC 角色和有足够权限的服务账号。<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1590943394177-de66ac47-ba2d-4182-b5b4-585ff643cfc8.png#align=left&display=inline&height=322&margin=%5Bobject%20Object%5D&originHeight=870&originWidth=1714&size=0&status=done&style=none&width=635" alt><br><br><br>正如刚刚讲到的，Flink 1.10中的所有命令行选项都映射到统一配置。因此，用户可以简单地引用Kubernetes配置选项，然后使用以下命令在CLI中将作业提交到Kubernetes上的现有Flink会话：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;bin&#x2F;flink run -d -e kubernetes-session -Dkubernetes.cluster-id&#x3D;&lt;ClusterId&gt; examples&#x2F;streaming&#x2F;WindowJoin.jar</span><br></pre></td></tr></table></figure><p><br>如果您想尝试使用此预览功能，我们建议您逐步完成本<a href="https://ci.apache.org/projects/flink/flink-docs-release-1.10/ops/deployment/native_kubernetes.html" target="_blank" rel="external nofollow noopener noreferrer">机Kubernetes的安装</a>，试用并与社区分享反馈。<br></p><p><a name="table-apisql-production-ready-hive-integration"></a></p><h3 id="Table-API-SQL：生产就绪的Hive集成"><a href="#Table-API-SQL：生产就绪的Hive集成" class="headerlink" title="Table API / SQL：生产就绪的Hive集成"></a>Table API / SQL：生产就绪的Hive集成</h3><p><br>Hive集成在Flink 1.9中宣布为预览功能。此预览允许用户使用SQL DDL将Flink-specific元数据（例如Kafka表）保留在Hive Metastore中，调用Hive中定义的UDF并使用Flink读取和写入Hive表。Flink 1.10通过进一步的开发使这项工作更加圆满，这些开发使可立即投入生产的Hive集成到Flink，并具有与<a href="https://ci.apache.org/projects/flink/flink-docs-release-1.10/dev/table/hive/#supported-hive-versions" target="_blank" rel="external nofollow noopener noreferrer">大多数Hive版本的</a>完全兼容性。<br><a name="native-partition-support-for-batch-sql"></a></p><h4 id="-1"><a href="#-1" class="headerlink"></a></h4><p><a name="IuODz"></a></p><h4 id="批处理SQL的本地分区支持"><a href="#批处理SQL的本地分区支持" class="headerlink" title="批处理SQL的本地分区支持"></a>批处理SQL的本地分区支持</h4><p><br>1.10版本以前，仅支持对未分区的Hive表进行写入。在Flink 1.10中，Flink SQL语法已通过<code>INSERT OVERWRITE</code>和<code>PARTITION</code>（<a href="https://cwiki.apache.org/confluence/display/FLINK/FLIP-63%3A+Rework+table+partition+support" target="_blank" rel="external nofollow noopener noreferrer">FLIP-63</a>）进行了扩展，使用户能够在Hive中写入静态和动态分区。<br><strong><br></strong>静态分区写入**</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT &#123; INTO | OVERWRITE &#125; TABLE tablename1 [PARTITION (partcol1&#x3D;val1, partcol2&#x3D;val2 ...)] select_statement1 FROM from_statement;</span><br></pre></td></tr></table></figure><p><strong><br></strong>动态分区编写**</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT &#123; INTO | OVERWRITE &#125; TABLE tablename1 select_statement1 FROM from_statement;</span><br></pre></td></tr></table></figure><p><br>Flink对于分区表的全面支持，允许用户利用读取时的分区修剪功能，通过减少需要扫描的数据量来显着提高这些操作的性能。<br></p><p><a name="further-optimizations"></a></p><h4 id="进一步优化"><a href="#进一步优化" class="headerlink" title="进一步优化"></a>进一步优化</h4><p>除了分区修剪外，Flink 1.10还为Hive集成引入了更多<a href="https://ci.apache.org/projects/flink/flink-docs-release-1.10/dev/table/hive/read_write_hive.html#optimizations" target="_blank" rel="external nofollow noopener noreferrer">读取优化</a>，例如：<br></p><ul><li><strong>投影下推：</strong> Flink通过省略表扫描中不必要的字段，利用投影下推来最大程度地减少Flink和Hive表之间的数据传输。这对于具有大量列的表尤其有利。</li></ul><ul><li><strong>LIMIT下推：</strong>对于带有<code>LIMIT</code>子句的查询，Flink将尽可能限制输出记录的数量，以最大程度地减少通过网络传输的数据量。</li></ul><ul><li><strong>读取时</strong>进行<strong>ORC矢量化：</strong>为了提高ORC文件的读取性能，Flink现在默认将本机ORC矢量化阅读器用于2.0.0以上的Hive版本以及具有非复杂数据类型的列。</li></ul><p><a name="pluggable-modules-as-flink-system-objects-beta"></a></p><h4 id="可插拔模块作为Flink系统对象（Beta）"><a href="#可插拔模块作为Flink系统对象（Beta）" class="headerlink" title="可插拔模块作为Flink系统对象（Beta）"></a>可插拔模块作为Flink系统对象（Beta）</h4><p>Flink 1.10引入了Flink Table核心中可插拔模块的通用机制，首先关注系统功能（<a href="https://cwiki.apache.org/confluence/display/FLINK/FLIP-68%3A+Extend+Core+Table+System+with+Pluggable+Modules" target="_blank" rel="external nofollow noopener noreferrer">FLIP-68</a>）。使用该模块，用户可以扩展Flink的系统对象，例如，使用行为类似于Flink系统功能的Hive内置函数。该版本附带一个预先实现的<code>HiveModule</code>，支持多个Hive版本的版本，但用户也可以<a href="https://ci.apache.org/projects/flink/flink-docs-release-1.10/dev/table/modules.html" target="_blank" rel="external nofollow noopener noreferrer">编写自己的可插拔模块</a>。<br><a name="other-improvements-to-the-table-apisql"></a></p><h3 id="-2"><a href="#-2" class="headerlink"></a></h3><p><a name="rCuCf"></a></p><h3 id="Table-API-SQL的其他改进"><a href="#Table-API-SQL的其他改进" class="headerlink" title="Table API / SQL的其他改进"></a>Table API / SQL的其他改进</h3><p><a name="watermarks-and-computed-columns-in-sql-ddl"></a></p><h4 id="-3"><a href="#-3" class="headerlink"></a></h4><p><a name="FlcDT"></a></p><h4 id="SQL-DDL中的水印和计算列"><a href="#SQL-DDL中的水印和计算列" class="headerlink" title="SQL DDL中的水印和计算列"></a>SQL DDL中的水印和计算列</h4><p>Flink 1.10支持特定于流的语法扩展，以在Flink SQL DDL（<a href="https://cwiki.apache.org/confluence/display/FLINK/FLIP-66%3A+Support+Time+Attribute+in+SQL+DDL" target="_blank" rel="external nofollow noopener noreferrer">FLIP-66</a>）中定义时间属性和水印生成。这允许基于时间的操作（例如加窗），以及在使用DDL语句创建的表上定义<a href="https://ci.apache.org/projects/flink/flink-docs-release-1.10/dev/table/sql/create.html#create-table" target="_blank" rel="external nofollow noopener noreferrer">水印策略</a>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE table_name (</span><br><span class="line">  WATERMARK FOR columnName AS &lt;watermark_strategy_expression&gt;</span><br><span class="line">) WITH (</span><br><span class="line">  ...</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><br>此版本还引入了对虚拟计算列（<a href="https://cwiki.apache.org/confluence/display/FLINK/FLIP-70%3A+Flink+SQL+Computed+Column+Design" target="_blank" rel="external nofollow noopener noreferrer">FLIP-70</a>）的支持，该列可基于同一表中的其他列或确定性表达式（即，文字值，UDF和内置函数）派生。在Flink中，计算列可用于<a href="https://ci.apache.org/projects/flink/flink-docs-release-1.10/dev/table/sql/create.html#create-table" target="_blank" rel="external nofollow noopener noreferrer">在创建表时</a>定义时间属性。<br><a name="additional-extensions-to-sql-ddl"></a></p><h4 id="-4"><a href="#-4" class="headerlink"></a></h4><p><a name="Exz4X"></a></p><h4 id="SQL-DDL的其他扩展"><a href="#SQL-DDL的其他扩展" class="headerlink" title="SQL DDL的其他扩展"></a>SQL DDL的其他扩展</h4><p><br>现在，temporary/persistent 和 system/catalog（<a href="https://cwiki.apache.org/confluence/display/FLINK/FLIP-57%3A+Rework+FunctionCatalog" target="_blank" rel="external nofollow noopener noreferrer">FLIP-57</a>）之间有明显的区别。这不仅消除了函数引用中的歧义，而且允许确定性的函数解析顺序（即，在命名冲突的情况下，系统函数将优先于目录函数，而临时函数的优先级高于两个维度的持久性函数）。<br><br><br>遵循FLIP-57的基础知识，我们扩展了SQL DDL语法以支持目录功能，临时功能和临时系统功能（<a href="https://cwiki.apache.org/confluence/display/FLINK/FLIP-79+Flink+Function+DDL+Support" target="_blank" rel="external nofollow noopener noreferrer">FLIP-79</a>）的创建：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE [TEMPORARY|TEMPORARY SYSTEM] FUNCTION </span><br><span class="line">  [IF NOT EXISTS] [catalog_name.][db_name.]function_name </span><br><span class="line">AS identifier [LANGUAGE JAVA|SCALA]</span><br></pre></td></tr></table></figure><p><br>有关Flink SQL中DDL支持的当前状态的完整概述，请查看<a href="https://ci.apache.org/projects/flink/flink-docs-release-1.10/dev/table/sql/" target="_blank" rel="external nofollow noopener noreferrer">更新的文档</a>。<br><strong><br></strong>注意**为了将来能正确处理和保证元对象（表，视图，函数）之间的行为一致，不建议使用Table API中的某些对象声明方法，而应使用更接近标准SQL DDL的方法（<a href="https://cwiki.apache.org/confluence/display/FLINK/FLIP-64%3A+Support+for+Temporary+Objects+in+Table+module" target="_blank" rel="external nofollow noopener noreferrer">FLIP -64</a>）。<br><a name="full-tpc-ds-coverage-for-batch"></a></p><h4 id="-5"><a href="#-5" class="headerlink"></a></h4><p><a name="eHBxG"></a></p><h4 id="TPC-DS的完整覆盖范围可批量处理"><a href="#TPC-DS的完整覆盖范围可批量处理" class="headerlink" title="TPC-DS的完整覆盖范围可批量处理"></a>TPC-DS的完整覆盖范围可批量处理</h4><p><br>TPC-DS是一种广泛使用的行业标准决策支持基准，用于评估和衡量基于SQL的数据处理引擎的性能。在Flink 1.10中，端到端（<a href="https://issues.apache.org/jira/browse/FLINK-11491" target="_blank" rel="external nofollow noopener noreferrer">FLINK-11491</a>）支持所有TPC-DS查询，这反映了它的SQL引擎已准备就绪，可以满足类似现代数据仓库的工作负载的需求。<br><a name="pyflink-support-for-native-user-defined-functions-udfs"></a></p><h3 id="-6"><a href="#-6" class="headerlink"></a></h3><p><a name="TgP6u"></a></p><h3 id="PyFlink：支持本机用户定义的函数（UDF）"><a href="#PyFlink：支持本机用户定义的函数（UDF）" class="headerlink" title="PyFlink：支持本机用户定义的函数（UDF）"></a>PyFlink：支持本机用户定义的函数（UDF）</h3><p><br>在以前的发行版中引入了PyFlink的预览版，朝着实现Flink中完全Python支持的目标迈进了一步。对于此发行版，重点是使用户能够在表API / SQL（<a href="https://cwiki.apache.org/confluence/display/FLINK/FLIP-58%3A+Flink+Python+User-Defined+Stateless+Function+for+Table" target="_blank" rel="external nofollow noopener noreferrer">FLIP-58</a>）中注册和使用Python用户定义函数（UDF，已计划UDTF / UDAF ）。<br><img src="https://cdn.nlark.com/yuque/0/2020/gif/1072113/1590945929231-b78d0f66-a731-4359-8aa2-442b5f78bc77.gif#align=left&display=inline&height=405&margin=%5Bobject%20Object%5D&name=flink_1.10_pyflink.gif&originHeight=405&originWidth=779&size=2561122&status=done&style=none&width=779" alt="flink_1.10_pyflink.gif"><br><br><br>如果您对基础实现感兴趣（利用Apache Beam的<a href="https://beam.apache.org/roadmap/portability/" target="_blank" rel="external nofollow noopener noreferrer">可移植性框架）</a>，请参考FLIP-58的“架构”部分，也请参考<a href="https://cwiki.apache.org/confluence/display/FLINK/FLIP-78%3A+Flink+Python+UDF+Environment+and+Dependency+Management" target="_blank" rel="external nofollow noopener noreferrer">FLIP-78</a>。这些数据结构为Pandas支持和PyFlink最终到达DataStream API奠定了必要的基础。<br><br><br>从Flink 1.10开始，用户还可以<code>pip</code>使用以下方法轻松安装PyFlink ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install apache-flink</span><br></pre></td></tr></table></figure><p><br>有关PyFlink计划进行的其他改进的预览，请查看<a href="https://issues.apache.org/jira/browse/FLINK-14500" target="_blank" rel="external nofollow noopener noreferrer">FLINK-14500</a>并参与有关所需用户功能的<a href="http://apache-flink.147419.n8.nabble.com/Re-DISCUSS-What-parts-of-the-Python-API-should-we-focus-on-next-td1285.html" target="_blank" rel="external nofollow noopener noreferrer">讨论</a>。<br><a name="important-changes"></a></p><h2 id="重要变化"><a href="#重要变化" class="headerlink" title="重要变化"></a>重要变化</h2><ul><li>[ <a href="https://issues.apache.org/jira/browse/FLINK-10725" target="_blank" rel="external nofollow noopener noreferrer">FLINK-10725</a> ] Flink现在可以编译并在Java 11上运行。<br></li><li>[ <a href="https://jira.apache.org/jira/browse/FLINK-15495" target="_blank" rel="external nofollow noopener noreferrer">FLINK-15495</a> ] Blink计划程序现在是SQL Client中的默认设置，因此用户可以从所有最新功能和改进中受益。在下一个版本中，还计划从Table API中的旧计划程序进行切换，因此我们建议用户开始熟悉Blink计划程序。<br></li><li>[ <a href="https://issues.apache.org/jira/browse/FLINK-13025" target="_blank" rel="external nofollow noopener noreferrer">FLINK-13025</a> ]有一个<a href="https://ci.apache.org/projects/flink/flink-docs-release-1.10/dev/connectors/elasticsearch.html#elasticsearch-connector" target="_blank" rel="external nofollow noopener noreferrer">新的Elasticsearch接收器连接器</a>，完全支持Elasticsearch 7.x版本。<br></li><li>[ <a href="https://issues.apache.org/jira/browse/FLINK-15115" target="_blank" rel="external nofollow noopener noreferrer">FLINK-15115</a> ] Kafka 0.8和0.9的连接器已标记为不推荐使用，将不再得到积极支持。如果您仍在使用这些版本或有任何其他相关问题，请联系@dev邮件列表。<br></li><li>[ <a href="https://issues.apache.org/jira/browse/FLINK-14516" target="_blank" rel="external nofollow noopener noreferrer">FLINK-14516</a> ]删除了非基于信用的网络流控制代码以及配置选项<code>taskmanager.network.credit.model</code>。展望未来，Flink将始终使用基于信用的流量控制。<br></li><li>[ <a href="https://issues.apache.org/jira/browse/FLINK-12122" target="_blank" rel="external nofollow noopener noreferrer">FLINK-12122</a> ] <a href="https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=65147077" target="_blank" rel="external nofollow noopener noreferrer">FLIP-6</a>在Flink 1.5.0中推出，并引入了与从中分配插槽方式有关的代码回归<code>TaskManagers</code>。要使用更接近FLIP之前行为的调度策略（Flink尝试将工作负载分散到所有当前可用的行为中）<code>TaskManagers</code>，用户可以<code>cluster.evenly-spread-out-slots: true</code>在中设置<code>flink-conf.yaml</code>。<br></li><li>[ <a href="https://issues.apache.org/jira/browse/FLINK-11956" target="_blank" rel="external nofollow noopener noreferrer">FLINK-11956</a> ] <code>s3-hadoop</code>和<code>s3-presto</code>文件系统不再使用类重定位，而应通过<a href="https://ci.apache.org/projects/flink/flink-docs-release-1.10/ops/filesystems/#pluggable-file-systems" target="_blank" rel="external nofollow noopener noreferrer">插件</a>加载，但现在可以与所有凭据提供程序无缝集成。强烈建议将其他文件系统仅用作插件，因为我们将继续删除重定位。<br></li><li>Flink 1.9带有重构的Web UI，保留了旧版的UI作为备份，以防万一某些功能无法正常工作。到目前为止，尚未报告任何问题，因此<a href="http://apache-flink-mailing-list-archive.1008284.n3.nabble.com/DISCUSS-Remove-old-WebUI-td35218.html" target="_blank" rel="external nofollow noopener noreferrer">社区投票决定</a>在Flink 1.10中删除旧版Web UI。<br><br><a name="release-notes"></a><h2 id="发行说明"><a href="#发行说明" class="headerlink" title="发行说明"></a>发行说明</h2>如果您打算将设置升级到Flink 1.10，请仔细查看<a href="https://ci.apache.org/projects/flink/flink-docs-release-1.10/release-notes/flink-1.10.html" target="_blank" rel="external nofollow noopener noreferrer">发行说明</a>，以获取详细的更改和新功能列表。此版本与以前的1.x版本的API兼容，这些版本的API使用@Public注释进行了注释。</li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;br&gt;Apache Flink社区很高兴能达到两位数并宣布发布Flink 1.10.0！由于迄今为止社区最大的努力，已实施了1.2k个问题，贡
      
    
    </summary>
    
    
      <category term="大数据" scheme="cpeixin.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="Flink" scheme="cpeixin.cn/tags/Flink/"/>
    
  </entry>
  
  <entry>
    <title>IDEA install TabNine</title>
    <link href="cpeixin.cn/2020/01/22/IDEA-install-TabNine/"/>
    <id>cpeixin.cn/2020/01/22/IDEA-install-TabNine/</id>
    <published>2020-01-22T02:26:15.000Z</published>
    <updated>2020-04-04T11:06:48.223Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --><p>TabNine是我目前遇到过最好的智能补全工具</p><p>TabNine基于GPT-2的插件</p><p>安装<br>IDEA编译器，找到plugins</p><p>Windows pycharm：File&gt;settings&gt;plugins;<br>Mac pycharm：performence&gt;plugins&gt;marketplace or plugins&gt;Install JetBrains Plugins</p><p>查找 TabNine, 点击 install, 随后 restart</p><p>重启后：Help&gt;Edit Custom Properties…&gt;Create;</p><p>在跳出来的idea.properties中输入（注：英文字符） TabNine::config</p><p>随即会自动弹出TabNine激活页面；</p><p>激活<br>点击Activation Key下面的here；</p><p>输入你的邮箱号；</p><p>复制粘贴邮件里面的API Key到Activation Key下面；（得到的 key 可以在各种编译器中共用）</p><p>等待自动安装，观察页面（最下面有log可以看当前进度）；</p><p>激活完成后TabNine Cloud为Enabled状态，你也可以在安装进度完成后刷新页面手动选择Enabled；</p><p>确认激活完成，重启pycharm即可；</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;TabNine是我目前遇到过最好的智能补全工具&lt;/p&gt;&lt;p&gt;TabNine基于GPT-2的插件&lt;/p&gt;&lt;p&gt;安装&lt;br&gt;IDEA编译器，找到pl
      
    
    </summary>
    
    
      <category term="开发工具" scheme="cpeixin.cn/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="IDEA" scheme="cpeixin.cn/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>【转载】字节跳动 EB 级 HDFS 实践</title>
    <link href="cpeixin.cn/2020/01/02/%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8-EB-%E7%BA%A7-HDFS-%E5%AE%9E%E8%B7%B5/"/>
    <id>cpeixin.cn/2020/01/02/%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8-EB-%E7%BA%A7-HDFS-%E5%AE%9E%E8%B7%B5/</id>
    <published>2020-01-02T15:25:55.000Z</published>
    <updated>2020-05-31T15:28:54.936Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --><p>转载自<a href="https://juejin.im/post/5e0aac53e51d4575e82591e8" target="_blank" rel="external nofollow noopener noreferrer">字节跳动 EB 级 HDFS 实践</a>，学习学习字节跳动基础架构部门对上万节点的HDFS集群的管理方式<br><br><br>文章的最后，有写上自己的总结，工作这几年，确实没有遇到过这么庞大的数据量和集群，那么就不能先实战再总结了，目前是站在巨人的肩膀上看看远处的风景，当我到达的那一天，就会更从容的融入风景了。</p><hr><p><a name="MorZX"></a></p><h1 id="HDFS-简介"><a href="#HDFS-简介" class="headerlink" title="HDFS 简介"></a>HDFS 简介</h1><p>因为 HDFS 这样一个系统已经存在了非常长的时间，应用的场景已经非常成熟了，所以这部分我们会比较简单地介绍。<br>HDFS 全名 Hadoop Distributed File System，是业界使用最广泛的开源分布式文件系统。原理和架构与 Google 的 GFS 基本一致。它的特点主要有以下几项：</p><ul><li>和本地文件系统一样的目录树视图</li><li>Append Only 的写入（不支持随机写）</li><li>顺序和随机读</li><li>超大数据规模</li><li>易扩展，容错率高<br><a name="AUWUZ"></a><h1><a href="#" class="headerlink"></a></h1><a name="fQiBn"></a><h1 id="字节跳动特色的-HDFS"><a href="#字节跳动特色的-HDFS" class="headerlink" title="字节跳动特色的 HDFS"></a>字节跳动特色的 HDFS</h1></li></ul><p><br>字节跳动应用 HDFS 已经非常长的时间了，经历了 7 年的发展，目前已直接支持了十多种数据平台，间接支持了上百种业务发展。从集群规模和数据量来说，HDFS 平台在公司内部已经成长为总数几万台服务器的大平台，支持了 EB 级别的数据量。<br><br><br>在深入相关的技术细节之前，我们先看看字节跳动的 HDFS 架构。<br><a name="PdpVx"></a></p><h2 id="-1"><a href="#-1" class="headerlink"></a></h2><p><a name="oK4fY"></a></p><h2 id="架构介绍"><a href="#架构介绍" class="headerlink" title="架构介绍"></a>架构介绍</h2><p><br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1590931343675-83b09747-e37a-438c-a445-2fdafdba9c83.webp#align=left&display=inline&height=749&margin=%5Bobject%20Object%5D&originHeight=749&originWidth=962&size=0&status=done&style=none&width=962" alt><br><a name="jC8CW"></a></p><h3 id="-2"><a href="#-2" class="headerlink"></a></h3><p><a name="66HyQ"></a></p><h3 id="接入层"><a href="#接入层" class="headerlink" title="接入层"></a>接入层</h3><p><br>接入层是区别于社区版本最大的一层，社区版本中并无这一层定义。在字节跳动的落地实践中，由于集群的节点过于庞大，我们需要非常多的 NameNode 实现联邦机制来接入不同上层业务的数据服务。但当 NameNode 数量也变得非常多了以后，用户请求的统一接入及统一视图的管理也会有很大的问题。为了解决用户接入过于分散，我们需要一个独立的接入层来支持用户请求的统一接入，转发路由；同时也能结合业务提供用户权限和流量控制能力；另外，该接入层也需要提供对外的目录树统一视图。<br><br><br>该接入层从部署形态上来讲，依赖于一些外部组件如 Redis，MySQL 等，会有一批无状态的 NNProxy 组成，他们提供了请求路由，Quota 限制，Tracing 能力及流量限速等能力。<br><a name="gFV5T"></a></p><h3 id="-3"><a href="#-3" class="headerlink"></a></h3><p><a name="DTx6L"></a></p><h3 id="元数据层"><a href="#元数据层" class="headerlink" title="元数据层"></a>元数据层</h3><p><br>这一层主要模块有 Name Node，ZKFC，和 BookKeeper（不同于 QJM，BookKeeper 在大规模多节点数据同步上来讲会表现得更稳定可靠）。<br><br><br>Name Node 负责存储整个 HDFS 集群的元数据信息，是整个系统的大脑。一旦故障，整个集群都会陷入不可用状态。因此 Name Node 有一套基于 ZKFC 的主从热备的高可用方案。<br><br><br>Name Node 还面临着扩展性的问题，单机承载能力始终受限。于是 HDFS 引入了联邦（Federation）机制。一个集群中可以部署多组 Name Node，它们独立维护自己的元数据，共用 Data Node 存储资源。这样，一个 HDFS 集群就可以无限扩展了。但是这种 Federation 机制下，每一组 Name Node 的目录树都互相割裂的。于是又出现了一些解决方案，能够使整个 Federation 集群对外提供一个完整目录树的视图。<br></p><p><a name="OVDWh"></a></p><h3 id="数据层"><a href="#数据层" class="headerlink" title="数据层"></a>数据层</h3><p><br>相比元数据层，数据层主要节点是 Data Node。Data Node 负责实际的数据存储和读取。用户文件被切分成块复制成多副本，每个副本都存在不同的 Data Node 上，以达到容错容灾的效果。每个副本在 Data Node 上都以文件的形式存储，元信息在启动时被加载到内存中。<br><br><br>Data Node 会定时向 Name Node 做心跳汇报，并且周期性将自己所存储的副本信息汇报给 Name Node。这个过程对 Federation 中的每个集群都是独立完成的。在心跳汇报的返回结果中，会携带 Name Node 对 Data Node 下发的指令，例如，需要将某个副本拷贝到另外一台 Data Node 或者将某个副本删除等。<br></p><p><a name="NU3Ae"></a></p><h2 id="主要业务"><a href="#主要业务" class="headerlink" title="主要业务"></a>主要业务</h2><p>先来看一下当前在字节跳动 HDFS 承载的主要业务：</p><ul><li>Hive，HBase，日志服务，Kafka 数据存储</li><li>Yarn，Flink 的计算框架平台数据</li><li>Spark，MapReduce 的计算相关数据存储<br><a name="GHk55"></a><h2 id="发展阶段"><a href="#发展阶段" class="headerlink" title="发展阶段"></a>发展阶段</h2>在字节跳动，随着业务的快速发展，HDFS 的数据量和集群规模快速扩大，原来的 HDFS 的集群从几百台，迅速突破千台和万台的规模。这中间，踩了无数的坑，大的阶段归纳起来会有这样几个阶段。<br><a name="rzDSM"></a><h3 id="第一阶段"><a href="#第一阶段" class="headerlink" title="第一阶段"></a>第一阶段</h3>业务增长初期，集群规模增长趋势非常陡峭，单集群规模很快在元数据服务器 Name Node 侧遇到瓶颈。引入联邦机制（Federation）实现集群的横向扩展。<br><br><br>联邦又带来统一命名空间问题，因此，需要统一视图空间帮助业务构建统一接入。为了解决这个问题，我们引入了 Name Node Proxy 组件实现统一视图和多租户管理等功能，这部分会在下文的 NNProxy 章节中介绍。<br><a name="r78Fs"></a><h3 id="第二阶段"><a href="#第二阶段" class="headerlink" title="第二阶段"></a>第二阶段</h3></li></ul><p><br>数据量继续增大，Federation 方式下的目录树管理也存在瓶颈，主要体现在数据量增大后，Java 版本的 GC 变得更加频繁，跨子树迁移节点代价过大，节点启动时间太长等问题。因此我们通过重构的方式，解决了 GC，锁优化，启动加速等问题，将原 Name Node 的服务能力进一步提高。容纳更多的元数据信息。<br><br><br>为了解决这个问题，我们也实现了字节跳动特色的 DanceNN 组件，兼容了原有 Java 版本 NameNode 的全部功能基础上，大大增强了稳定性和性能。相关详细介绍会在下面的 DanceNN 章节中介绍。<br><a name="cKChL"></a></p><h3 id="-4"><a href="#-4" class="headerlink"></a></h3><p><a name="Ufy9s"></a></p><h3 id="第三阶段"><a href="#第三阶段" class="headerlink" title="第三阶段"></a>第三阶段</h3><p><br>当数据量跨过 EB，集群规模扩大到几万台的时候，慢节点问题，更细粒度服务分级问题，成本问题和元数据瓶颈进一步凸显。我们在架构上进一步在包括完善多租户体系构建，重构数据节点和元数据分层等方向进一步演进。这部分目前正在进行中，因为优化的点会非常多，本文会给出慢节点优化的落地实践。<br></p><p><a name="tEe39"></a></p><h2 id="关键改进"><a href="#关键改进" class="headerlink" title="关键改进"></a>关键改进</h2><p><br>在整个架构演进的过程中，我们做了非常多的探索和尝试。如上所述，结合之前提到的几个大的挑战和问题，我们就其中关键的 Name Node Proxy 和 Dance Name Node 这两个重点组件做一下介绍，同时，也会介绍一下我们在慢节点方面的优化和改进。<br><a name="TD5kf"></a></p><h3 id="-5"><a href="#-5" class="headerlink"></a></h3><p><a name="4I1Fk"></a></p><h3 id="NNProxy（Name-Node-Proxy）"><a href="#NNProxy（Name-Node-Proxy）" class="headerlink" title="NNProxy（Name Node Proxy）"></a>NNProxy（Name Node Proxy）</h3><p>作为系统的元数据操作接入端，NNProxy 提供了联邦模式下统一元数据视图，解决了用户请求的统一转发，业务流量的统一管控的问题。<br><br><br>先介绍一下 NNProxy 所处的系统上下游。<br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1590933295275-e12431d8-0bab-419e-bc29-4c3e03a5c6ff.webp#align=left&display=inline&height=572&margin=%5Bobject%20Object%5D&originHeight=572&originWidth=864&size=0&status=done&style=none&width=864" alt><br><br><br>我们先来看一下 NNProxy 都做了什么工作。<br><a name="rk9VU"></a></p><h4 id="-6"><a href="#-6" class="headerlink"></a></h4><p><a name="AYfYO"></a></p><h4 id="路由管理"><a href="#路由管理" class="headerlink" title="路由管理"></a>路由管理</h4><p><br>在上面 Federation 的介绍中提到，每个集群都维护自己独立的目录树，无法对外提供一个完整的目录树视图。NNProxy 中的路由管理就解决了这个问题。路由管理存储了一张 mount table，表中记录若干条路径到集群的映射关系。<br><br><br>例如 <strong>/user -&gt; hdfs://namenodeB</strong>，这条映射关系的含义就是 /user 及其子目录这个目录在 <strong>namenodeB</strong> 这个集群上，所有对 /user 及其子目录的访问都会由 NNProxy 转发给 <strong>namenodeB</strong>，获取结果后再返回给 Client。<br><br><br>匹配原则为最长匹配，例如我们还有另外一条映射 <strong>/user/tiger/dump -&gt; hdfs://namenodeC</strong>，那么 /user/tiger/dump 及其所有子目录都在 namenodeC，而 /user 目录下其他子目录都在 namenodeB 上。如下图所示：<br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1590933295845-bb064f91-f470-4129-80b9-c49e55ddae75.webp#align=left&display=inline&height=750&margin=%5Bobject%20Object%5D&originHeight=750&originWidth=864&size=0&status=done&style=none&width=864" alt><br><a name="kRRta"></a></p><h4 id="-7"><a href="#-7" class="headerlink"></a></h4><p><a name="DJKii"></a></p><h4 id="Quota-限制"><a href="#Quota-限制" class="headerlink" title="Quota 限制"></a>Quota 限制</h4><p>使用过 HDFS 的同学会知道 Quota 这个概念。我们给每个目录集合分配了额定的空间资源，一旦使用超过这个阈值，就会被禁止写入。这个工作就是由 NNProxy 完成的。NNProxy 会通过 Quota 实时监控系统获取最新 Quota 使用情况，当用户进行元数据操作的时候，NNProxy 就会根据用户的 Quota 情况作出判断，决定通过或者拒绝。<br><a name="e2E2o"></a></p><h4 id="-8"><a href="#-8" class="headerlink"></a></h4><p><a name="JG3Xt"></a></p><h4 id="Trace-支持"><a href="#Trace-支持" class="headerlink" title="Trace 支持"></a>Trace 支持</h4><p>ByteTrace 是一个 Trace 系统，记录追踪用户和系统以及系统之间的调用行为，以达到分析和运维的目的。其中的 Trace 信息会附在向 NNProxy 的请求 RPC 中。NNProxy 拿到 ByteTrace 以后就可以知道当前请求的上游模块，USER 及 Application ID 等信息。NNProxy 一方面将这些信息发到 Kafka 做一些离线分析，一方面实时聚合并打点，以便追溯线上流量。<br><a name="7lbZo"></a></p><h4 id="-9"><a href="#-9" class="headerlink"></a></h4><p><a name="9VGfn"></a></p><h4 id="流量限制"><a href="#流量限制" class="headerlink" title="流量限制"></a>流量限制</h4><p><br>虽然 NNProxy 非常轻量，可以承受很高的 QPS，但是后端的 Name Node 承载能力是有限的。因此突发的大作业造成高 QPS 的读写请求被全量转发到 Name Node 上时，会造成 Name Node 过载，延时变高，甚至出现 OOM，影响集群上所有用户。<br><br><br>因此 NNProxy 另一个非常重要的任务就是限流，以保护后端 Name Node。目前限流基于路径+RPC 以及 用户+RPC 维度，例如我们可以限制 /user/tiger/warhouse 路径的 create 请求为 100 QPS，或者某个用户的 delete 请求为 5 QPS。一旦该用户的访问量超过这个阈值，NNProxy 会返回一个可重试异常，Client 收到这个异常后会重试。因此被限流的路径或用户会感觉到访问 HDFS 变慢，但是并不会失败。<br><br><br></p><p><a name="a95em"></a></p><h3 id="Dance-NN（Dance-Name-Node）"><a href="#Dance-NN（Dance-Name-Node）" class="headerlink" title="Dance NN（Dance Name Node）"></a>Dance NN（Dance Name Node）</h3><p><a name="lhQQ9"></a></p><h4 id="解决的问题"><a href="#解决的问题" class="headerlink" title="解决的问题"></a>解决的问题</h4><p>如前所述，在数据量上到 EB 级别的场景后，原有的 Java 版本的 Name Node 存在了非常多的线上问题需要解决。以下是在实践过程中我们遇到的一些问题总结：<br></p><ul><li>Java 版本 Name Node 采用 Java 语言开发，在 INode 规模上亿时，不可避免的会带来严重的 GC 问题；</li><li>Java 版本 Name Node 将 INode meta 信息完全放置于内存，10 亿 INode 大约占用 800GB 内存（包含 JVM 自身占用的部分 native memory），更进一步加重了 GC；</li><li>我们目前的集群规模下，Name Node 从重启到恢复服务需要 6 个小时，在主备同时发生故障的情况下，严重影响上层业务；</li><li>Java 版本 Name Node 全局一把读写锁，任何对目录树的修改操作都会阻塞其他的读写操作，并发度较低；</li></ul><p>从上可以看出，在大数据量场景下，我们亟需一个新架构版本的 Name Node 来承载我们的海量元数据。除了 C++语言重写来规避 Java 带来的 GC 问题以外，我们还在一些场景下做了特殊的优化。<br></p><p><a name="1ILjM"></a></p><h4 id="目录树锁设计"><a href="#目录树锁设计" class="headerlink" title="目录树锁设计"></a>目录树锁设计</h4><p><br>HDFS 对内是一个分布式集群，对外提供的是一个 unified 的文件系统，因此对文件及目录的操作需要像操作 Linux 本地文件系统一样。这就要求 HDFS 满足类似于数据库系统中 ACID 特性一样的原子性，一致性、隔离性和持久性。因此 DanceNN 在面对多个用户同时操作同一个文件或者同一个目录时，需要保证不会破坏掉 ACID 属性，需要对操作做锁保护。<br><br><br>不同于传统的 KV 存储和数据库表结构，DanceNN 上维护的是一棵树状的数据结构，因此单纯的 key 锁或者行锁在 DanceNN 下不适用。而像数据库的表锁或者原生 NN 的做法，对整棵目录树加单独一把锁又会严重的影响整体吞吐和延迟，因此 DanceNN 重新设计了树状锁结构，做到保证 ACID 的情况下，读吞吐能够到 8w，写吞吐能够到 2w，是原生 NN 性能的 10 倍以上。<br><br><br>这里，我们会重新对 RPC 做分类，像 <code>createFile</code>，<code>getFileInfo</code>，<code>setXAttr</code> 这类 RPC 依然是简单的对某一个 INode 进行 CURD 操作；像 <code>delete</code> RPC，有可能删除一个文件，也有可能会删除目录，后者会影响整棵子树下的所有文件；像 <code>rename</code> RPC，则是更复杂的另外一类操作，可能会涉及到多个 INode，甚至是多棵子树下的所有 INode。<br></p><p><a name="FOHq3"></a></p><h4 id="DanceNN-启动优化"><a href="#DanceNN-启动优化" class="headerlink" title="DanceNN 启动优化"></a>DanceNN 启动优化</h4><p><br>由于我们的 DanceNN 底层元数据实现了本地目录树管理结构，因此我们 DanceNN 的启动优化都是围绕着这样的设计来做的。<br><a name="cwcfb"></a></p><h5 id="-10"><a href="#-10" class="headerlink"></a></h5><p><a name="ygdYf"></a></p><h5 id="多线程扫描和填充-BlockMap"><a href="#多线程扫描和填充-BlockMap" class="headerlink" title="多线程扫描和填充 BlockMap"></a>多线程扫描和填充 BlockMap</h5><p>在系统启动过程中，第一步就是读取目录树中保存的信息并且填入 BlockMap 中，类似 Java 版 NN 读取 FSImage 的操作。在具体实现过程中，首先起多个线程并行扫描静态目录树结构。将扫描的结果放入一个加锁的 Buffer 中。当 Buffer 中的元素个数达到设定的数量以后，重新生成一个新的 Buffer 接收请求，并在老 Buffer 上起一个线程将数据填入 BlockMap。<br><a name="wPkVT"></a></p><h5 id="-11"><a href="#-11" class="headerlink"></a></h5><p><a name="GvGcm"></a></p><h5 id="接收块上报优化"><a href="#接收块上报优化" class="headerlink" title="接收块上报优化"></a>接收块上报优化</h5><p>DanceNN 启动以后会首先进入安全模式，接收所有 Date Node 的块上报，完善 BlockMap 中保存的信息。当上报的 Date Node 达到一定比例以后，才会退出安全模式，这时候才能正式接收 client 的请求。所以接收块上报的速度也会影响 Date Node 的启动时长。DanceNN 这里做了一个优化，根据 BlockID 将不同请求分配给不同的线程处理，每个线程负责固定的 Slice，线程之间无竞争，这样就极大的加快了接收块上报的速度。如下图所示：<br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1590935398857-421715f0-1f68-40e2-a738-5d53fc518e03.webp#align=left&display=inline&height=412&margin=%5Bobject%20Object%5D&originHeight=412&originWidth=864&size=0&status=done&style=none&width=864" alt><br><br><br></p><p><a name="tCZ1r"></a></p><h3 id="慢节点优化"><a href="#慢节点优化" class="headerlink" title="慢节点优化"></a>慢节点优化</h3><p><br>慢节点问题在很多分布式系统中都存在。其产生的原因通常为上层业务的热点或者底层资源故障。上层业务热点，会导致一些数据在较短的时间段内被集中访问。而底层资源故障，如出现慢盘或者盘损坏，更多的请求就会集中到某一个副本节点上从而导致慢节点。<br><br><br>通常来说，慢节点问题的优化和上层业务需求及底层资源量有很大的关系，极端情况，上层请求很小，下层资源充分富裕的情况下，慢节点问题将会非常少，反之则会变得非常严重。在字节跳动的 HDFS 集群中，慢节点问题一度非常严重，尤其是磁盘占用百分比非常高以后，各种慢节点问题层出不穷。其根本原因就是资源的平衡滞后，许多机器的磁盘占用已经触及红线导致写降级；新增热资源则会集中到少量机器上，这种情况下，当上层业务的每秒请求数升高后，对于 P999 时延要求比较高的一些大数据分析查询业务就容易出现一大批数据访问（&gt;10000 请求）被卡在某个慢请求的处理上。<br><br><br>我们优化的方向会分为读慢节点和写慢节点两个方面。<br></p><p><a name="PwyJV"></a></p><h4 id="读慢节点优化"><a href="#读慢节点优化" class="headerlink" title="读慢节点优化"></a>读慢节点优化</h4><p>我们经历了几个阶段：</p><ul><li>最早，使用社区版本，其 Switch Read 以读取一个 packet 的时长为统计单位，当读取一个 packet 的时间超过阈值时，认为读取当前 packet 超时。如果一定时间窗口内超时 packet 的数量过多，则认为当前节点是慢节点。但这个问题在于以 packet 作为统计单位使得算法不够敏感，这样使得每次读慢节点发生的时候，对于小 IO 场景（字节跳动的一些业务是以大量随机小 IO 为典型使用场景的），这些个积攒的 Packet 已经造成了问题。</li></ul><ul><li>后续，我们研发了 Hedged Read 的读优化。Hedged Read 对每一次读取设置一个超时时间。如果读取超时，那么会另开一个线程，在新的线程中向第二个副本发起读请求，最后取第一第二个副本上优先返回的 response 作为读取的结果。但这种情况下，在慢节点集中发生的时候，会导致读流量放大。严重的时候甚至导致小范围带宽短时间内不可用。</li></ul><ul><li>基于之前的经验，我们进一步优化，开启了 Fast Switch Read 的优化，该优化方式使用吞吐量作为判断慢节点的标准，当一段时间窗口内的吞吐量小于阈值时，认为当前节点是慢节点。并且根据当前的读取状况动态地调整阈值，动态改变时间窗口的长度以及吞吐量阈值的大小。<br>下表是当时线上某业务测试的值：</li></ul><table><thead><tr><th>Host:X.X.X.X</th><th>3 副本 Switch Read</th><th>2 副本 Hedged Read</th><th>3 副本 Hedged Read</th><th>3 副本 Fast Switch Read（优化后算法）</th></tr></thead><tbody><tr><td>读取时长 p999</td><td>977 ms</td><td>549 ms</td><td>192 ms</td><td><strong>128 ms</strong></td></tr><tr><td>最长读取时间</td><td>300 s</td><td>125 s</td><td>60 s</td><td><strong>15.5 s</strong></td></tr><tr><td>长尾出现次数（大于 500ms）</td><td>238 次/天</td><td>75 次/天</td><td>15 次/天</td><td><strong>3 次/天</strong></td></tr><tr><td>长尾出现次数（大于 1000ms）</td><td>196 次/天</td><td>64 次/天</td><td>6 次/天</td><td><strong>3 次/天</strong></td></tr></tbody></table><p><br>进一步的相关测试数据：<br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1590935682709-6dceebc5-46fb-459b-a559-c238e04d66be.webp#align=left&display=inline&height=211&margin=%5Bobject%20Object%5D&originHeight=211&originWidth=746&size=0&status=done&style=none&width=746" alt><br><a name="aI0wv"></a></p><h4 id="-12"><a href="#-12" class="headerlink"></a></h4><p><a name="hBmkC"></a></p><h4 id="写慢节点优化"><a href="#写慢节点优化" class="headerlink" title="写慢节点优化"></a>写慢节点优化</h4><p><br>写慢节点优化的适用场景会相对简单一些。主要解决的是写过程中，Pipeline 的中间节点变慢的情况。为了解决这个问题，我们也发展了 Fast Failover 和 Fast Failover+两种算法。<br><a name="2ceD5"></a></p><h5 id="-13"><a href="#-13" class="headerlink"></a></h5><p><a name="yHKlv"></a></p><h5 id="Fast-Failover"><a href="#Fast-Failover" class="headerlink" title="Fast Failover"></a>Fast Failover</h5><p>Fast Failover 会维护一段时间内 ACK 时间过长的 packet 数目，当超时 ACK 的数量超过阈值后，会结束当前的 block，向 namenode 申请新块继续写入。<br><br><br>Fast Failover 的问题在于，随意结束当前的 block 会造成系统的小 block 数目增加，给之后的读取速度以及 namenode 的元数据维护都带来负面影响。所以 Fast Failover 维护了一个切换阈值，如果已写入的数据量（block 的大小）大于这个阈值，才会进行 block 切换。<br><br><br>但是往往为了达到这个写入数据大小阈值，就会造成用户难以接收的延迟，因此当数据量小于阈时需要进额外的优化。<br><a name="Ohd15"></a></p><h5 id="-14"><a href="#-14" class="headerlink"></a></h5><p><a name="Hq46w"></a></p><h5 id="Fast-Failover-1"><a href="#Fast-Failover-1" class="headerlink" title="Fast Failover+"></a>Fast Failover+</h5><p>为了解决上述的问题，当已写入的数据量（block 的大小）小于阈值时，我们引入了新的优化手段——Fast Failover+。该算法首先从 pipeline 中筛选出速度较慢的 datanode，将慢节点从当前 pipeline 中剔除，并进入 Pipeline Recovery 阶段。Pipeline Recovery 会向 namenode 申请一个新的 datanode，与剩下的 datanode 组成一个新的 pipeline，并将已写入的数据同步到新的 datanode 上（该步骤称为 transfer block）。由于已经写入的数据量较小，transfer block 的耗时并不高。统计 p999 平均耗时只有 150ms。由 Pipeline Recovery 所带来的额外消耗是可接受的。<br><br><br>下表是当时线上某业务测试的值：</p><table><thead><tr><th>Host:X.X.X.X</th><th>Fast Failover p99</th><th>Fast Failover+ p99 <strong>(优化后算法)</strong></th><th>Fast Failover p95</th><th>Fast Failover+ p95 <strong>(优化后算法)</strong></th></tr></thead><tbody><tr><td>平均 Flush 时长</td><td>1.49 s</td><td><strong>1.23 s</strong></td><td>182 ms</td><td><strong>147 ms</strong></td></tr><tr><td>最长 Flush 时间</td><td>80 s</td><td><strong>66 s</strong></td><td>9.7 s</td><td><strong>6.5 s</strong></td></tr><tr><td>长尾出现次数（p99 大于 10s, p95 大于 1s）</td><td>63 次/天</td><td><strong>38 次/天</strong></td><td>94 次/天</td><td><strong>55 次/天</strong></td></tr><tr><td>长尾出现次数（p99 大于 5s, p95 大于 0.5s）</td><td>133 次/天</td><td><strong>101 次/天</strong></td><td>173 次/天</td><td><strong>156 次/天</strong></td></tr></tbody></table><p>一些进一步的实际效果对比：<br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1590935682666-c4712d74-258e-44be-b16d-a6a773f9fcbb.webp#align=left&display=inline&height=232&margin=%5Bobject%20Object%5D&originHeight=232&originWidth=734&size=0&status=done&style=none&width=734" alt><br><a name="d4UFq"></a></p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>HDFS 在字节跳动的发展历程已经非常长了。从最初的几百台的集群规模支持 PB 级别的数据量，到现在几万台级别多集群的平台支持 EB 级别的数据量，我们经历了 7 年的发展。伴随着业务的快速上量，我们团队也经历了野蛮式爆发，规模化发展，平台化运营的阶段。这过程中我们踩了不少坑，也积累了相当丰富的经验。当然，最重要的，公司还在持续高速发展，而我们仍旧不忘初心，坚持“DAY ONE”，继续在路上。<br><br><br></p><p><a name="mZaR7"></a></p><h1 id="学习总结"><a href="#学习总结" class="headerlink" title="学习总结"></a>学习总结</h1><p><br>接入层：接入层是字节设计假如的一层，在上万节点的HDFS集群中，必然要使用多NameNode模式，那么对于用户大量的请求统一管理，字节引入了接入层，具体实现借用Redis，Mysql以及NNProxy转发路由等外界组件实现。<br><br><br>元数据层：这里面有一点，在字节的HDFS集群中，并没有使用社区版的QJM HA高可用方案，而是使用了BookKeeper。Apache bookkeeper是一个分布式，可扩展，容错（多副本），低延迟的存储系统，其提供了高性能，高吞吐的存储能力。而QJM/Qurom Journal Manager是Clouera提出的，这是一个基于Paxos算法实现的HDFS HA方案<br><br><br>数据层倒是没什么特别的改善<br><br><br>可以看出，字节的数据暴涨阶段，首先遇到的问题是Name Node的瓶颈，而此时字节的集群环境为单集群，此时的解决方案是采用Federation。</p><p>数据持续高速增长，Federation 方式下的目录树管理也存在瓶颈，主要原因是Java频繁GC，那么字节的解决方案就显得有些硬核了，重写了NameNode，在字节中叫做DanceNN 🐂🍺。</p><p>在数据超过EB级别之后，遇到的问题就更多了。不同粒度服务分级，元数据存储瓶颈，慢节点等问题。那么字节的解决方案则是考虑到一方面从存储方面的数据节点进行重构，另一方面对于大块的元数据进行分级。</p><p>这里要说一下上面提到的NNProxy，好用！！主要有两个功能很吸引我，在Hadoop集群原有的基础上，字节添加了NNProxy，一个是根据用户请求的路径转发到不同的HDFS空间，二呢，对多租户的场景下，对每个用户的请求做判断，如果某个请求量过大，则会对其限流。</p><p>在这里，我也领略到了一个场景，那就是在字节EB级别的集群规模下，集群重启到全部服务恢复，需要6个小时左右。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;转载自&lt;a href=&quot;https://juejin.im/post/5e0aac53e51d4575e82591e8&quot; target=&quot;_bl
      
    
    </summary>
    
    
      <category term="大数据" scheme="cpeixin.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="hdfs" scheme="cpeixin.cn/tags/hdfs/"/>
    
  </entry>
  
  <entry>
    <title>GPT-2 Chinese 自动生成文章 - 环境准备</title>
    <link href="cpeixin.cn/2020/01/01/GPT-2-Chinese-%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E6%96%87%E7%AB%A0-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/"/>
    <id>cpeixin.cn/2020/01/01/GPT-2-Chinese-%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E6%96%87%E7%AB%A0-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</id>
    <published>2020-01-01T14:28:43.000Z</published>
    <updated>2020-04-13T09:28:23.224Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --><p><a name="R14AA"></a></p><h2 id="Google-Colab"><a href="#Google-Colab" class="headerlink" title="Google Colab"></a>Google Colab</h2><p><br>Colaboratory 是一个 Google 研究项目，旨在帮助传播机器学习培训和研究成果。它是一个 Jupyter 笔记本环境，不需要进行任何设置就可以使用，并且完全在云端运行。<br><br><br>Colaboratory 笔记本存储在 Google 云端硬盘中，并且可以共享，就如同您使用 Google 文档或表格一样。Colaboratory 可免费使用。利用Colaboratory ，可以方便的使用Keras,TensorFlow,PyTorch等框架进行深度学习应用的开发。<br><br><br>缺点是最多只能运行12小时，时间一到就会清空VM上所有数据。这包括我们安装的软件，包括我们下载的数据，存放的计算结果， 所以最好不要直接在colab上进行文件的修改，以防保存不及时而造成丢失，而且Google Drive只有免费的15G空间，如果训练文件很大的话，需要扩容。<br><br><br><strong>优点 免费！ 免费！免费！</strong><br>**<br><a name="dpofS"></a></p><h3 id="谷歌云盘"><a href="#谷歌云盘" class="headerlink" title="谷歌云盘"></a>谷歌云盘</h3><p><br>当登录账号进入<a href="https://drive.google.com/drive/my-drive" target="_blank" rel="external nofollow noopener noreferrer">谷歌云盘</a>时，系统会给予15G免费空间大小。由于Colab需要依靠谷歌云盘，故需要在云盘上新建一个文件夹，来存放你的代码或者数据。<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1583723531238-28bbbd81-69e8-472d-b048-1ac67166a201.png#align=left&display=inline&height=612&name=image.png&originHeight=612&originWidth=1268&size=104029&status=done&style=none&width=1268" alt="image.png"><br>可以看到上图，我的存储空间几乎快满了，在选择进行扩容的时候呢，则需要国外银行卡和国外支付方式，这一点就有点头痛，但是不要忘记万能的淘宝，最后通过淘宝的，花费20元左右，就升级到了无限空间，这里需要注意一下，升级存储空间的方式是添加一块共享云盘，如下图：</p><p><a name="EHdj9"></a></p><h3 id="引入Colab"><a href="#引入Colab" class="headerlink" title="引入Colab"></a>引入Colab</h3><p><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1583723706098-527d9fff-e46e-4dd1-b92a-0640b0d61555.png#align=left&display=inline&height=674&name=image.png&originHeight=674&originWidth=1125&size=104056&status=done&style=none&width=1125" alt="image.png"><br><br><br><br><br></p><p><a name="kykCO"></a></p><h3 id="设置GPU环境"><a href="#设置GPU环境" class="headerlink" title="设置GPU环境"></a>设置GPU环境</h3><p><br>打开colab后，我们要设置运行环境。”修改”—&gt;”笔记本设置”<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1583723911273-f07371f9-e982-44b2-af34-b3781f294879.png#align=left&display=inline&height=739&name=image.png&originHeight=739&originWidth=1191&size=94677&status=done&style=none&width=1191" alt="image.png"><br><br><br></p><p><a name="f4U2h"></a></p><h3 id="挂载和切换工作目录"><a href="#挂载和切换工作目录" class="headerlink" title="挂载和切换工作目录"></a>挂载和切换工作目录</h3><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> google.colab <span class="keyword">import</span> drive</span><br><span class="line">drive.mount(<span class="string">'/content/drive'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment"># os.chdir('/content/drive/My Drive/code/GPT2-Chinese') # 原本Google drive的目录</span></span><br><span class="line"></span><br><span class="line">os.chdir(<span class="string">'/content/drive/Shared drives/brentfromchina/code_warehouse/GPT2-Chinese'</span>) <span class="comment">## 共享云盘的目录</span></span><br></pre></td></tr></table></figure><p>其中： My Drive 代表你的google网盘根目录</p><pre><code>code/GPT2-Chinese 或者 code_warehouse/GPT2-Chinese 代表网盘中你的程序文件目录</code></pre><p><a name="MyewB"></a></p><h3 id="在Colab中运行任务"><a href="#在Colab中运行任务" class="headerlink" title="在Colab中运行任务"></a>在Colab中运行任务</h3><p>下图是我google drive中的文件结构， 在项目文件中，创建一个.ipynb文件，来执行你的所有操作。</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1586769633567-4e4118a0-5c52-4517-9233-71d897e7fd68.png#align=left&display=inline&height=1748&name=%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-04-13%20%E4%B8%8B%E5%8D%885.15.46.png&originHeight=1748&originWidth=3096&size=378104&status=done&style=none&width=3096" alt="屏幕快照 2020-04-13 下午5.15.46.png"></p><p><a name="GZDbL"></a></p><h3 id="ipynb文件内容"><a href="#ipynb文件内容" class="headerlink" title=".ipynb文件内容"></a>.ipynb文件内容</h3><p><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1586769997876-4536842e-6bb3-4d6f-8df9-e220a66026a0.png#align=left&display=inline&height=1702&name=%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-04-13%20%E4%B8%8B%E5%8D%885.23.22.png&originHeight=1702&originWidth=3154&size=396138&status=done&style=none&width=3154" alt="屏幕快照 2020-04-13 下午5.23.22.png"><br><br><br></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;a name=&quot;R14AA&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;h2 id=&quot;Google-Colab&quot;&gt;&lt;a href=&quot;#Google-Colab&quot; cl
      
    
    </summary>
    
    
      <category term="NLP" scheme="cpeixin.cn/categories/NLP/"/>
    
    
      <category term="GPT-2" scheme="cpeixin.cn/tags/GPT-2/"/>
    
  </entry>
  
  <entry>
    <title>架构思想</title>
    <link href="cpeixin.cn/2019/12/20/%E6%9E%B6%E6%9E%84%E6%80%9D%E6%83%B3/"/>
    <id>cpeixin.cn/2019/12/20/%E6%9E%B6%E6%9E%84%E6%80%9D%E6%83%B3/</id>
    <published>2019-12-20T02:26:15.000Z</published>
    <updated>2020-04-04T11:23:45.206Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --><p><a name="-2"></a></p><h2><a href="#" class="headerlink"></a></h2><p>关于什么是架构，一种比较通俗的说法是 “最高层次的规划，难以改变的决定”，这些规划和决定奠定了事物未来发展的方向和最终的蓝图。<br><br><br>从这个意义上说，人生规划也是一种架构。选什么学校、学什么专业、进什么公司、找什么对象，过什么样的生活，都是自己人生的架构。<br><br><br>具体到软件架构，维基百科是这样定义的：“有关软件整体结构与组件的抽象描述，用于指导大型软件系统各个方面的设计”。系统的各个重要组成部分及其关系构成了系统的架构，这些组成部分可以是具体的功能模块，也可以是非功能的设计与决策，他们相互关系组成一个整体，共同构成了软件系统的架构。<br><br><br>架构其实就是把复杂的问题抽象化、简单化，可能你会觉得“说起来容易但做起来难”，如何能快速上手。可以多观察，根据物质决定意识，借助生活真实场景（用户故事，要很多故事）来还原这一系列问题，抓住并提取核心特征。<br><a name="-3"></a></p><h4 id="架构思想"><a href="#架构思想" class="headerlink" title="架构思想"></a>架构思想</h4><p>CPU运算速度&gt;&gt;&gt;&gt;&gt;内存的读写速度&gt;&gt;&gt;&gt;磁盘读写速度</p><ul><li><p>满足业务发展需求是最高准则</p></li><li><p>业务建模，抽象和枚举是两种方式，需要平衡，不能走极端</p></li><li><p>模型要能更真实的反应事物的本质，不是名词概念的堆砌，不能过度设计</p></li><li><p>基础架构最关键的是分离不同业务领域、不同技术领域，让整个系统具有持续优化的能力。</p></li><li><p>分离基础服务、业务规则、业务流程，选择合适的工具外化业务规则和业务流程</p></li><li><p>分离业务组件和技术组件，高类聚，低耦合 - 业务信息的执行可以分散，但业务信息的管理要尽量集中</p></li><li><p>不要让软件的逻辑架构与最后物理部署绑死 - 选择合适的技术而不是高深的技术，随着业务的发展调整使用的技术</p></li><li><p>好的系统架构需要合适的组织架构去保障 - 团队成员思想的转变，漫长而艰难</p></li><li><p>业务架构、系统架构、数据模型<br><a name="-4"></a></p><h4 id="面对一块新业务，如何系统架构？"><a href="#面对一块新业务，如何系统架构？" class="headerlink" title="面对一块新业务，如何系统架构？"></a>面对一块新业务，如何系统架构？</h4></li><li><p>业务分析：输出业务架构图，这个系统里有多少个业务模块，从前台用户到底层一共有多少层。</p></li><li><p>系统划分：根据业务架构图输出系统架构图，需要思考的是这块业务划分成多少个系统，可能一个系统能支持多个业务。基于什么原则将一个系统拆分成多个系统？又基于什么原则将两个系统合并成一个系统？</p></li><li><p>系统分层：系统是几层架构，基于什么原则将一个系统进行分层，分成多少层？</p></li><li><p>模块化：系统里有多少个模块，哪些需要模块化？基于什么原则将一类代码变成一个模块。<br><a name="-5"></a></p><h4 id="如何模块化"><a href="#如何模块化" class="headerlink" title="如何模块化"></a>如何模块化</h4></li><li><p>基于水平切分。把一个系统按照业务类型进行水平切分成多个模块，比如权限管理模块，用户管理模块，各种业务模块等。</p></li><li><p>基于垂直切分。把一个系统按照系统层次进行垂直切分成多个模块，如DAO层，SERVICE层，业务逻辑层。</p></li><li><p>基于单一职责。将代码按照职责抽象出来形成一个一个的模块。将系统中同一职责的代码放在一个模块里。比如我们开发的系统要对接多个渠道的数据，每个渠道的对接方式和数据解析方式不一样，为避免不同渠道代码的相互影响，我们把各个渠道的代码放在各自的模块里。</p></li><li><p>基于易变和不易变。将不易变的代码抽象到一个模块里，比如系统的比较通用的功能。将易变的代码放在另外一个或多个模块里，比如业务逻辑。因为易变的代码经常修改，会很不稳定，分开之后易变代码在修改时候，不会将BUG传染给不变的代码。<br><a name="-6"></a></p><h4 id="提升系统的稳定性"><a href="#提升系统的稳定性" class="headerlink" title="提升系统的稳定性"></a>提升系统的稳定性</h4></li><li><p>流控</p></li></ul><p>双11期间，对于一些重要的接口（比如帐号的查询接口，店铺首页）做流量控制，超过阈值直接返回失败。<br>另外对于一些不重要的业务也可以考虑采用降级方案，大促—&gt;邮件系统。根据28原则，提前将大卖家约1W左右在缓存中预热，并设置起止时间，活动期间内这部分大卖家不发交易邮件提醒，以减轻SA邮件服务器的压力。</p><ul><li>容灾</li></ul><p>最大程度保证主链路的可用性，比如我负责交易的下单，而下单过程中有优惠的业务逻辑，此时需要考虑UMP系统挂掉，不会影响用户下单（后面可以通过修改价格弥补），采用的方式是，如果优惠挂掉，重新渲染页面，并增加ump屏蔽标记，下单时会自动屏蔽ump的代码逻辑。<br>另外还会记录ump系统不可用次数，一定时间内超过阈值，系统会自动报警。</p><ul><li>稳定性</li></ul><p>第三方系统可能会不稳定，存在接口超时或宕机，为了增加系统的健壮性，调用接口时设置超时时间以及异常捕获处理。</p><ul><li>容量规划</li></ul><p>做好容量规划、系统间强弱依赖关系梳理。<br>如：冷热数据不同处理，早期的订单采用oracle存储，随着订单的数量越来越多，查询缓慢，考虑数据迁移，引入历史表，将已归档的记录迁移到历史表中。当然最好的方法是分库分表。<br><a name="-7"></a></p><h4 id="分布式架构"><a href="#分布式架构" class="headerlink" title="分布式架构"></a>分布式架构</h4><ul><li><p>分布式系统</p></li><li><p>分布式缓存</p></li><li><p>分布式数据<br><a name="api"></a></p><h4 id="API-和乐高积木有什么相似之处？"><a href="#API-和乐高积木有什么相似之处？" class="headerlink" title="API 和乐高积木有什么相似之处？"></a>API 和乐高积木有什么相似之处？</h4><p>相信我们大多数人在儿童时期都喜欢玩乐高积木。乐高积木的真正乐趣和吸引力在于，尽管包装盒外面都带有示意图片，但你最终都可以随心所欲得搭出各种样子或造型。<br>对 API 的最佳解释就是它们像乐高积木一样。我们可以用创造性的方式来组合它们，而不用在意它们原本的设计和实现意图。<br>你可以发现很多 API 和乐高积木的相似之处：</p></li><li><p>标准化：通用、标准化的组件，作为基本的构建块（building blocks）；<br></p></li><li><p>可用性：强调可用性，附有文档或使用说明；<br></p></li><li><p>可定制：为不同功能使用不同的API；<br></p></li><li><p>创造性：能够组合不同的 API 来创造混搭的结果；</p></li></ul><p><br>乐高和 API 都有超简单的界面/接口，并且借助这样简单的界面/接口，它可以非常直观、容易、快速得构建。<br>虽然乐高和 API 一样可能附带示意图片或使用文档，大概描述了推荐玩法或用途，但真正令人兴奋的结果或收获恰恰是通过创造力产生的。<br><br><br>让我们仔细地思考下上述的提法。在很多情况下，API 的使用者构建出了 API 的构建者超出预期的服务或产品，API 使用者想要的，和 API 构建者认为使用者想要的，这二者之间通常有个断层。事实也确实如此，在 IoT 领域，我们使用 API 创造出了一些非常有创造性的使用场景。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;a name=&quot;-2&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;关于什么
      
    
    </summary>
    
    
      <category term="架构" scheme="cpeixin.cn/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>kali中文设置</title>
    <link href="cpeixin.cn/2019/12/01/kali%E4%B8%AD%E6%96%87%E8%AE%BE%E7%BD%AE/"/>
    <id>cpeixin.cn/2019/12/01/kali%E4%B8%AD%E6%96%87%E8%AE%BE%E7%BD%AE/</id>
    <published>2019-12-01T02:26:15.000Z</published>
    <updated>2020-04-04T11:06:21.313Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --><p>更新源</p><p><a href="https://blog.csdn.net/qq_38333291/article/details/89764967" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/qq_38333291/article/details/89764967</a></p><p>设置编码和中文字体安装</p><p><a href="http://www.linuxdiyf.com/linux/20701.html" target="_blank" rel="external nofollow noopener noreferrer">http://www.linuxdiyf.com/linux/20701.html</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;更新源&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_38333291/article/details/897
      
    
    </summary>
    
    
      <category term="Linux" scheme="cpeixin.cn/categories/Linux/"/>
    
    
      <category term="kali" scheme="cpeixin.cn/tags/kali/"/>
    
  </entry>
  
  <entry>
    <title>分布式下的数据hash分布</title>
    <link href="cpeixin.cn/2019/11/19/%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%8B%E7%9A%84%E6%95%B0%E6%8D%AEhash%E5%88%86%E5%B8%83/"/>
    <id>cpeixin.cn/2019/11/19/%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%8B%E7%9A%84%E6%95%B0%E6%8D%AEhash%E5%88%86%E5%B8%83/</id>
    <published>2019-11-19T15:05:08.000Z</published>
    <updated>2020-04-04T11:24:04.737Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --&gt;&lt;!-- rebuild by neat --&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>【转载】字节跳动在Spark SQL上的核心优化实践</title>
    <link href="cpeixin.cn/2019/11/12/%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E5%9C%A8Spark-SQL%E4%B8%8A%E7%9A%84%E6%A0%B8%E5%BF%83%E4%BC%98%E5%8C%96%E5%AE%9E%E8%B7%B5/"/>
    <id>cpeixin.cn/2019/11/12/%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E5%9C%A8Spark-SQL%E4%B8%8A%E7%9A%84%E6%A0%B8%E5%BF%83%E4%BC%98%E5%8C%96%E5%AE%9E%E8%B7%B5/</id>
    <published>2019-11-12T10:57:27.000Z</published>
    <updated>2020-05-16T10:59:03.835Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --><p><br>本文转载自字节跳动技术团队在掘金网上发表的文章，主要是Spark SQL在字节数据仓库应用方面的优化实践<br>原文链接：<a href="https://juejin.im/post/5dc3ed336fb9a04a7847f25c" target="_blank" rel="external nofollow noopener noreferrer">https://juejin.im/post/5dc3ed336fb9a04a7847f25c</a><br><a name="KLy4v"></a></p><h2 id="Spark-SQL-架构简介"><a href="#Spark-SQL-架构简介" class="headerlink" title="Spark SQL 架构简介"></a>Spark SQL 架构简介</h2><p>我们先简单聊一下Spark SQL 的架构。下面这张图描述了一条 SQL 提交之后需要经历的几个阶段，结合这些阶段就可以看到在哪些环节可以做优化。<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589617132571-55a23e83-cc96-437b-93a9-871d41c6724e.webp#align=left&display=inline&height=448&margin=%5Bobject%20Object%5D&originHeight=448&originWidth=1080&size=0&status=done&style=none&width=1080" alt><br><br><br>很多时候，做数据仓库建模的同学更倾向于直接写 SQL 而非使用 Spark 的 DSL。一条 SQL 提交之后会被 Parser 解析并转化为 Unresolved Logical Plan。它的重点是 Logical Plan 也即逻辑计划，它描述了希望做什么样的查询。Unresolved 是指该查询相关的一些信息未知，比如不知道查询的目标表的 Schema 以及数据位置。<br>上述信息存于 Catalog 内。在生产环境中，一般由 Hive Metastore 提供 Catalog 服务。Analyzer 会结合 Catalog 将 Unresolved Logical Plan 转换为 Resolved Logical Plan。</p><p>到这里还不够。不同的人写出来的 SQL 不一样，生成的 Resolved Logical Plan 也就不一样，执行效率也不一样。为了保证无论用户如何写 SQL 都可以高效的执行，Spark SQL 需要对 Resolved Logical Plan 进行优化，这个优化由 Optimizer 完成。Optimizer 包含了一系列规则，对 Resolved Logical Plan 进行等价转换，最终生成 Optimized Logical Plan。<strong>该 Optimized Logical Plan 不能保证是全局最优的，但至少是接近最优的。</strong><br>上述过程只与 SQL 有关，与查询有关，但是与 Spark 无关，因此无法直接提交给 Spark 执行。Query Planner 负责将 Optimized Logical Plan 转换为 Physical Plan，进而可以直接由 Spark 执行。<br><br><br>由于同一种逻辑算子可以有多种物理实现。如 Join 有多种实现，ShuffledHashJoin、BroadcastHashJoin、BroadcastNestedLoopJoin、SortMergeJoin 等。因此 Optimized Logical Plan 可被 Query Planner 转换为多个 Physical Plan。如何选择最优的 Physical Plan 成为一件非常影响最终执行性能的事情。一种比较好的方式是，<strong>构建一个 Cost Model，并对所有候选的 Physical Plan 应用该 Model 并挑选 Cost 最小的 Physical Plan 作为最终的 Selected Physical Plan。</strong></p><p>Physical Plan 可直接转换成 RDD 由 Spark 执行。我们经常说“计划赶不上变化”，在执行过程中，可能发现原计划不是最优的，后续执行计划如果能根据运行时的统计信息进行调整可能提升整体执行效率。这部分<strong>动态调整由 Adaptive Execution</strong> 完成。<br><br><br>后面介绍字节跳动在 Spark SQL 上做的一些优化，主要围绕这一节介绍的逻辑计划优化与物理计划优化展开。<br><a name="Z68Tc"></a></p><h2 id="Spark-SQL引擎优化"><a href="#Spark-SQL引擎优化" class="headerlink" title="Spark SQL引擎优化"></a>Spark SQL引擎优化</h2><p><a name="L4CUN"></a></p><h3 id="Bucket-Join改进"><a href="#Bucket-Join改进" class="headerlink" title="Bucket Join改进"></a>Bucket Join改进</h3><p>在 Spark 里，实际并没有 Bucket Join 算子。这里说的 Bucket Join 泛指不需要 Shuffle 的 Sort Merge Join。<br>下图展示了 Sort Merge Join 的基本原理。用虚线框代表的 Table 1 和 Table 2 是两张需要按某字段进行 Join 的表。虚线框内的 partition 0 到 partition m 是该表转换成 RDD 后的 Partition，而非表的分区。</p><p>假设 Table 1 与 Table 2 转换为 RDD 后分别包含 m 和 k 个 Partition。为了进行 Join，需要通过 Shuffle 保证相同 Join Key 的数据在同一个 Partition 内且 Partition 内按 Key 排序，同时保证 Table 1 与 Table 2 经过 Shuffle 后的 RDD 的 Partition 数相同。<br><br><br>如下图所示，经过 Shuffle 后只需要启动 n 个 Task，每个 Task 处理 Table 1 与 Table 2 中对应 Partition 的数据进行 Join 即可。如 Task 0 只需要顺序扫描 Shuffle 后的左右两边的 partition 0 即可完成 Join。<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621443202-f22b73ca-17f1-450c-86ca-e47c9b934bca.webp#align=left&display=inline&height=629&margin=%5Bobject%20Object%5D&originHeight=629&originWidth=1080&size=0&status=done&style=none&width=1080" alt><br><br><br>该方法的优势是适用场景广，几乎可用于任意大小的数据集。劣势是每次 Join 都需要对全量数据进行 Shuffle，而 Shuffle 是最影响 Spark SQL 性能的环节。如果能避免 Shuffle 往往能大幅提升 Spark SQL 性能。</p><p>对于大数据的场景来讲，数据一般是一次写入多次查询。如果经常对两张表按相同或类似的方式进行 Join，每次都需要付出 Shuffle 的代价。与其这样，<strong>不如让数据在写的时候，就让数据按照利于 Join 的方式分布，从而使得 Join 时无需进行 Shuffle。</strong>如下图所示，Table 1 与 Table 2 内的数据按照相同的 Key 进行分桶且桶数都为 n，同时桶内按该 Key 排序。对这两张表进行 Join 时，可以避免 Shuffle，直接启动 n 个 Task 进行 Join。<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621443345-00aac217-cf9d-4ca2-beea-3a27868e9709.webp#align=left&display=inline&height=697&margin=%5Bobject%20Object%5D&originHeight=697&originWidth=1200&size=0&status=done&style=none&width=1200" alt><br><br><br>字节跳动对 Spark SQL 的 BucketJoin 做了四项比较大的改进。<br><strong><br></strong>改进一：支持与 Hive 兼容**<br>在过去一段时间，字节跳动把大量的 Hive 作业迁移到了 SparkSQL。而 Hive 与 Spark SQL 的 Bucket 表不兼容。对于使用 Bucket 表的场景，如果直接更新计算引擎，会造成 Spark SQL 写入 Hive Bucket 表的数据无法被下游的 Hive 作业当成 Bucket 表进行 Bucket Join，从而造成作业执行时间变长，可能影响 SLA。</p><p>为了解决这个问题，我们让 Spark SQL 支持 Hive 兼容模式，从而保证 Spark SQL 写入的 Bucket 表与 Hive 写入的 Bucket 表效果一致，并且这种表可以被 Hive 和 Spark SQL 当成 Bucket 表进行 Bucket Join 而不需要 Shuffle。通过这种方式保证 Hive 向 Spark SQL 的透明迁移。</p><p>第一个需要解决的问题是，Hive 的一个 Bucket 一般只包含一个文件，而 Spark SQL 的一个 Bucket 可能包含多个文件。<strong>解决办法是动态增加一次以 Bucket Key 为 Key 并且并行度与 Bucket 个数相同的 Shuffle。</strong></p><p><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621443237-9db92d7d-db57-44a7-8c38-d02bece98cc8.webp#align=left&display=inline&height=609&margin=%5Bobject%20Object%5D&originHeight=609&originWidth=1200&size=0&status=done&style=none&width=1200" alt><br><br><br><br><br>第二个需要解决的问题是，Hive 1.x 的哈希方式与 Spark SQL 2.x 的哈希方式（Murmur3Hash）不同，使得相同的数据在 Hive 中的 Bucket ID 与 Spark SQL 中的 Bucket ID 不同而无法直接 Join。在 Hive 兼容模式下，我们让上述动态增加的 Shuffle 使用 Hive 相同的哈希方式，从而解决该问题。<br><strong><br></strong>改进二：支持倍数关系Bucket Join**<br>Spark SQL 要求只有 Bucket 相同的表才能（必要非充分条件）进行 Bucket Join。对于两张大小相差很大的表，比如几百 GB 的维度表与几十 TB （单分区）的事实表，它们的 Bucket 个数往往不同，并且个数相差很多，默认无法进行 Bucket Join。因此我们通过两种方式支持了倍数关系的 Bucket Join，即当两张 Bucket 表的 Bucket 数是倍数关系时支持 Bucket Join。</p><p>第一种方式，Task 个数与小表 Bucket 个数相同。如下图所示，Table A 包含 3 个 Bucket，Table B 包含 6 个 Bucket。此时 Table B 的 bucket 0 与 bucket 3 的数据合集应该与 Table A 的 bucket 0 进行 Join。这种情况下，可以启动 3 个 Task。其中 Task 0 对 Table A 的 bucket 0 与 Table B 的 bucket 0 + bucket 3 进行 Join。在这里，需要对 Table B 的 bucket 0 与 bucket 3 的数据再做一次 merge sort 从而保证合集有序。<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621443244-bfe94284-63b6-4abe-8e6f-1df98c09fd08.webp#align=left&display=inline&height=616&margin=%5Bobject%20Object%5D&originHeight=616&originWidth=1200&size=0&status=done&style=none&width=1200" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/gif/1072113/1589621444353-c4e9ece6-e014-4583-ba9d-28bda6a5fe62.gif#align=left&display=inline&height=1&margin=%5Bobject%20Object%5D&name=image.gif&originHeight=1&originWidth=1&size=70&status=done&style=none&width=1" alt="image.gif"></p><p>如果 Table A 与 Table B 的 Bucket 个数相差不大，可以使用上述方式。如果 Table B 的 Bucket 个数是 Bucket A Bucket 个数的 10 倍，那上述方式虽然避免了 Shuffle，但可能因为并行度不够反而比包含 Shuffle 的 SortMergeJoin 速度慢。此时可以使用另外一种方式，即 Task 个数与大表 Bucket 个数相等，如下图所示。<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621443251-d514de79-4fd1-4960-9e27-2a4e408c88ba.webp#align=left&display=inline&height=555&margin=%5Bobject%20Object%5D&originHeight=555&originWidth=1080&size=0&status=done&style=none&width=1080" alt><br><br><br>在该方案下，可将 Table A 的 3 个 Bucket 读多次。在上图中，直接将 Table A 与 Table A 进行 Bucket Union （新的算子，与 Union 类似，但保留了 Bucket 特性），结果相当于 6 个 Bucket，与 Table B 的 Bucket 个数相同，从而可以进行 Bucket Join。<br><strong><br></strong>改进三：支持BucketJoin 降级**<br>公司内部过去使用 Bucket 的表较少，在我们对 Bucket 做了一系列改进后，大量用户希望将表转换为 Bucket 表。转换后，表的元信息显示该表为 Bucket 表，而历史分区内的数据并未按 Bucket 表要求分布，在查询历史数据时会出现无法识别 Bucket 的问题。</p><p>同时，由于数据量上涨快，平均 Bucket 大小也快速增长。这会造成单 Task 需要处理的数据量过大进而引起使用 Bucket 后的效果可能不如直接使用基于 Shuffle 的 Join。<br><br><br>为了解决上述问题，我们实现了支持降级的 Bucket 表。基本原理是，每次修改 Bucket 信息（包含上述两种情况——将非 Bucket 表转为 Bucket 表，以及修改 Bucket 个数）时，记录修改日期。并且在决定使用哪种 Join 方式时，对于 Bucket 表先检查所查询的数据是否只包含该日期之后的分区。如果是，则当成 Bucket 表处理，支持 Bucket Join；否则当成普通无 Bucket 的表。<br><strong><br></strong>改进四：支持超集<strong><br>对于一张常用表，可能会与另外一张表按 User 字段做 Join，也可能会与另外一张表按 User 和 App 字段做 Join，与其它表按 User 与 Item 字段进行 Join。而 Spark SQL 原生的 Bucket Join 要求 Join Key Set 与表的 Bucket Key Set 完全相同才能进行 Bucket Join。在该场景中，不同 Join 的 Key Set 不同，因此无法同时使用 Bucket Join。这极大的限制了 Bucket Join 的适用场景。<br><br><br>针对此问题，我们支持了超集场景下的 Bucket Join。只要 Join Key Set 包含了 Bucket Key Set，即可进行 Bucket Join。<br><br><br>如下图所示，Table X 与 Table Y，都按字段 A 分 Bucket。而查询需要对 Table X 与 Table Y 进行 Join，且 Join Key Set 为 A 与 B。此时，由于 A 相等的数据，在两表中的 Bucket ID 相同，那 A 与 B 各自相等的数据在两表中的 Bucket ID 肯定也相同，所以数据分布是满足 Join 要求的，不需要 Shuffle。同时，Bucket Join 还需要保证两表按 Join Key Set 即 A 和 B 排序，此时只需要对 Table X 与 Table Y 进行分区内排序即可。由于两边已经按字段 A 排序了，此时再按 A 与 B 排序，代价相对较低。<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621443338-9f06a217-9078-4734-84ce-860707b4612e.webp#align=left&display=inline&height=661&margin=%5Bobject%20Object%5D&originHeight=661&originWidth=1200&size=0&status=done&style=none&width=1200" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/gif/1072113/1589621444719-a5289c2c-0dea-4316-8924-1e4377bce1ea.gif#align=left&display=inline&height=1&margin=%5Bobject%20Object%5D&name=image.gif&originHeight=1&originWidth=1&size=70&status=done&style=none&width=1" alt="image.gif"><br></strong>物化列**<br>Spark SQL 处理嵌套类型数据时，存在以下问题：</p><ul><li><strong>读取大量不必要的数据</strong>：对于 Parquet / ORC 等列式存储格式，可只读取需要的字段，而直接跳过其它字段，从而极大节省 IO。而对于嵌套数据类型的字段，如下图中的 Map 类型的 people 字段，往往只需要读取其中的子字段，如 people.age。却需要将整个 Map 类型的 people 字段全部读取出来然后抽取出 people.age 字段。这会引入大量的无意义的 IO 开销。在我们的场景中，存在不少 Map 类型的字段，而且很多包含几十至几百个 Key，这也就意味着 IO 被放大了几十至几百倍。<br></li><li><strong>无法进行向量化读取</strong>：而向量化读能极大的提升性能。但截止到目前（2019年10月26日），Spark 不支持包含嵌套数据类型的向量化读取。这极大的影响了包含嵌套数据类型的查询性能<br></li><li><strong>不支持 Filter 下推</strong>：目前（2019年10月26日）的 Spark 不支持嵌套类型字段上的 Filter 的下推<br></li><li><strong>重复计算</strong>：JSON 字段，在 Spark SQL 中以 String 类型存在，严格来说不算嵌套数据类型。不过实践中也常用于保存不固定的多个字段，在查询时通过 JSON Path 抽取目标子字段，而大型 JSON 字符串的字段抽取非常消耗 CPU。对于热点表，频繁重复抽取相同子字段非常浪费资源。<br></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621443241-a0b575d3-4b99-451f-802f-991fd41107f6.webp#align=left&display=inline&height=668&margin=%5Bobject%20Object%5D&originHeight=668&originWidth=1200&size=0&status=done&style=none&width=1200" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/gif/1072113/1589621444769-6635f36d-d873-430c-8223-adcb532766d6.gif#align=left&display=inline&height=1&margin=%5Bobject%20Object%5D&name=image.gif&originHeight=1&originWidth=1&size=70&status=done&style=none&width=1" alt="image.gif"><br>对于这个问题，做数仓的同学也想了一些解决方案。如下图所示，<strong>在名为 base_table 的表之外创建了一张名为 sub_table 的表，并且将高频使用的子字段 people.age 设置为一个额外的 Integer 类型的字段</strong>。下游不再通过 base_table 查询 people.age，而是使用 sub_table 上的 age 字段代替。通过这种方式，将嵌套类型字段上的查询转为了 Primitive 类型字段的查询，同时解决了上述问题。<br><img src="https://cdn.nlark.com/yuque/0/2020/gif/1072113/1589621444716-a4b11d0a-899e-430c-af62-8d0151c63af6.gif#align=left&display=inline&height=1&margin=%5Bobject%20Object%5D&name=image.gif&originHeight=1&originWidth=1&size=70&status=done&style=none&width=1" alt="image.gif">)<img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621443482-11bc4e9f-a7bb-4d7d-9026-746ea16d0d27.webp#align=left&display=inline&height=611&margin=%5Bobject%20Object%5D&originHeight=611&originWidth=1200&size=0&status=done&style=none&width=1200" alt><br><br><br>这种方案存在明显缺陷：</p><ul><li><strong>额外维护了一张表</strong>，引入了大量的额外存储/计算开销。<br></li><li>无法在新表上查询新增字段的历史数据（如要支持对历史数据的查询，需要重跑历史作业，开销过大，无法接受）。<br></li><li>表的维护方需要在修改表结构后修改插入数据的作业。<br></li><li>需要下游查询方修改查询语句，推广成本较大。<br></li><li><strong>运营成本高</strong>：如果高频子字段变化，需要删除不再需要的独立子字段，并添加新子字段为独立字段。删除前，需要确保下游无业务使用该字段。而新增字段需要通知并推进下游业务方使用新字段。<br></li></ul><p>为解决上述所有问题，我们设计并实现了物化列。它的原理是：</p><ul><li>新增一个 Primitive 类型字段，比如 Integer 类型的 age 字段，并且指定它是 people.age 的物化字段。<br></li><li>插入数据时，为物化字段自动生成数据，并在 Partition Parameter 内保存物化关系。因此对插入数据的作业完全透明，表的维护方不需要修改已有作业。<br></li><li>查询时，检查所需查询的所有 Partition，如果都包含物化信息（people.age 到 age 的映射），直接将 select people.age 自动重写为 select age，从而实现对下游查询方的完全透明优化。同时兼容历史数据。<br></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621443240-98b45cc3-1d0f-4093-980d-265abb445a8a.webp#align=left&display=inline&height=683&margin=%5Bobject%20Object%5D&originHeight=683&originWidth=1200&size=0&status=done&style=none&width=1200" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/gif/1072113/1589621444777-84f75218-68e0-4929-909d-4c828ab64f33.gif#align=left&display=inline&height=1&margin=%5Bobject%20Object%5D&name=image.gif&originHeight=1&originWidth=1&size=70&status=done&style=none&width=1" alt="image.gif"><br>下图展示了在某张核心表上使用物化列的收益：<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621443260-d3424ecd-67fe-41ed-a902-edf0d1ee45ab.webp#align=left&display=inline&height=423&margin=%5Bobject%20Object%5D&originHeight=423&originWidth=1200&size=0&status=done&style=none&width=1200" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/gif/1072113/1589621444729-1b39919b-8ea5-459e-bc2b-db24d8391b39.gif#align=left&display=inline&height=1&margin=%5Bobject%20Object%5D&name=image.gif&originHeight=1&originWidth=1&size=70&status=done&style=none&width=1" alt="image.gif"><br><strong>物化视图</strong><br>在 OLAP 领域，经常会对相同表的某些固定字段进行 Group By 和 Aggregate / Join 等耗时操作，造成大量重复性计算，浪费资源，且影响查询性能，不利于提升用户体验。<br>我们实现了基于物化视图的优化功能：<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621443261-8e8f3de2-937d-475b-aca0-d39fed39babb.webp#align=left&display=inline&height=594&margin=%5Bobject%20Object%5D&originHeight=594&originWidth=1080&size=0&status=done&style=none&width=1080" alt><br><br><br>如上图所示，查询历史显示大量查询根据 user 进行 group by，然后对 num 进行 sum 或 count 计算。此时可创建一张物化视图，且对 user 进行 gorup by，对 num 进行 avg（avg 会自动转换为 count 和 sum）。用户对原始表进行 select user, sum(num) 查询时，Spark SQL 自动将查询重写为对物化视图的 select user, sum_num 查询。<br><strong><br></strong>Spark SQL 引擎上的其它优化<strong><br>下图展示了我们在 Spark SQL 上进行的其它部分优化工作：<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621443207-45af67c8-8989-4026-81f3-d646d8123845.webp#align=left&display=inline&height=750&margin=%5Bobject%20Object%5D&originHeight=750&originWidth=1080&size=0&status=done&style=none&width=1080" alt><br></strong><br><a name="5UxSb"></a></p><h2 id="Spark-Shuffle稳定性提升与性能优化"><a href="#Spark-Shuffle稳定性提升与性能优化" class="headerlink" title="Spark Shuffle稳定性提升与性能优化"></a>Spark Shuffle稳定性提升与性能优化</h2><p><a name="5rTgp"></a></p><h3><a href="#" class="headerlink"></a></h3><p><a name="Ajtpe"></a></p><h3 id="Spark-Shuffle-存在的问题"><a href="#Spark-Shuffle-存在的问题" class="headerlink" title="Spark Shuffle 存在的问题"></a>Spark Shuffle 存在的问题</h3><p>Shuffle的原理，很多同学应该已经很熟悉了。鉴于时间关系，这里不介绍过多细节，只简单介绍下基本模型。<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/gif/1072113/1589621445126-5aa3b134-c904-42d9-ac04-09618bb32553.gif#align=left&display=inline&height=1&margin=%5Bobject%20Object%5D&name=image.gif&originHeight=1&originWidth=1&size=70&status=done&style=none&width=1" alt="image.gif">)<img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621443213-c2f4bcdb-24e6-4fdc-afc2-3397f6608fec.webp#align=left&display=inline&height=679&margin=%5Bobject%20Object%5D&originHeight=679&originWidth=1200&size=0&status=done&style=none&width=1200" alt><br><br><br>如上图所示，我们将 Shuffle 上游 Stage 称为 Mapper Stage，其中的 Task 称为 Mapper。Shuffle 下游 Stage 称为 Reducer Stage，其中的 Task 称为 Reducer。<br>每个 Mapper 会将自己的数据分为最多 N 个部分，N 为 Reducer 个数。每个 Reducer 需要去最多 M （Mapper 个数）个 Mapper 获取属于自己的那部分数据。<br><br><br>这个架构存在两个问题：</p><ul><li><strong>稳定性问题</strong>：Mapper 的 Shuffle Write 数据存于 Mapper 本地磁盘，只有一个副本。当该机器出现磁盘故障，或者 IO 满载，CPU 满载时，Reducer 无法读取该数据，从而引起 FetchFailedException，进而导致 Stage Retry。Stage Retry 会造成作业执行时间增长，直接影响 SLA。同时，执行时间越长，出现 Shuffle 数据无法读取的可能性越大，反过来又会造成更多 Stage Retry。如此循环，可能导致大型作业无法成功执行。</li></ul><p><br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621444392-8549057c-506b-4459-856d-0ce9cddf9910.webp#align=left&display=inline&height=628&margin=%5Bobject%20Object%5D&originHeight=628&originWidth=1200&size=0&status=done&style=none&width=1200" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/gif/1072113/1589621445074-9921e4da-02ca-438c-9b15-403f41fba339.gif#align=left&display=inline&height=1&margin=%5Bobject%20Object%5D&name=image.gif&originHeight=1&originWidth=1&size=70&status=done&style=none&width=1" alt="image.gif"></p><ul><li><strong>性能问题</strong>：每个 Mapper 的数据会被大量 Reducer 读取，并且是随机读取不同部分。假设 Mapper 的 Shuffle 输出为 512MB，Reducer 有 10 万个，那平均每个 Reducer 读取数据 512MB / 100000 = 5.24KB。并且，不同 Reducer 并行读取数据。对于 Mapper 输出文件而言，存在大量的随机读取。而 HDD 的随机 IO 性能远低于顺序 IO。最终的现象是，Reducer 读取 Shuffle 数据非常慢，反映到 Metrics 上就是 Reducer Shuffle Read Blocked Time 较长，甚至占整个 Reducer 执行时间的一大半，如下图所示。</li></ul><p><br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621444444-a5a5eeea-5d00-473f-892c-bef8ff9e032f.webp#align=left&display=inline&height=545&margin=%5Bobject%20Object%5D&originHeight=545&originWidth=1200&size=0&status=done&style=none&width=1200" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/gif/1072113/1589621445093-1dba238c-18eb-4bc2-a637-4a5f0f069847.gif#align=left&display=inline&height=1&margin=%5Bobject%20Object%5D&name=image.gif&originHeight=1&originWidth=1&size=70&status=done&style=none&width=1" alt="image.gif"><br><strong>基于HDFS的Shuffle稳定性提升</strong><br>经观察，引起 Shuffle 失败的最大因素不是磁盘故障等硬件问题，而是 CPU 满载和磁盘 IO 满载。<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/gif/1072113/1589621445175-a4b309ba-f45b-4141-ac27-8771c622c313.gif#align=left&display=inline&height=1&margin=%5Bobject%20Object%5D&name=image.gif&originHeight=1&originWidth=1&size=70&status=done&style=none&width=1" alt="image.gif">)<img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621444483-bc3847a8-0664-4c0d-a4ed-ae5f1781331b.webp#align=left&display=inline&height=684&margin=%5Bobject%20Object%5D&originHeight=684&originWidth=1200&size=0&status=done&style=none&width=1200" alt><br><br><br>如上图所示，机器的 CPU 使用率接近 100%，使得 Mapper 侧的 Node Manager 内的 Spark External Shuffle Service 无法及时提供 Shuffle 服务。<br>下图中 Data Node 占用了整台机器 IO 资源的 84%，部分磁盘 IO 完全打满，这使得读取 Shuffle 数据非常慢，进而使得 Reducer 侧无法在超时时间内读取数据，造成 FetchFailedException。<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621444481-5779db89-9d8b-4b17-82e3-7b60b08eed02.webp#align=left&display=inline&height=627&margin=%5Bobject%20Object%5D&originHeight=627&originWidth=1080&size=0&status=done&style=none&width=1080" alt><br><br><br>无论是何种原因，问题的症结都是 Mapper 侧的 Shuffle Write 数据只保存在本地，一旦该节点出现问题，会造成该节点上所有 Shuffle Write 数据无法被 Reducer 读取。解决这个问题的一个通用方法是，通过多副本保证可用性。<br>最初始的一个简单方案是，Mapper 侧最终数据文件与索引文件不写在本地磁盘，而是直接写到 HDFS。Reducer 不再通过 Mapper 侧的 External Shuffle Service 读取 Shuffle 数据，而是直接从 HDFS 上获取数据，如下图所示。<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621444436-0efdf8b6-0082-47c1-9218-36b6e6bbee4f.webp#align=left&display=inline&height=541&margin=%5Bobject%20Object%5D&originHeight=541&originWidth=1080&size=0&status=done&style=none&width=1080" alt><br><br><br>快速实现这个方案后，我们做了几组简单的测试。结果表明：</p><ul><li>Mapper 与 Reducer 不多时，Shuffle 读写性能与原始方案相比无差异。<br></li><li>Mapper 与 Reducer 较多时，Shuffle 读变得非常慢。<br></li></ul><p><br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621444384-9bb761c9-fbe1-43c8-9a82-a51e97c97f8e.webp#align=left&display=inline&height=540&margin=%5Bobject%20Object%5D&originHeight=540&originWidth=1200&size=0&status=done&style=none&width=1200" alt><br><br><br>在上面的实验过程中，HDFS 发出了报警信息。如下图所示，HDFS Name Node Proxy 的 QPS 峰值达到 60 万。（注：字节跳动自研了 Node Name Proxy，并在 Proxy 层实现了缓存，因此读 QPS 可以支撑到这个量级）。<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621444590-4c232e53-8507-472c-844c-18249a03f85f.webp#align=left&display=inline&height=698&margin=%5Bobject%20Object%5D&originHeight=698&originWidth=1080&size=0&status=done&style=none&width=1080" alt><br><br><br>原因在于，总共 10000 Reducer，需要从 10000 个 Mapper 处读取数据文件和索引文件，总共需要读取 HDFS 10000 * 1000 * 2 = 2 亿次。</p><p>如果只是 Name Node 的单点性能问题，还可以通过一些简单的方法解决。例如在 Spark Driver 侧保存所有 Mapper 的 Block Location，然后 Driver 将该信息广播至所有 Executor，每个 Reducer 可以直接从 Executor 处获取 Block Location，然后无须连接 Name Node，而是直接从 Data Node 读取数据。但鉴于 Data Node 的线程模型，这种方案会对 Data Node 造成较大冲击。<br>最后我们选择了一种比较简单可行的方案，如下图所示。<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621444471-aaff74d3-ec02-4014-8d71-1b201eafdbf1.webp#align=left&display=inline&height=582&margin=%5Bobject%20Object%5D&originHeight=582&originWidth=1080&size=0&status=done&style=none&width=1080" alt><br><br><br>Mapper 的 Shuffle 输出数据仍然按原方案写本地磁盘，写完后上传到 HDFS。Reducer 仍然按原始方案通过 Mapper 侧的 External Shuffle Service 读取 Shuffle 数据。如果失败了，则从 HDFS 读取。这种方案极大减少了对 HDFS 的访问频率。<br>该方案上线近一年：</p><ul><li>覆盖 57% 以上的 Spark Shuffle 数据。<br></li><li>使得 Spark 作业整体性能提升 14%。<br></li><li>天级大作业性能提升 18%。<br></li><li>小时级作业性能提升 12%。<br></li></ul><p><br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621444424-472f0478-d4b8-47de-a9ea-557b4c201c05.webp#align=left&display=inline&height=670&margin=%5Bobject%20Object%5D&originHeight=670&originWidth=1200&size=0&status=done&style=none&width=1200" alt><br><img src="https://cdn.nlark.com/yuque/0/2020/gif/1072113/1589621445065-2ed3ba00-5462-4f5f-9752-f2491fc7ea4d.gif#align=left&display=inline&height=1&margin=%5Bobject%20Object%5D&name=image.gif&originHeight=1&originWidth=1&size=70&status=done&style=none&width=1" alt="image.gif"><br>该方案旨在提升 Spark Shuffle 稳定性从而提升作业稳定性，但最终没有使用方差等指标来衡量稳定性的提升。原因在于每天集群负载不一样，整体方差较大。Shuffle 稳定性提升后，Stage Retry 大幅减少，整体作业执行时间减少，也即性能提升。最终通过对比使用该方案前后的总的作业执行时间来对比性能的提升，用于衡量该方案的效果。<br><strong>Shuffle性能优化实践与探索</strong><br>如上文所分析，Shuffle 性能问题的原因在于，Shuffle Write 由 Mapper 完成，然后 Reducer 需要从所有 Mapper 处读取数据。这种模型，我们称之为以 Mapper 为中心的 Shuffle。它的问题在于：</p><ul><li>Mapper 侧会有 M 次顺序写 IO。<br></li><li>Mapper 侧会有 M * N * 2 次随机读 IO（这是最大的性能瓶颈）。<br></li><li>Mapper 侧的 External Shuffle Service 必须与 Mapper 位于同一台机器，无法做到有效的存储计算分离，Shuffle 服务无法独立扩展。<br></li></ul><p>针对上述问题，我们提出了以 Reducer 为中心的，存储计算分离的 Shuffle 方案，如下图所示。<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/webp/1072113/1589621444445-e51ea3d0-904b-48ff-af72-22657a86b3ba.webp#align=left&display=inline&height=730&margin=%5Bobject%20Object%5D&originHeight=730&originWidth=1200&size=0&status=done&style=none&width=1200" alt><br><br><br>该方案的原理是，Mapper 直接将属于不同 Reducer 的数据写到不同的 Shuffle Service。在上图中，总共 2 个 Mapper，5 个 Reducer，5 个 Shuffle Service。所有 Mapper 都将属于 Reducer 0 的数据远程流式发送给 Shuffle Service 0，并由它顺序写入磁盘。Reducer 0 只需要从 Shuffle Service 0 顺序读取所有数据即可，无需再从 M 个 Mapper 取数据。该方案的优势在于：</p><ul><li>将 M * N * 2 次随机 IO 变为 N 次顺序 IO。<br></li><li>Shuffle Service 可以独立于 Mapper 或者 Reducer 部署，从而做到独立扩展，做到存储计算分离。<br></li><li>Shuffle Service 可将数据直接存于 HDFS 等高可用存储，因此可同时解决 Shuffle 稳定性问题。<br></li></ul><p>我的分享就到这里，谢谢大家。<br><a name="23kL1"></a></p><h2 id="QA集锦"><a href="#QA集锦" class="headerlink" title="QA集锦"></a>QA集锦</h2><p><strong>- 提问：物化列新增一列，是否需要修改历史数据？</strong><br>回答：历史数据太多，不适合修改历史数据。</p><p><strong>- 提问：如果用户的请求同时包含新数据和历史数据，如何处理？</strong><br>回答：一般而言，用户修改数据都是以 Partition 为单位。所以我们在 Partition Parameter 上保存了物化列相关信息。如果用户的查询同时包含了新 Partition 与历史 Partition，我们会在新 Partition 上针对物化列进行 SQL Rewrite，历史 Partition 不 Rewrite，然后将新老 Partition 进行 Union，从而在保证数据正确性的前提下尽可能充分利用物化列的优势。</p><p><strong>- 提问：你好，你们针对用户的场景，做了很多挺有价值的优化。像物化列、物化视图，都需要根据用户的查询 Pattern 进行设置。目前你们是人工分析这些查询，还是有某种机制自动去分析并优化？</strong><br>回答：目前我们主要是通过一些审计信息辅助人工分析。同时我们也正在做物化列与物化视图的推荐服务，最终做到智能建设物化列与物化视图。</p><p><strong>- 提问：刚刚介绍的基于 HDFS 的 Spark Shuffle 稳定性提升方案，是否可以异步上传 Shuffle 数据至 HDFS？</strong><br>回答：这个想法挺好，我们之前也考虑过，但基于几点考虑，最终没有这样做。第一，单 Mapper 的 Shuffle 输出数据量一般很小，上传到 HDFS 耗时在 2 秒以内，这个时间开销可以忽略；第二，我们广泛使用 External Shuffle Service 和 Dynamic Allocation，Mapper 执行完成后可能 Executor 就回收了，如果要异步上传，就必须依赖其它组件，这会提升复杂度，ROI 较低。</p><p><a name="BtHKy"></a></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>字节的这篇分享，我真的太喜欢了，所有的优化点，都是拿真实的业务场景进行举例，虽然上文有的技术点在我们的场景中还没必要去做到这种优化程度，但是如此实在的来源于线上的方案，非常容易理解。我们公司目前的数据量要比字节的量小很多，最近在新闻上看到抖音的日活已经达到了4亿，所以我们在数仓中的数据，还没有用到更细粒度的Bucket表，分区表就已经完全可以满足我们的需求。上文中的物化列方案，我觉得很新颖，但是从工程师的角度来讲，在物化列方案中，多维护一张表，添加了复杂度和运营成本，我们在数据的存储中，尽可量的回去避免复杂结构的数据类型，这样会降低存储端和计算端代码的复杂度。这篇文章是针对Spark SQL的优化方面，可以说基本上每个大数据公司都会用到Spark SQL，上述的优化方案肯定会帮助到更多的大数据团队 💪</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;br&gt;本文转载自字节跳动技术团队在掘金网上发表的文章，主要是Spark SQL在字节数据仓库应用方面的优化实践&lt;br&gt;原文链接：&lt;a href
      
    
    </summary>
    
    
      <category term="大数据" scheme="cpeixin.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="spark" scheme="cpeixin.cn/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>数仓-规范</title>
    <link href="cpeixin.cn/2019/10/20/%E6%95%B0%E4%BB%93-%E8%A7%84%E8%8C%83/"/>
    <id>cpeixin.cn/2019/10/20/%E6%95%B0%E4%BB%93-%E8%A7%84%E8%8C%83/</id>
    <published>2019-10-20T12:42:13.000Z</published>
    <updated>2020-08-04T12:44:04.462Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --><p>模型是整个数仓建设基石，规范是数仓建设的保障。为了避免出现指标重复建设和数据质量差的情况，我们统一按照最详细、可落地的方法进行规范建设。<br><br><br><strong>(1) 词根</strong><br>词根是维度和指标管理的基础，划分为普通词根与专有词根，提高词根的易用性和关联性。</p><ul><li>普通词根：描述事物的最小单元体，如：交易-trade。</li><li>专有词根：具备约定成俗或行业专属的描述体，如：美元-USD。</li></ul><p><br><strong>(2) 表命名规范</strong><br><strong>通用规范</strong></p><ul><li>表名、字段名采用一个下划线分隔词根（示例：clienttype-&gt;client_type）。</li><li>每部分使用小写英文单词，属于通用字段的必须满足通用字段信息的定义。</li><li>表名、字段名需以字母为开头。</li><li>表名、字段名最长不超过64个英文字符。</li><li>优先使用词根中已有关键字（数仓标准配置中的词根管理），定期Review新增命名的不合理性。</li><li>在表名自定义部分禁止采用非标准的缩写。</li></ul><p><strong>表命名规则</strong><br><code>表名称 = 类型 + 业务主题 + 子主题 + 表含义 + 存储格式 + 更新频率 +结尾</code>，如下图所示：<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596544345549-806396ce-1106-4c26-9d8a-3b7490800cd1.png#align=left&display=inline&height=402&margin=%5Bobject%20Object%5D&originHeight=402&originWidth=1920&size=0&status=done&style=none&width=1920" alt><br>图6 统一的表命名规范<br><strong>(3) 指标命名规范</strong><br>结合指标的特性以及词根管理规范，将指标进行结构化处理。<br>A. 基础指标词根，即所有指标必须包含以下基础词根：</p><table><thead><tr><th align="left">基础指标词根</th><th align="left">英文全称</th><th align="left">Hive数据类型</th><th align="left">MySQL数据类型</th><th align="left">长度</th><th align="left">精度</th><th align="left">词根</th><th align="left">样例</th></tr></thead><tbody><tr><td align="left">数量</td><td align="left">count</td><td align="left">Bigint</td><td align="left">Bigint</td><td align="left">10</td><td align="left">0</td><td align="left">cnt</td><td align="left"></td></tr><tr><td align="left">金额类</td><td align="left">amout</td><td align="left">Decimal</td><td align="left">Decimal</td><td align="left">20</td><td align="left">4</td><td align="left">amt</td><td align="left"></td></tr><tr><td align="left">比率/占比</td><td align="left">ratio</td><td align="left">Decimal</td><td align="left">Decimal</td><td align="left">10</td><td align="left">4</td><td align="left">ratio</td><td align="left">0.9818</td></tr><tr><td align="left">……</td><td align="left">……</td><td align="left">……</td><td align="left">……</td><td align="left"></td><td align="left"></td><td align="left">……</td><td align="left"></td></tr></tbody></table><p>B.业务修饰词，用于描述业务场景的词汇，例如trade-交易。<br>C.日期修饰词，用于修饰业务发生的时间区间。</p><table><thead><tr><th align="left">日期类型</th><th align="left">全称</th><th align="left">词根</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">日</td><td align="left">daily</td><td align="left">d</td><td align="left"></td></tr><tr><td align="left">周</td><td align="left">weekly</td><td align="left">w</td><td align="left"></td></tr><tr><td align="left">……</td><td align="left">……</td><td align="left">……</td><td align="left"></td></tr></tbody></table><p>D.聚合修饰词，对结果进行聚集操作。</p><table><thead><tr><th align="left">聚合类型</th><th align="left">全称</th><th align="left">词根</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">平均</td><td align="left">average</td><td align="left">avg</td><td align="left"></td></tr><tr><td align="left">周累计</td><td align="left">wtd</td><td align="left">wtd</td><td align="left">本周一截止到当天累计</td></tr><tr><td align="left">……</td><td align="left">……</td><td align="left">……</td><td align="left"></td></tr></tbody></table><p>E.基础指标，单一的业务修饰词+基础指标词根构建基础指标 ，例如：交易金额-trade_amt。<br>F.派生指标，多修饰词+基础指标词根构建派生指标。派生指标继承基础指标的特性，例如：安装门店数量-install_poi_cnt。<br>G.普通指标命名规范，与字段命名规范一致，由词汇转换即可以。<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596544345617-957a287c-f99d-424a-a7c0-99f97c178c8e.png#align=left&display=inline&height=632&margin=%5Bobject%20Object%5D&originHeight=632&originWidth=1416&size=0&status=done&style=none&width=1416" alt><br>图7 普通指标规范<br>H.日期类型指标命名规范，命名时要遵循：业务修饰词+基础指标词根+日期修饰词/聚合修饰词。将日期后缀加到名称后面，如下图所示：<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596544345547-184c7281-6711-4e97-9fa7-1e9db594ebdb.png#align=left&display=inline&height=630&margin=%5Bobject%20Object%5D&originHeight=630&originWidth=1948&size=0&status=done&style=none&width=1948" alt><br>图8 日期类型指标规范<br>I.聚合类型指标，命名时要遵循：业务修饰词+基础指标词根+聚合类型+日期修饰词。将累积标记加到名称后面，如下图所示：<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596544345563-52639192-9e57-452a-bf5d-4ca880f2bf24.png#align=left&display=inline&height=640&margin=%5Bobject%20Object%5D&originHeight=640&originWidth=2476&size=0&status=done&style=none&width=2476" alt><br>图9 聚合类指标规范<br>(4) 清洗规范<br>确认了字段命名和指标命名之后，根据指标与字段的部分特性，我们整理出了整个数仓可预知的24条清洗规范：</p><table><thead><tr><th align="left">数据类型</th><th align="left">数据类别</th><th align="left">Hive类型</th><th align="left">MySQL类型</th><th align="left">长度</th><th align="left">精度</th><th align="left">词根</th><th align="left">格式说明</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">日期类型</td><td align="left">字符日期类</td><td align="left">string</td><td align="left">varchar</td><td align="left">10</td><td align="left"></td><td align="left">date</td><td align="left">YYYY-MM-DD</td><td align="left">日期清洗为相应的格式</td></tr><tr><td align="left">数据类型</td><td align="left">数量类</td><td align="left">bigint</td><td align="left">bigint</td><td align="left">10</td><td align="left">0</td><td align="left">cnt</td><td align="left">活跃门店数量</td><td align="left"></td></tr><tr><td align="left">……</td><td align="left">……</td><td align="left">……</td><td align="left">……</td><td align="left">……</td><td align="left">……</td><td align="left">……</td><td align="left">……</td><td align="left"></td></tr></tbody></table><ul><li><strong>区分使用 TINYINT、SMALLINT、INT、BIGINT 数据类型,；建议使用 TINYINT 代替 BOOLEAN, 提高扩展性和类型转换兼容性；尽量使用低存储数据类型以提高运行效率；</strong></li></ul><ul><li><strong>金额字段统一使用DECIMAL，时间字段(精确到十分秒)字段统一使用TIMESTAMP以提升比较效率， 分区字段及日期字段（没有时分秒）使用 String（格式统一为 yyyyMMdd）。</strong></li></ul><p><br><strong>(4) 编码规范</strong><br>1、程序代码：每层一个代码目录，用于存放对应层的模型开发工程。<br>2、HQL代码：<br>(1) 使用 left semi join 代替 in/exists；<br>(2) join 时小表尽量放在左边，如小表足够小可使用 map join，hive 已支持自动判断大小表；<br>(3) 排序尽量使用 distribute+sort 组合，避免全表 order by；<br>(4) 尽量使用静态分区，提升运行效率；例行补数建议使用动态分区简化代码；<br>(5) 慎用笛卡尔积 join，卡历史数据建议使用日期维度表作笛卡尔积，以并行循环操作；<br>(6) 尽量使用窗口函数、udf 简化 sql 逻辑，提升代码可读性；<br>(7) join/group by/distinct 注意处理 NULL 值，尽量避免数据倾斜；<br>(8) union 会去重, 不用去重时使用 union all；<br>(9) 表查询如果是分区表, 尽量加上分区限制。<br><br><br>结合模型与规范，形成模型设计及模型评审两者的工作职责，如下图所示：<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596544345578-46c7e626-5e49-4aa3-9de3-fbe9f4063238.png#align=left&display=inline&height=881&margin=%5Bobject%20Object%5D&originHeight=881&originWidth=1920&size=0&status=done&style=none&width=1920" alt><br>图10 模型设计和审计职责<br><a name="885aef43"></a></p><h3 id="统一应用归口"><a href="#统一应用归口" class="headerlink" title="统一应用归口"></a>统一应用归口</h3><p>在对原有的应用支持流程进行梳理的时候，我们发现整个研发过程是烟囱式。如果不进行改善就会导致前面的建设”毁于一旦“，所以需对原有应用支持流程进行改造，如下图所示：<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596544345563-6a328bfa-5606-4e0f-b4a8-471aa6724d41.png#align=left&display=inline&height=836&margin=%5Bobject%20Object%5D&originHeight=836&originWidth=1920&size=0&status=done&style=none&width=1920" alt><br>图11 应用归口<br>从图中可以看出，重构前一个应用存在多次迭代，每次迭代都各自维护自己的文档。烟囱式开发会导致业务信息混乱、应用无法与文档对齐、知识传递成本、维护成本和迭代成本大大增加等问题。重构后，应用与知识库相对应，保证一个应用只对应一份文档，且应用统一要求在一份文档上进行迭代，从根源上改变应用支持流程。同时，针对核心业务细节和所支撑的数据信息，进行了全局调研并归纳到知识库。综合统一的知识库，降低了知识传递、理解、维护和迭代成本。<br>统一归口策略包含业务归口统一、设计归口统一和应用归口统一，从底层保证了数仓建设的<strong>三特性</strong>和<strong>三效果</strong>。<br><a name="031e1a23"></a></p><h3 id="统一数据出口"><a href="#统一数据出口" class="headerlink" title="统一数据出口"></a>统一数据出口</h3><p>数仓建设不仅仅是为了数据内容而建设，同时也为了提高交付的数据质量与数据使用的便利性。如何保证数据质量以及推广数据的使用，我们提出了统一数据出口策略。在进行数据资产管理和统一数据出口之前，必须高质量地保障输出的数据质量，从而树立OneData数据服务体系的权威性。<br><strong>1.交付标准化</strong><br>如何保证数据质量，满足什么样的数据才是可交付的，是数据建设者一直探索的问题。为了保证交付的严谨性，在具体化测试方案之前，我们结合数仓的特点明确了数据交付标准的五个特性，如下图所示：<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596544345583-2449c89a-b83a-4e12-bf46-ff8f021dd672.png#align=left&display=inline&height=646&margin=%5Bobject%20Object%5D&originHeight=646&originWidth=750&size=0&status=done&style=none&width=750" alt><br>图12 交付标准化<br>《交付标准化》完善了整个交付细节，从根本上保证了数据的质量，如：业务测试保障数据的合理性、一致性；技术测试保障数据的唯一性、准确性；数据平台的稳定性和后期人工维护保障数据的及时性。<br><strong>2.数据资产管理</strong><br>针对如何解决数据质量中维度与指标一致性以及如何提高数据易用性的问题，我们提出数据资产的概念，借助公司内部平台工具“起源数据平台”实现了整个数据资产管理，它的功能如下图所示：<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1596544345622-d35d1ba7-6685-4f98-8709-3097993bdcc9.png#align=left&display=inline&height=1022&margin=%5Bobject%20Object%5D&originHeight=1022&originWidth=1920&size=0&status=done&style=none&width=1920" alt><br>图13 起源功能体系<br>借用起源数据平台，我们实现了：</p><ul><li>统一指标管理，保证了指标定义、计算口径、数据来源的一致性。</li><li>统一维度管理，保证了维度定义、维度值的一致性。</li><li>统一数据出口，实现了维度和指标元数据信息的唯一出口，维值和指标数据的唯一出口。</li></ul><p>通过交付标准化和数据资产管理，保证了数据质量与数据的易用性，同时我们也构建出OneData数据体系中数据指标管理的核心。<br><br><br>转载自 <a href="https://tech.meituan.com/2019/10/17/meituan-saas-data-warehouse.html" target="_blank" rel="external nofollow noopener noreferrer">https://tech.meituan.com/2019/10/17/meituan-saas-data-warehouse.html</a><br>真心感觉美团技术团队🐂🍺</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;模型是整个数仓建设基石，规范是数仓建设的保障。为了避免出现指标重复建设和数据质量差的情况，我们统一按照最详细、可落地的方法进行规范建设。&lt;br&gt;
      
    
    </summary>
    
    
      <category term="大数据" scheme="cpeixin.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="数据仓库" scheme="cpeixin.cn/tags/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Hive 窗口函数</title>
    <link href="cpeixin.cn/2019/10/05/Hive-%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/"/>
    <id>cpeixin.cn/2019/10/05/Hive-%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/</id>
    <published>2019-10-05T00:22:52.000Z</published>
    <updated>2020-06-15T00:47:29.706Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --><p><a name="e05dce83"></a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本文主要介绍hive中的窗口函数，hive中的窗口函数和sql中的窗口函数相类似,都是用来做一些数据分析类的工作,一般用于OLAP分析（在线分析处理）。<br><a name="b59c9e0f"></a></p><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>窗口函数是用于分析用的一类函数，要理解窗口函数要先从聚合函数说起，我们都知道在sql中有一类函数叫做聚合函数,例如sum()、avg()、max()等等,这类函数可以将多行数据按照规则聚集为一行，一般来讲聚集后的行数是要少于聚集前的行数的.但是有时我们想要既显示聚集前的数据,又要显示聚集后的数据,这时我们便引入了窗口函数。<br><br><br>窗口函数可以在本行内做运算，得到多行的结果，即每一行对应一行的值。 通用的窗口函数可以用下面的语法来概括：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Function() Over (Partition By Column1，Column2，Order By Column3)</span><br></pre></td></tr></table></figure><p>窗口函数又分为以下三类：<br></p><ul><li>聚合型窗口函数</li><li>分析型窗口函数</li><li>取值型窗口函数</li></ul><p><a name="qC5oF"></a></p><h2 id="over-子句"><a href="#over-子句" class="headerlink" title="over()子句"></a>over()子句</h2><p>我们可以形象的把over()子句理解成开窗子句，即打开一个窗口，窗口内包含多条记录，over()会给每一行开一个窗口。如下图，总共有5条记录，每一行代表一条记录，over()在每一条记录的基础上打开一个窗口，给r1记录打开w1窗口，窗口内只包含自己，给r2打开w2窗口，窗口内包含r1、r2，给r3打开w3窗口，窗口内包含r1、r2、r3，以此类推…..<br><br><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1592154521700-b02fdcf0-79ee-4d4e-8bb2-59ebce5c4e55.png#align=left&display=inline&height=315&margin=%5Bobject%20Object%5D&name=20190930094823263.png&originHeight=315&originWidth=748&size=11034&status=done&style=none&width=748" alt="20190930094823263.png"><br></p><p><a name="WXNor"></a></p><h2 id="over-子句的开窗范围"><a href="#over-子句的开窗范围" class="headerlink" title="over()子句的开窗范围"></a>over()子句的开窗范围</h2><p>先看一张图：<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1592154550224-95e40d42-9a67-4c6f-8bfe-0024c2ec7c6e.png#align=left&display=inline&height=303&margin=%5Bobject%20Object%5D&name=20190930103436749.png&originHeight=303&originWidth=697&size=17636&status=done&style=none&width=697" alt="20190930103436749.png"><br><br><br><br><br>current row代表查询的当前行，1 preceding代表前一行，1 following代表后一行，unbounded preceding代表第一行，unbounded following代表最后一行。（注意这里的第一行和最后一行并不是严格的第一行和最后一行，根据具体情况而定）<br><br><br>由上我们不难发现，在使用over()子句进行查询的时候， 不仅可以查询到每条记录的信息，还可以查询到这条记录对应窗口内的所有记录的聚合信息，所以我们通常结合聚合函数和over()子句一起使用。<br><br><br>那么over()是如何进行开窗的呢？即每条记录对应的窗口内应该包含哪些记录呢？这些都是在over()子句的括号内进行定义。<br></p><p><a name="uGpna"></a></p><h3 id="order-by"><a href="#order-by" class="headerlink" title="order by"></a>order by</h3><p>如果over()子句中接order by，例如：over(order by date)，则默认的开窗范围为根据date排序后的rows between unbounded preceding and current row，即第一行到当前行，意思是over(order by date)和over(order by date rows rows between unbounded preceding and current row)的效果是一样的。<br></p><p><a name="Qx7FK"></a></p><h3 id="partition-by"><a href="#partition-by" class="headerlink" title="partition by"></a>partition by</h3><p>如果over子句中接partition by（和group by类似，都是根据列值对行进行分组），例如over(partition by month(date))，则每一行的默认的开窗范围为当前行所在分组的所有记录。注意partition by子句不能单独和window clause子句一起使用，必须结合order by子句，下面会讨论。<br></p><p><a name="qEcpV"></a></p><h3 id="partition-by-order-by"><a href="#partition-by-order-by" class="headerlink" title="partition by + order by"></a>partition by + order by</h3><p>先分组，再排序，即组内排序。同样的，如果 order by后不接window clause，则每一行的默认的开窗范围为：当前行所在分组的第一行到当前行，即over(partition by (month(date)) order by orderdate)和over(partition by (month(date)) order by orderdate rows between undounded preceding and current row)是一样的。<br></p><p><a name="GxqqM"></a></p><h2 id="窗口大小"><a href="#窗口大小" class="headerlink" title="窗口大小"></a>窗口大小</h2><p>over()子句的开窗范围可以通过window 子句（window clause）在over()的括号中定义，window clause的规范如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(ROWS | RANGE) BETWEEN (UNBOUNDED | [num]) PRECEDING AND ([num] PRECEDING | CURRENT ROW | (UNBOUNDED | [num]) FOLLOWING)</span><br><span class="line">(ROWS | RANGE) BETWEEN CURRENT ROW AND (CURRENT ROW | (UNBOUNDED | [num]) FOLLOWING)</span><br><span class="line">(ROWS | RANGE) BETWEEN [num] FOLLOWING AND (UNBOUNDED | [num]) FOLLOWING</span><br><span class="line"></span><br><span class="line">partition by …order by…rows between unbounded preceding and current row</span><br><span class="line">窗口大小为从起始行得到当前行。</span><br><span class="line">partition by …order by… rows between 3 preceding and current row</span><br><span class="line">窗口大小为从当前行到之前三行</span><br><span class="line">partition by …order by… rows between 3 preceding and 1 following</span><br><span class="line">窗口大小为当前行的前三行到之后的一行</span><br><span class="line">partition by …order by… rows between 3 preceding and unbounded following</span><br><span class="line">窗口大小为当前行的前三行到之后的所有行</span><br></pre></td></tr></table></figure><p>例如 select <em>,sum(column_name) over( rows between unbounded preceding and unbounded following) from table_name 表示查询每一行的所有列值，同时给每一行打开一个从第一行到最后一行的窗口，并统计窗口内所有记录的column_name列值的和。最后给每一行输出该行的所有属性以及该行对应窗口内记录的聚合值。<br><br><br>如果over()子句中什么都不写的话，默认开窗范围是：rows between unbounded preceding and unbounded following<br><br><br>*</em>在深入研究Over子句之前，一定要注意：在SQL处理中，窗口函数都是最后一步执行，而且仅位于Order by字句之前。<strong><br></strong><br><a name="e4DLH"></a></p><h2 id="实践准备"><a href="#实践准备" class="headerlink" title="实践准备"></a>实践准备</h2><p><strong>创建Hive表</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE user_match_temp (</span><br><span class="line">user_name string,</span><br><span class="line">opponent string,</span><br><span class="line">result int,</span><br><span class="line">create_time timestamp);</span><br></pre></td></tr></table></figure><p><br>数据量较少，就直接手动插入了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO TABLE user_match_temp values</span><br><span class="line">(&#39;A&#39;,&#39;B&#39;,1,&#39;2019-07-18 23:19:00&#39;),</span><br><span class="line">(&#39;B&#39;,&#39;A&#39;,0,&#39;2019-07-18 23:19:00&#39;),</span><br><span class="line">(&#39;A&#39;,&#39;C&#39;,0,&#39;2019-07-18 23:20:00&#39;),</span><br><span class="line">(&#39;C&#39;,&#39;A&#39;,1,&#39;2019-07-18 23:20:00&#39;),</span><br><span class="line">(&#39;A&#39;,&#39;D&#39;,1,&#39;2019-07-19 22:19:00&#39;),</span><br><span class="line">(&#39;D&#39;,&#39;A&#39;,0,&#39;2019-07-19 22:19:00&#39;),</span><br><span class="line">(&#39;C&#39;,&#39;B&#39;,0,&#39;2019-07-19 23:19:00&#39;),</span><br><span class="line">(&#39;B&#39;,&#39;C&#39;,1,&#39;2019-07-19 23:19:00&#39;);</span><br></pre></td></tr></table></figure><p>数据包含4列，分别为 user_name，opponent，result，create_time。 我们将基于这些数据来介绍下窗口函数的一些使用场景。<br><br><br><strong>原始数据</strong><br>**<br>user_name opponent result create_time<br>A B 1 2019-07-18 23:19:00<br>B A 0 2019-07-18 23:19:00<br>A C 0 2019-07-18 23:20:00<br>C A 1 2019-07-18 23:20:00<br>A D 1 2019-07-19 22:19:00<br>D A 0 2019-07-19 22:19:00<br>C B 0 2019-07-19 23:19:00<br>B C 1 2019-07-19 23:19:00<br></p><p><a name="OOjek"></a></p><h2 id="聚合型窗口函数"><a href="#聚合型窗口函数" class="headerlink" title="聚合型窗口函数"></a>聚合型窗口函数</h2><p><br>聚合型即SUM(), MIN(),MAX(),AVG(),COUNT()这些常见的聚合函数。 聚合函数配合窗口函数使用可以使计算更加灵活，例如以下场景：<br></p><ol><li><p>至今累计分数<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">select *, sum(result) over(partition by user_name order by create_time) result_sum from user_match_temp;</span><br><span class="line"></span><br><span class="line">user_name    opponent   result create_timeresult_sum</span><br><span class="line">AB12019-07-18 23:19:001</span><br><span class="line">AC02019-07-18 23:20:001</span><br><span class="line">AD12019-07-19 22:19:002</span><br><span class="line">BA02019-07-18 23:19:000</span><br><span class="line">BC12019-07-19 23:19:001</span><br><span class="line">CA12019-07-18 23:20:001</span><br><span class="line">CB02019-07-19 23:19:001</span><br><span class="line">DA02019-07-19 22:19:000</span><br></pre></td></tr></table></figure><br></li><li><p>之前3场平均胜场</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">hive (test)&gt; SELECT *,avg(result) over (partition by user_name order by create_time rows between 3 preceding and current row) as recently_wins from user_match_temp;</span><br><span class="line"></span><br><span class="line">user_match_temp.user_nameuser_match_temp.opponentuser_match_temp.resultuser_match_temp.create_timerecently_wins</span><br><span class="line">AB12019-07-18 23:19:001.0</span><br><span class="line">AC02019-07-18 23:20:000.5</span><br><span class="line">AD12019-07-19 22:19:000.6666666666666666</span><br><span class="line">BA02019-07-18 23:19:000.0</span><br><span class="line">BC12019-07-19 23:19:000.5</span><br><span class="line">CA12019-07-18 23:20:001.0</span><br><span class="line">CB02019-07-19 23:19:000.5</span><br><span class="line">DA02019-07-19 22:19:000.0</span><br></pre></td></tr></table></figure></li></ol><p><br>我们通过rows between 即可定义窗口的范围，这里我们定义了窗口的范围为之前3行到该行。</p><ol start="3"><li>累计遇到的对手数量</li></ol><p>需要注意的是count(distinct xxx)在窗口函数里是不允许使用的，不过我们也可以用size(collect_set() over(partition by order by))来替代实现我们的需求</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">hive (test)&gt; SELECT *,size(collect_set(opponent) over (partition by user_name order by create_time)) as recently_wins from user_match_temp;</span><br><span class="line"></span><br><span class="line">user_match_temp.user_nameuser_match_temp.opponentuser_match_temp.resultuser_match_temp.create_timerecently_wins</span><br><span class="line">AB12019-07-18 23:19:001</span><br><span class="line">AC02019-07-18 23:20:002</span><br><span class="line">AD12019-07-19 22:19:003</span><br><span class="line">BA02019-07-18 23:19:001</span><br><span class="line">BC12019-07-19 23:19:002</span><br><span class="line">CA12019-07-18 23:20:001</span><br><span class="line">CB02019-07-19 23:19:002</span><br><span class="line">DA02019-07-19 22:19:001</span><br></pre></td></tr></table></figure><p>collect_set()也是一个聚合函数，作用是将多行聚合进一行的某个set内，再用size()统计集合内的元素个数，即可实现我们的需求。<br></p><p><a name="gpmGg"></a></p><h2 id="分析型窗口函数"><a href="#分析型窗口函数" class="headerlink" title="分析型窗口函数"></a>分析型窗口函数</h2><p>分析型即RANk(),ROW_NUMBER(),DENSE_RANK()等常见的排序用的窗口函数，不过他们也是有区别的。<br><strong><br></strong>排名函数不支持window子句，即不支持自定义窗口大小**</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">hive (test)&gt; SELECT *,rank() over (order by create_time) as user_rank,row_number() over (order by create_time) as user_row_number,dense_rank() over (order by create_time) as user_dense_rank FROM user_match_temp;</span><br><span class="line"></span><br><span class="line">user_name opponentresultcreate_timeuser_rankuser_row_numberuser_dense_rank</span><br><span class="line">BA02019-07-18 23:19:00111</span><br><span class="line">AB12019-07-18 23:19:00121</span><br><span class="line">CA12019-07-18 23:20:00332</span><br><span class="line">AC02019-07-18 23:20:00342</span><br><span class="line">DA02019-07-19 22:19:00553</span><br><span class="line">AD12019-07-19 22:19:00563</span><br><span class="line">BC12019-07-19 23:19:00774</span><br><span class="line">CB02019-07-19 23:19:00784</span><br></pre></td></tr></table></figure><p>如上所示： row_number函数：生成连续的序号（相同元素序号相同）；<br>rank函数：如两元素排序相同则序号相同，并且会跳过下一个序号；<br>dense_rank函数：如两元素排序相同则序号相同，不会跳过下一个序号；<br><br><br>除了这三个排序用的函数，还有 _CUME_DIST函数 ：小于等于当前值的行在所有行中的占比 _PERCENT_RANK() ：小于当前值的行在所有行中的占比 * NTILE() ：如果把数据按行数分为n份，那么该行所属的份数是第几份 这三种窗口函数 sql如下：<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT *,  CUME_DIST() over (order by create_time) as user_CUME_DIST, PERCENT_RANK() over (order by create_time) as user_PERCENT_RANK, NTILE(3) over (order by create_time) as user_NTILE FROM user_match_temp;</span><br></pre></td></tr></table></figure><br><a name="4yXY7"></a> ## 取值型窗口函数 这几个函数可以通过字面意思记得，LAG是迟滞的意思，也就是对某一列进行往后错行；LEAD是LAG的反义词，也就是对某一列进行提前几行；FIRST_VALUE是对该列到目前为止的首个值，而LAST_VALUE是到目前行为止的最后一个值。<br><br>LAG()和LEAD() 可以带3个参数，第一个是返回的值，第二个是前置或者后置的行数，第三个是默认值。<br>下一个对手，上一个对手，最近3局的第一个对手及最后一个对手，如下：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">hive&gt;</span><span class="bash"> SELECT *,</span></span><br><span class="line"><span class="meta">hive&gt;</span><span class="bash">     lag(opponent,1) </span></span><br><span class="line"><span class="meta">hive&gt;</span><span class="bash">         over (partition by user_name order by create_time) as lag_opponent,</span></span><br><span class="line"><span class="meta">hive&gt;</span><span class="bash">     lead(opponent,1) over </span></span><br><span class="line"><span class="meta">hive&gt;</span><span class="bash">         (partition by user_name order by create_time) as lead_opponent,</span></span><br><span class="line"><span class="meta">hive&gt;</span><span class="bash">     first_value(opponent) over (partition by user_name order by create_time rows hive&gt;         between 3 preceding and 3 following) as first_opponent,</span></span><br><span class="line"><span class="meta">hive&gt;</span><span class="bash">     last_value(opponent) over (partition by user_name order by create_time rows hive&gt;         between 3 preceding and 3 following) as last_opponent</span></span><br><span class="line"><span class="meta">hive&gt;</span><span class="bash"> From user_match_temp;</span></span><br></pre></td></tr></table></figure><br><br><br>参考文章：[https://blog.csdn.net/czr11616/article/details/101645693](https://blog.csdn.net/czr11616/article/details/101645693)<br>[https://zhuanlan.zhihu.com/p/77705681](https://zhuanlan.zhihu.com/p/77705681)<br>[https://blog.csdn.net/qq_37296285/article/details/90940591](https://blog.csdn.net/qq_37296285/article/details/90940591)<!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;a name=&quot;e05dce83&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>我的服务器被黑了（二）</title>
    <link href="cpeixin.cn/2019/09/09/%E6%88%91%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A2%AB%E9%BB%91%E4%BA%86%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>cpeixin.cn/2019/09/09/%E6%88%91%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A2%AB%E9%BB%91%E4%BA%86%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2019-09-09T02:26:15.000Z</published>
    <updated>2020-04-04T12:00:14.168Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --><p>苦逼的周一开始了，苦逼的工作开始了，坐到工位上，上班气正在逐渐的减弱，但是当我发现，我的三台服务器又被那些无情的小黑人们盯上了的时候，我的怒气值达到了顶点，同时还感觉有点丢脸，哈哈哈。<br><br><br>由于这三台服务器属于我个人的，没有经过运维兄弟的照顾，所以在安全方面，基本上没有防护。<br>这次是怎么发现的呢，是因为我服务器上的爬虫突然停止了，我带着疑问去看了下系统日志。于是敲下了下面的命令<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl -xe</span><br></pre></td></tr></table></figure><p><br>映入眼帘的是满屏的扫描和ssh尝试登陆<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">50</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">303</span>]: Failed password <span class="keyword">for</span> invalid user admin <span class="keyword">from</span> <span class="number">117.132</span><span class="number">.175</span><span class="number">.25</span> port <span class="number">42972</span> ssh2</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">50</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">303</span>]: Received disconnect <span class="keyword">from</span> <span class="number">117.132</span><span class="number">.175</span><span class="number">.25</span> port <span class="number">42972</span>:<span class="number">11</span>: Bye Bye [preauth]</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">50</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">303</span>]: Disconnected <span class="keyword">from</span> <span class="number">117.132</span><span class="number">.175</span><span class="number">.25</span> port <span class="number">42972</span> [preauth]</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">50</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65525</span>]: Failed password <span class="keyword">for</span> root <span class="keyword">from</span> <span class="number">49.88</span><span class="number">.112</span><span class="number">.54</span> port <span class="number">24184</span> ssh2</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">50</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">302</span>]: Failed password <span class="keyword">for</span> invalid user ansible <span class="keyword">from</span> <span class="number">149.56</span><span class="number">.96</span><span class="number">.78</span> port <span class="number">44980</span> ssh2</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">50</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">302</span>]: Received disconnect <span class="keyword">from</span> <span class="number">149.56</span><span class="number">.96</span><span class="number">.78</span> port <span class="number">44980</span>:<span class="number">11</span>: Bye Bye [preauth]</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">50</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">302</span>]: Disconnected <span class="keyword">from</span> <span class="number">149.56</span><span class="number">.96</span><span class="number">.78</span> port <span class="number">44980</span> [preauth]</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">50</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65525</span>]: pam_succeed_if(sshd:auth): requirement <span class="string">"uid &gt;= 1000"</span> <span class="keyword">not</span> met by user <span class="string">"root"</span></span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">51</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65522</span>]: Failed password <span class="keyword">for</span> root <span class="keyword">from</span> <span class="number">218.92</span><span class="number">.0</span><span class="number">.163</span> port <span class="number">45157</span> ssh2</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">51</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65522</span>]: error: maximum authentication attempts exceeded <span class="keyword">for</span> root <span class="keyword">from</span> <span class="number">218.92</span><span class="number">.0</span><span class="number">.163</span> port <span class="number">45157</span> ssh2 [preauth]</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">51</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65522</span>]: Disconnecting: Too many authentication failures [preauth]</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">51</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65522</span>]: PAM <span class="number">5</span> more authentication failures; logname= uid=<span class="number">0</span> euid=<span class="number">0</span> tty=ssh ruser= rhost=<span class="number">218.92</span><span class="number">.0</span><span class="number">.163</span>  user=root</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">51</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65522</span>]: PAM service(sshd) ignoring max retries; <span class="number">6</span> &gt; <span class="number">3</span></span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">52</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">310</span>]: pam_unix(sshd:auth): authentication failure; logname= uid=<span class="number">0</span> euid=<span class="number">0</span> tty=ssh ruser= rhost=<span class="number">218.92</span><span class="number">.0</span><span class="number">.163</span>  user=root</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">52</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">310</span>]: pam_succeed_if(sshd:auth): requirement <span class="string">"uid &gt;= 1000"</span> <span class="keyword">not</span> met by user <span class="string">"root"</span></span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">53</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65525</span>]: Failed password <span class="keyword">for</span> root <span class="keyword">from</span> <span class="number">49.88</span><span class="number">.112</span><span class="number">.54</span> port <span class="number">24184</span> ssh2</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">53</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65525</span>]: error: maximum authentication attempts exceeded <span class="keyword">for</span> root <span class="keyword">from</span> <span class="number">49.88</span><span class="number">.112</span><span class="number">.54</span> port <span class="number">24184</span> ssh2 [preauth]</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">53</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65525</span>]: Disconnecting: Too many authentication failures [preauth]</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">53</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65525</span>]: PAM <span class="number">5</span> more authentication failures; logname= uid=<span class="number">0</span> euid=<span class="number">0</span> tty=ssh ruser= rhost=<span class="number">49.88</span><span class="number">.112</span><span class="number">.54</span>  user=root</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">53</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65525</span>]: PAM service(sshd) ignoring max retries; <span class="number">6</span> &gt; <span class="number">3</span></span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">54</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">314</span>]: pam_unix(sshd:auth): authentication failure; logname= uid=<span class="number">0</span> euid=<span class="number">0</span> tty=ssh ruser= rhost=<span class="number">49.88</span><span class="number">.112</span><span class="number">.54</span>  user=root</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">54</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">314</span>]: pam_succeed_if(sshd:auth): requirement <span class="string">"uid &gt;= 1000"</span> <span class="keyword">not</span> met by user <span class="string">"root"</span></span><br><span class="line">lines <span class="number">1105</span><span class="number">-1127</span>/<span class="number">1127</span> (END)</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">49</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65522</span>]: pam_succeed_if(sshd:auth): requirement <span class="string">"uid &gt;= 1000"</span> <span class="keyword">not</span> met by user <span class="string">"root"</span></span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">50</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">303</span>]: Failed password <span class="keyword">for</span> invalid user admin <span class="keyword">from</span> <span class="number">117.132</span><span class="number">.175</span><span class="number">.25</span> port <span class="number">42972</span> ssh2</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">50</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">303</span>]: Received disconnect <span class="keyword">from</span> <span class="number">117.132</span><span class="number">.175</span><span class="number">.25</span> port <span class="number">42972</span>:<span class="number">11</span>: Bye Bye [preauth]</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">50</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">303</span>]: Disconnected <span class="keyword">from</span> <span class="number">117.132</span><span class="number">.175</span><span class="number">.25</span> port <span class="number">42972</span> [preauth]</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">50</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65525</span>]: Failed password <span class="keyword">for</span> root <span class="keyword">from</span> <span class="number">49.88</span><span class="number">.112</span><span class="number">.54</span> port <span class="number">24184</span> ssh2</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">50</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">302</span>]: Failed password <span class="keyword">for</span> invalid user ansible <span class="keyword">from</span> <span class="number">149.56</span><span class="number">.96</span><span class="number">.78</span> port <span class="number">44980</span> ssh2</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">50</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">302</span>]: Received disconnect <span class="keyword">from</span> <span class="number">149.56</span><span class="number">.96</span><span class="number">.78</span> port <span class="number">44980</span>:<span class="number">11</span>: Bye Bye [preauth]</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">50</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">302</span>]: Disconnected <span class="keyword">from</span> <span class="number">149.56</span><span class="number">.96</span><span class="number">.78</span> port <span class="number">44980</span> [preauth]</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">50</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65525</span>]: pam_succeed_if(sshd:auth): requirement <span class="string">"uid &gt;= 1000"</span> <span class="keyword">not</span> met by user <span class="string">"root"</span></span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">51</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65522</span>]: Failed password <span class="keyword">for</span> root <span class="keyword">from</span> <span class="number">218.92</span><span class="number">.0</span><span class="number">.163</span> port <span class="number">45157</span> ssh2</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">51</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65522</span>]: error: maximum authentication attempts exceeded <span class="keyword">for</span> root <span class="keyword">from</span> <span class="number">218.92</span><span class="number">.0</span><span class="number">.163</span> port <span class="number">45157</span> ssh2 [preauth]</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">51</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65522</span>]: Disconnecting: Too many authentication failures [preauth]</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">51</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65522</span>]: PAM <span class="number">5</span> more authentication failures; logname= uid=<span class="number">0</span> euid=<span class="number">0</span> tty=ssh ruser= rhost=<span class="number">218.92</span><span class="number">.0</span><span class="number">.163</span>  user=root</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">51</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65522</span>]: PAM service(sshd) ignoring max retries; <span class="number">6</span> &gt; <span class="number">3</span></span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">52</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">310</span>]: pam_unix(sshd:auth): authentication failure; logname= uid=<span class="number">0</span> euid=<span class="number">0</span> tty=ssh ruser= rhost=<span class="number">218.92</span><span class="number">.0</span><span class="number">.163</span>  user=root</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">52</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">310</span>]: pam_succeed_if(sshd:auth): requirement <span class="string">"uid &gt;= 1000"</span> <span class="keyword">not</span> met by user <span class="string">"root"</span></span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">53</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65525</span>]: Failed password <span class="keyword">for</span> root <span class="keyword">from</span> <span class="number">49.88</span><span class="number">.112</span><span class="number">.54</span> port <span class="number">24184</span> ssh2</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">53</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65525</span>]: error: maximum authentication attempts exceeded <span class="keyword">for</span> root <span class="keyword">from</span> <span class="number">49.88</span><span class="number">.112</span><span class="number">.54</span> port <span class="number">24184</span> ssh2 [preauth]</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">53</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65525</span>]: Disconnecting: Too many authentication failures [preauth]</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">53</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65525</span>]: PAM <span class="number">5</span> more authentication failures; logname= uid=<span class="number">0</span> euid=<span class="number">0</span> tty=ssh ruser= rhost=<span class="number">49.88</span><span class="number">.112</span><span class="number">.54</span>  user=root</span><br><span class="line">Sep <span class="number">09</span> <span class="number">11</span>:<span class="number">02</span>:<span class="number">53</span> <span class="number">4</span>Z-J16-A47 sshd[<span class="number">65525</span>]: PAM service(sshd) ignoring max retries; <span class="number">6</span> &gt; <span class="number">3</span></span><br></pre></td></tr></table></figure><p><br>看到这里，感觉自己家的鸡，随时都要被偷走呀。。。。这还了得。于是马上开始了加固防护<br>对待这种情况，就是要禁止root用户远程登录，使用新建普通用户，进行远程登录，还有重要的一点，修改默认22端口。<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@*** ~]<span class="comment"># useradd one             #创建用户</span></span><br><span class="line">[root@*** ~]<span class="comment"># passwd one              #设置密码</span></span><br></pre></td></tr></table></figure><p><br>输入新用户密码<br>首先确保文件 /etc/sudoers 中<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">%wheel    ALL=(ALL)    ALL</span><br><span class="line">```  </span><br><span class="line">没有被注释</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```linux</span><br><span class="line">usermod -g wheel onerocket</span><br></pre></td></tr></table></figure><p><br>设置只有指定用户组才能使用su命令切换到root用户<br><br><br>在linux中，有一个默认的管理组 wheel。在实际生产环境中，即使我们有系统管理员root的权限，也不推荐用root用户登录。一般情况下用普通用户登录就可以了，在需要root权限执行一些操作时，再su登录成为root用户。但是，任何人只要知道了root的密码，就都可以通过su命令来登录为root用户，这无疑为系统带来了安全隐患。所以，将普通用户加入到wheel组，被加入的这个普通用户就成了管理员组内的用户。然后设置只有wheel组内的成员可以使用su命令切换到root用户。<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /bin/bash</span></span><br><span class="line"><span class="comment"># Function: 修改配置文件，使得只有wheel组的用户可以使用 su 权限</span></span><br><span class="line">sed -i <span class="string">'/pam_wheel.so use_uid/c\auth            required        pam_wheel.so use_uid '</span> /etc/pam.d/su</span><br><span class="line">n=`cat /etc/login.defs | grep SU_WHEEL_ONLY | wc -l`</span><br><span class="line"><span class="keyword">if</span> [ $n -eq <span class="number">0</span> ];then</span><br><span class="line">echo SU_WHEEL_ONLY yes &gt;&gt; /etc/login.defs</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><br>打开SSHD的配置文件<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p><br>查找“#PermitRootLogin yes”，将前面的“#”去掉，短尾“yes”改为“no”（不同版本可能区分大小写），并保存文件。<br><br><br>修改sshd默认端口<br>虽然更改端口无法在根本上抵御端口扫描，但是，可以在一定程度上提高防御。<br>打开sshd配置文件<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p><br>找到#Port 22 删掉注释<br><br><br><em>服务器端口最大可以开到65536</em><br><br><br>同时再添加一个Port 61024 （随意设置）<br><br><br>Port 22<br>Port 61024<br><br><br>重启sshd服务<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service sshd restart      <span class="comment">#centos6系列</span></span><br><span class="line">systemctl restart sshd  <span class="comment">#centos7系列</span></span><br><span class="line">firewall-cmd --add-port=<span class="number">61024</span>/tcp</span><br></pre></td></tr></table></figure><p><br>测试，使用新用户，新端口进行登录<br><br><br>如果登陆成功后，再将Port22注释掉，重启sshd服务。<br>到这里，关于远程登录的防护工作，就做好了。<br>最后，告诫大家，亲身体验，没有防护裸奔的服务器，真的太容易被抓肉鸡了！！！！！</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;苦逼的周一开始了，苦逼的工作开始了，坐到工位上，上班气正在逐渐的减弱，但是当我发现，我的三台服务器又被那些无情的小黑人们盯上了的时候，我的怒气值
      
    
    </summary>
    
    
      <category term="Linux" scheme="cpeixin.cn/categories/Linux/"/>
    
    
      <category term="服务器安全" scheme="cpeixin.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>我的服务器被黑了</title>
    <link href="cpeixin.cn/2019/08/24/%E6%88%91%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A2%AB%E9%BB%91%E4%BA%86/"/>
    <id>cpeixin.cn/2019/08/24/%E6%88%91%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A2%AB%E9%BB%91%E4%BA%86/</id>
    <published>2019-08-24T02:26:15.000Z</published>
    <updated>2020-04-04T12:00:09.871Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --><p><a name="-2"></a></p><h1 id="服务器自述"><a href="#服务器自述" class="headerlink" title="服务器自述"></a>服务器自述</h1><p>我是一台8核，16G内存，4T的Linux (centOS 7)服务器… 还有两台和我一起被买来的苦主，我们一同长大，配置一样，都是从香港被贩卖到国外，我们三个组成了分布式爬虫框架，另两位苦主分别负责异步爬取连接，多进程爬取连接和scrapy-redis分布式爬取解析。<br><br><br>而我比较清闲，只负责存储. 网页链接放在我的redis中，而解析好的文章信息放在我的MySQL中。然而故事的开始，就是在安装redis的那天，主人的粗心大意，为了节省时间，从而让他今天花费了小半天来对我进行维修！！😢<br><a name="-3"></a></p><h1 id="为什么黑我的服务器"><a href="#为什么黑我的服务器" class="headerlink" title="为什么黑我的服务器"></a>为什么黑我的服务器</h1><p>这样一台配置的服务器，一个月的价格大概在1000RMB一个月，怎么说呢… 这个价格的服务器对于个人用户搭建自己玩的环境还是有些小贵的。例如我现在写博客，也是托管在GitHub上的，我也可以租用一台服务器来托管的博客，但是目前我的这种级别，也是要考虑到投入产出比是否合适，哈哈哈。<br><br><br>但是对于，服务器上运行的任务和服务产出的价值要远远大于服务器价值的时候，这1000多RMB就可以忽略不计了。同时，还有黑衣人，他们需要大量的服务器，来运行同样的程序，产出的价值他们也无法衡量，有可能很多有可能很少。。<br><br><br>那么这时候，他们为了节约成本，降低成本，就会用一些黑色的手法，例如渗透，sql注入，根据漏洞扫描等方法来 抓“肉鸡”，抓到大量的可侵入的服务器，然后在你的服务器上的某一个角落，放上他的程序，一直在运行，一直在运行，占用着你的cpu,占用着你的带宽…<br><br><br>那么上面提到的黑衣人，就有那么一类角色，“矿工”！！！！<br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1585404954445-f30a25a0-5939-4773-b5d9-8bb6a7c53b02.png#align=left&display=inline&height=892&name=1.png&originHeight=892&originWidth=1244&size=1778564&status=done&style=none&width=1244" alt="1.png"><br><br><br>曾经，我也专注过区块链，我也短暂的迷失在数字货币的浪潮中，但是没有吃到红利👀👀👀 就是这些数字世界的矿工，利用我服务器的漏洞黑了我的服务器<br><a name="-4"></a></p><h1 id="如何发现被黑"><a href="#如何发现被黑" class="headerlink" title="如何发现被黑"></a>如何发现被黑</h1><p>回到这篇博客的正题，我是如何发现，我的服务器被黑了呢？？<br><br><br>最近我在做scrapy分布式爬虫方面的工作，准备了三台服务器，而这台被黑的服务器是我用来做存储的，其中用到了redis和mysql。其中引发这件事情的就是redis，我在安装redis的时候，可以说责任完全在我，我为了安装节约时间，以后使用方便等，做了几个很错误的操作<br><br><br>1.关闭了Linux防火墙<br><br><br>2.没有设置redis访问密码<br><br><br>3.没有更改redis默认端口<br><br><br>4.开放了任意IP可以远程连接<br><br><br>以上四个很傻的操作,都是因为以前所用的redis都是有公司运维同事进行安装以及安全策略方面的配置，以至我这一次没有注意到安装方面。<br><br><br>当我的爬虫程序已经平稳的运行了两天了，我就开始放心了，静静地看着spider疯狂的spider,可是就是在随后，redis服务出现异常，首先是我本地客户端连接不上远程redis-server，我有想过是不是网络不稳定的问题。在我重启redis后，恢复正常，又平稳的运行了一天。<br><br><br>但是接下来redis频繁出问题，我就想，是不是爬虫爬取了大量的网页链接，对redis造成了阻塞。于是，我开启了对redis.conf，还有程序端的connect两方面360度的优化，然并卵。。。<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i tcp:<span class="number">6379</span></span><br></pre></td></tr></table></figure><p><br>使用上面的命令后，发现redis服务正常运行，6379端口也是开启的。我陷入了深深地迷惑。。。。。<br><br><br>但是这时其实就应该看出一些端倪了，因为正常占用 6379 端口的进程名是 ： redis-ser 。但是现在占用 6379 端口的进程名是 ：xmrig-no (忘记截图了)，但是这时我也没有多想<br>直到我运行：<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top</span><br></pre></td></tr></table></figure><p><br><img src="https://cdn.nlark.com/yuque/0/2020/png/1072113/1585404912911-97736d80-2ee3-455d-a948-6d134f4e2663.png#align=left&display=inline&height=534&name=2.png&originHeight=534&originWidth=3338&size=980508&status=done&style=none&width=3338" alt="2.png"><br>发现了占用 6379 端口的进程全名称xmrig…，我才恍然大悟，我的端口被占用了。我在google上一查，才发现。。我被黑了<br><a name="-5"></a></p><h1 id="做了哪些急救工作"><a href="#做了哪些急救工作" class="headerlink" title="做了哪些急救工作"></a>做了哪些急救工作</h1><p>这时，感觉自己开始投入了一场对抗战<br><br><br>1.首先查找植入程序的位置。<br>在/tmp/目录下，一般植入程序都会放在 /tmp 临时目录下，其实回过头一想，放在这里，也是挺妙的。<br><br><br>2.删除清理可疑文件<br><br><br>杀死进程<br><br><br>删除了正在运行的程序文件还有安装包<br>3.查看所有用户的定时任务<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd |cut -f <span class="number">1</span> -d:crontab -uXXX -l</span><br></pre></td></tr></table></figure><p><br>4.开启防火墙<br><br><br>仅开放会使用到的端口<br>5.修改redis默认端口<br><br><br>redis.conf中的port<br>6.添加redis授权密码<br><br><br>redis.conf中的requirepass<br>7.修改绑定远程绑定ip<br><br><br>redis.conf中的bind<br>最后重启redis服务！<br><a name="-6"></a></p><h1 id="从中学到了什么"><a href="#从中学到了什么" class="headerlink" title="从中学到了什么"></a>从中学到了什么</h1><p>明明是自己被黑了，但是在补救的过程中，却得到了写程序给不了的满足感。感觉因为这件事情，上帝给我打开了另一扇窗户～～～<br>最后说下，这个木马是怎么进来的呢，查了一下原来是利用Redis端口漏洞进来的，它可以对未授权访问redis的服务器登录，定时下载并执行脚本，脚本运行，挖矿，远程调用等。所以除了执行上述操作，linux服务器中的用户权限，服务权限精细化，防止再次被入侵。<br></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Aug 05 2020 10:54:44 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;a name=&quot;-2&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;h1 id=&quot;服务器自述&quot;&gt;&lt;a href=&quot;#服务器自述&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
      <category term="Linux" scheme="cpeixin.cn/categories/Linux/"/>
    
    
      <category term="服务器安全" scheme="cpeixin.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
</feed>
